

Microchip Technology PIC LITE Macro Assembler V1.34 build -361300703 
                                                                                               Sat May 16 17:24:45 2015

Microchip Technology Omniscient Code Generator (Lite mode) build 201502162209
     1                           	processor	16F1827
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	intentry,global,class=CODE,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     8                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
     9                           	dabs	1,0x7E,2
    10  0000                     	;# 
    11  0001                     	;# 
    12  0002                     	;# 
    13  0003                     	;# 
    14  0004                     	;# 
    15  0005                     	;# 
    16  0006                     	;# 
    17  0007                     	;# 
    18  0008                     	;# 
    19  0009                     	;# 
    20  000A                     	;# 
    21  000B                     	;# 
    22  000C                     	;# 
    23  000D                     	;# 
    24  0011                     	;# 
    25  0012                     	;# 
    26  0013                     	;# 
    27  0014                     	;# 
    28  0015                     	;# 
    29  0016                     	;# 
    30  0016                     	;# 
    31  0017                     	;# 
    32  0018                     	;# 
    33  0019                     	;# 
    34  001A                     	;# 
    35  001B                     	;# 
    36  001C                     	;# 
    37  001E                     	;# 
    38  001F                     	;# 
    39  008C                     	;# 
    40  008D                     	;# 
    41  0091                     	;# 
    42  0092                     	;# 
    43  0093                     	;# 
    44  0094                     	;# 
    45  0095                     	;# 
    46  0096                     	;# 
    47  0097                     	;# 
    48  0098                     	;# 
    49  0099                     	;# 
    50  009A                     	;# 
    51  009B                     	;# 
    52  009B                     	;# 
    53  009C                     	;# 
    54  009D                     	;# 
    55  009E                     	;# 
    56  010C                     	;# 
    57  010D                     	;# 
    58  0111                     	;# 
    59  0112                     	;# 
    60  0113                     	;# 
    61  0114                     	;# 
    62  0115                     	;# 
    63  0116                     	;# 
    64  0117                     	;# 
    65  0118                     	;# 
    66  0119                     	;# 
    67  011A                     	;# 
    68  011B                     	;# 
    69  011D                     	;# 
    70  011E                     	;# 
    71  018C                     	;# 
    72  018D                     	;# 
    73  0191                     	;# 
    74  0191                     	;# 
    75  0192                     	;# 
    76  0193                     	;# 
    77  0193                     	;# 
    78  0193                     	;# 
    79  0194                     	;# 
    80  0195                     	;# 
    81  0196                     	;# 
    82  0199                     	;# 
    83  019A                     	;# 
    84  019B                     	;# 
    85  019B                     	;# 
    86  019B                     	;# 
    87  019B                     	;# 
    88  019C                     	;# 
    89  019C                     	;# 
    90  019D                     	;# 
    91  019E                     	;# 
    92  019F                     	;# 
    93  020C                     	;# 
    94  020D                     	;# 
    95  0211                     	;# 
    96  0211                     	;# 
    97  0212                     	;# 
    98  0212                     	;# 
    99  0213                     	;# 
   100  0213                     	;# 
   101  0214                     	;# 
   102  0214                     	;# 
   103  0215                     	;# 
   104  0215                     	;# 
   105  0215                     	;# 
   106  0216                     	;# 
   107  0216                     	;# 
   108  0217                     	;# 
   109  0217                     	;# 
   110  0219                     	;# 
   111  021A                     	;# 
   112  021B                     	;# 
   113  021C                     	;# 
   114  021D                     	;# 
   115  021E                     	;# 
   116  021F                     	;# 
   117  0291                     	;# 
   118  0291                     	;# 
   119  0292                     	;# 
   120  0293                     	;# 
   121  0294                     	;# 
   122  0295                     	;# 
   123  0295                     	;# 
   124  0296                     	;# 
   125  0298                     	;# 
   126  0298                     	;# 
   127  0299                     	;# 
   128  029A                     	;# 
   129  029B                     	;# 
   130  029C                     	;# 
   131  029C                     	;# 
   132  029D                     	;# 
   133  029E                     	;# 
   134  029E                     	;# 
   135  0311                     	;# 
   136  0311                     	;# 
   137  0312                     	;# 
   138  0313                     	;# 
   139  0318                     	;# 
   140  0318                     	;# 
   141  0319                     	;# 
   142  031A                     	;# 
   143  0394                     	;# 
   144  0395                     	;# 
   145  0396                     	;# 
   146  039A                     	;# 
   147  039C                     	;# 
   148  039D                     	;# 
   149  039E                     	;# 
   150  039F                     	;# 
   151  0415                     	;# 
   152  0416                     	;# 
   153  0417                     	;# 
   154  041C                     	;# 
   155  041D                     	;# 
   156  041E                     	;# 
   157  0FE4                     	;# 
   158  0FE5                     	;# 
   159  0FE6                     	;# 
   160  0FE7                     	;# 
   161  0FE8                     	;# 
   162  0FE9                     	;# 
   163  0FEA                     	;# 
   164  0FEB                     	;# 
   165  0FED                     	;# 
   166  0FEE                     	;# 
   167  0FEF                     	;# 
   168  000C                     _PORTA	set	12
   169  000D                     _PORTB	set	13
   170  0015                     _TMR0	set	21
   171  005F                     _GIE	set	95
   172  0062                     _RA2	set	98
   173  0063                     _RA3	set	99
   174  006E                     _RB6	set	110
   175  006F                     _RB7	set	111
   176  005D                     _TMR0IE	set	93
   177  005A                     _TMR0IF	set	90
   178  0095                     _OPTION_REG	set	149
   179  0099                     _OSCCON	set	153
   180  008C                     _TRISA	set	140
   181  008D                     _TRISB	set	141
   182  018C                     _ANSELA	set	396
   183  018D                     _ANSELB	set	397
   184                           
   185                           	psect	intentry
   186  0004                     __pintentry:	
   187                           
   188                           ; #config settings
   189  0000                     
   190 ;; *************** function _Timer *****************
   191 ;; Defined at:
   192 ;;		line 33 in file "main.c"
   193 ;; Parameters:    Size  Location     Type
   194 ;;		None
   195 ;; Auto vars:     Size  Location     Type
   196 ;;		None
   197 ;; Return value:  Size  Location     Type
   198 ;;		None               void
   199 ;; Registers used:
   200 ;;		wreg
   201 ;; Tracked objects:
   202 ;;		On entry : 0/0
   203 ;;		On exit  : 0/0
   204 ;;		Unchanged: 0/0
   205 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
   206 ;;      Params:         0       0       0       0       0       0
   207 ;;      Locals:         0       0       0       0       0       0
   208 ;;      Temps:          1       0       0       0       0       0
   209 ;;      Totals:         1       0       0       0       0       0
   210 ;;Total ram usage:        1 bytes
   211 ;; Hardware stack levels used:    1
   212 ;; This function calls:
   213 ;;		Nothing
   214 ;; This function is called by:
   215 ;;		Interrupt level 1
   216 ;; This function uses a non-reentrant model
   217 ;;
   218  0004                     _Timer:	
   219                           
   220                           ;incstack = 0
   221                           ; Regs used in _Timer: [wreg]
   222  0004  3180               	pagesel	$
   223  0005  0020               	movlb	0	; select bank0
   224  0006  087F               	movf	127,w
   225  0007  00F6               	movwf	??_Timer
   226                           
   227                           ;main.c: 35: if(TMR0IF == 1){
   228  0008  1D0B               	btfss	11,2	;volatile
   229  0009  2811               	goto	i1l42
   230                           
   231                           ;main.c: 36: TMR0 = 246;
   232  000A  30F6               	movlw	246
   233  000B  0095               	movwf	21	;volatile
   234                           
   235                           ;main.c: 37: Tcount++;
   236  000C  3001               	movlw	1
   237  000D  07F0               	addwf	_Tcount,f
   238  000E  3000               	movlw	0
   239  000F  3DF1               	addwfc	_Tcount+1,f
   240                           
   241                           ;main.c: 38: TMR0IF = 0;
   242  0010  110B               	bcf	11,2	;volatile
   243  0011                     i1l42:	
   244  0011  0876               	movf	??_Timer,w
   245  0012  00FF               	movwf	127
   246  0013  0009               	retfie
   247  0014                     __end_of_Timer:	
   248  007E                     btemp	set	126	;btemp
   249  007E                     wtemp	set	126
   250  007E                     wtemp0	set	126
   251  0080                     wtemp1	set	128
   252  0082                     wtemp2	set	130
   253  0084                     wtemp3	set	132
   254  0086                     wtemp4	set	134
   255  0088                     wtemp5	set	136
   256  007F                     wtemp6	set	127
   257  007E                     ttemp	set	126
   258  007E                     ttemp0	set	126
   259  0081                     ttemp1	set	129
   260  0084                     ttemp2	set	132
   261  0087                     ttemp3	set	135
   262  007F                     ttemp4	set	127
   263  007E                     ltemp	set	126
   264  007E                     ltemp0	set	126
   265  0082                     ltemp1	set	130
   266  0086                     ltemp2	set	134
   267  0080                     ltemp3	set	128
   268                           
   269                           	psect	cinit
   270  0016                     start_initialization:	
   271  0016                     __initialization:	
   272                           
   273                           ; Clear objects allocated to COMMON
   274  0016  01F0               	clrf	__pbssCOMMON& (0+127)
   275  0017  01F1               	clrf	(__pbssCOMMON+1)& (0+127)
   276  0018  01F2               	clrf	(__pbssCOMMON+2)& (0+127)
   277  0019  01F3               	clrf	(__pbssCOMMON+3)& (0+127)
   278  001A  01F4               	clrf	(__pbssCOMMON+4)& (0+127)
   279  001B  01F5               	clrf	(__pbssCOMMON+5)& (0+127)
   280  001C                     end_of_initialization:	
   281                           ;End of C runtime variable initialization code
   282                           
   283  001C                     __end_of__initialization:	
   284  001C  0020               	movlb	0
   285  001D  3180  281F         	ljmp	_main	;jump to C main() function
   286                           
   287                           	psect	bssCOMMON
   288  0070                     __pbssCOMMON:	
   289  0070                     _Tcount:	
   290  0070                     	ds	2
   291  0072                     _Xcount:	
   292  0072                     	ds	2
   293  0074                     _Ycount:	
   294  0074                     	ds	2
   295                           
   296                           	psect	cstackCOMMON
   297  0076                     __pcstackCOMMON:	
   298  0076                     ?_Timer:	
   299  0076                     ??_Timer:	
   300                           ; 0 bytes @ 0x0
   301                           
   302  0076                     ?_main:	
   303                           ; 0 bytes @ 0x0
   304                           
   305                           
   306                           ; 0 bytes @ 0x0
   307  0076                     	ds	1
   308  0077                     ??_main:	
   309                           
   310                           ; 0 bytes @ 0x1
   311  0077                     	ds	1
   312                           
   313                           	psect	maintext
   314  001F                     __pmaintext:	
   315 ;;
   316 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   317 ;;
   318 ;; *************** function _main *****************
   319 ;; Defined at:
   320 ;;		line 42 in file "main.c"
   321 ;; Parameters:    Size  Location     Type
   322 ;;		None
   323 ;; Auto vars:     Size  Location     Type
   324 ;;		None
   325 ;; Return value:  Size  Location     Type
   326 ;;		None               void
   327 ;; Registers used:
   328 ;;		wreg, status,2
   329 ;; Tracked objects:
   330 ;;		On entry : B1F/0
   331 ;;		On exit  : 0/0
   332 ;;		Unchanged: 0/0
   333 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
   334 ;;      Params:         0       0       0       0       0       0
   335 ;;      Locals:         0       0       0       0       0       0
   336 ;;      Temps:          1       0       0       0       0       0
   337 ;;      Totals:         1       0       0       0       0       0
   338 ;;Total ram usage:        1 bytes
   339 ;; Hardware stack levels required when called:    1
   340 ;; This function calls:
   341 ;;		Nothing
   342 ;; This function is called by:
   343 ;;		Startup code after reset
   344 ;; This function uses a non-reentrant model
   345 ;;
   346                           
   347                           
   348                           ;psect for function _main
   349  001F                     _main:	
   350                           
   351                           ;main.c: 44: OSCCON = 0x72;
   352                           
   353                           ;incstack = 0
   354                           ; Regs used in _main: [wreg+status,2]
   355  001F  3072               	movlw	114
   356  0020  0021               	movlb	1	; select bank1
   357  0021  0099               	movwf	25	;volatile
   358                           
   359                           ;main.c: 45: TRISA = 0b00101100;
   360  0022  302C               	movlw	44
   361  0023  008C               	movwf	12	;volatile
   362                           
   363                           ;main.c: 46: PORTA = 0x00;
   364  0024  0020               	movlb	0	; select bank0
   365  0025  018C               	clrf	12	;volatile
   366                           
   367                           ;main.c: 47: ANSELA = 0x00;
   368  0026  0023               	movlb	3	; select bank3
   369  0027  018C               	clrf	12	;volatile
   370                           
   371                           ;main.c: 48: TRISB = 0b00000010;
   372  0028  3002               	movlw	2
   373  0029  0021               	movlb	1	; select bank1
   374  002A  008D               	movwf	13	;volatile
   375                           
   376                           ;main.c: 49: PORTB = 0x00;
   377  002B  0020               	movlb	0	; select bank0
   378  002C  018D               	clrf	13	;volatile
   379                           
   380                           ;main.c: 50: ANSELB = 0x00;
   381  002D  0023               	movlb	3	; select bank3
   382  002E  018D               	clrf	13	;volatile
   383                           
   384                           ;main.c: 53: OPTION_REG = 0b00000000;
   385  002F  0021               	movlb	1	; select bank1
   386  0030  0195               	clrf	21	;volatile
   387                           
   388                           ;main.c: 54: TMR0 = 0;
   389  0031  0020               	movlb	0	; select bank0
   390  0032  0195               	clrf	21	;volatile
   391                           
   392                           ;main.c: 55: TMR0IF = 0;
   393  0033  110B               	bcf	11,2	;volatile
   394                           
   395                           ;main.c: 56: TMR0IE = 0;
   396  0034  128B               	bcf	11,5	;volatile
   397                           
   398                           ;main.c: 57: GIE = 1;
   399  0035  178B               	bsf	11,7	;volatile
   400  0036                     l46:	
   401                           ;main.c: 67: while(RA2 == 1);
   402                           
   403                           ;main.c: 65: while(1){
   404                           
   405  0036  190C               	btfsc	12,2	;volatile
   406  0037  2836               	goto	l46
   407  0038                     l49:	
   408                           ;main.c: 68: while(RA2 == 0);
   409                           
   410  0038  1D0C               	btfss	12,2	;volatile
   411  0039  2838               	goto	l49
   412                           
   413                           ;main.c: 69: TMR0 = 246;
   414  003A  30F6               	movlw	246
   415  003B  0095               	movwf	21	;volatile
   416                           
   417                           ;main.c: 70: Tcount = 0;
   418  003C  01F0               	clrf	_Tcount
   419  003D  01F1               	clrf	_Tcount+1
   420  003E                     l52:	
   421                           ;main.c: 72: while(RA2 == 1);
   422                           
   423  003E  190C               	btfsc	12,2	;volatile
   424  003F  283E               	goto	l52
   425                           
   426                           ;main.c: 73: Xcount = Tcount;
   427  0040  0871               	movf	_Tcount+1,w
   428  0041  00F3               	movwf	_Xcount+1
   429  0042  0870               	movf	_Tcount,w
   430  0043  00F2               	movwf	_Xcount
   431  0044                     l55:	
   432                           ;main.c: 76: while(RA3 == 1);
   433                           
   434  0044  198C               	btfsc	12,3	;volatile
   435  0045  2844               	goto	l55
   436  0046                     l58:	
   437                           ;main.c: 77: while(RA3 == 0);
   438                           
   439  0046  1D8C               	btfss	12,3	;volatile
   440  0047  2846               	goto	l58
   441                           
   442                           ;main.c: 78: TMR0 = 246;
   443  0048  30F6               	movlw	246
   444  0049  0095               	movwf	21	;volatile
   445                           
   446                           ;main.c: 79: Tcount = 0;
   447  004A  01F0               	clrf	_Tcount
   448  004B  01F1               	clrf	_Tcount+1
   449  004C                     l61:	
   450                           ;main.c: 81: while(RA3 == 1);
   451                           
   452  004C  198C               	btfsc	12,3	;volatile
   453  004D  284C               	goto	l61
   454                           
   455                           ;main.c: 82: Ycount = Tcount;
   456  004E  0871               	movf	_Tcount+1,w
   457  004F  00F5               	movwf	_Ycount+1
   458  0050  0870               	movf	_Tcount,w
   459  0051  00F4               	movwf	_Ycount
   460                           
   461                           ;main.c: 85: if(Xcount >= 140 && Xcount <= 160){
   462  0052  0873               	movf	_Xcount+1,w
   463  0053  3A80               	xorlw	128
   464  0054  00F7               	movwf	??_main
   465  0055  3080               	movlw	128
   466  0056  0277               	subwf	??_main,w
   467  0057  1D03               	skipz
   468  0058  285B               	goto	u85
   469  0059  308C               	movlw	140
   470  005A  0272               	subwf	_Xcount,w
   471  005B                     u85:	
   472  005B  1C03               	skipc
   473  005C  286B               	goto	l64
   474  005D  0873               	movf	_Xcount+1,w
   475  005E  3A80               	xorlw	128
   476  005F  00F7               	movwf	??_main
   477  0060  3080               	movlw	128
   478  0061  0277               	subwf	??_main,w
   479  0062  1D03               	skipz
   480  0063  2866               	goto	u95
   481  0064  30A1               	movlw	161
   482  0065  0272               	subwf	_Xcount,w
   483  0066                     u95:	
   484  0066  1803               	skipnc
   485  0067  286B               	goto	l64
   486                           
   487                           ;main.c: 86: RB6 = 0;
   488  0068  0020               	movlb	0	; select bank0
   489  0069  130D               	bcf	13,6	;volatile
   490                           
   491                           ;main.c: 87: }else{
   492  006A  286D               	goto	l572
   493  006B                     l64:	
   494                           
   495                           ;main.c: 88: RB6 = 1;
   496  006B  0020               	movlb	0	; select bank0
   497  006C  170D               	bsf	13,6	;volatile
   498  006D                     l572:	
   499                           
   500                           ;main.c: 89: }
   501                           ;main.c: 91: if(Ycount >= 140 && Ycount <= 160){
   502  006D  0875               	movf	_Ycount+1,w
   503  006E  3A80               	xorlw	128
   504  006F  00F7               	movwf	??_main
   505  0070  3080               	movlw	128
   506  0071  0277               	subwf	??_main,w
   507  0072  1D03               	skipz
   508  0073  2876               	goto	u105
   509  0074  308C               	movlw	140
   510  0075  0274               	subwf	_Ycount,w
   511  0076                     u105:	
   512  0076  1C03               	skipc
   513  0077  2886               	goto	l66
   514  0078  0875               	movf	_Ycount+1,w
   515  0079  3A80               	xorlw	128
   516  007A  00F7               	movwf	??_main
   517  007B  3080               	movlw	128
   518  007C  0277               	subwf	??_main,w
   519  007D  1D03               	skipz
   520  007E  2881               	goto	u115
   521  007F  30A1               	movlw	161
   522  0080  0274               	subwf	_Ycount,w
   523  0081                     u115:	
   524  0081  1803               	skipnc
   525  0082  2886               	goto	l66
   526                           
   527                           ;main.c: 92: RB7 = 0;
   528  0083  0020               	movlb	0	; select bank0
   529  0084  138D               	bcf	13,7	;volatile
   530                           
   531                           ;main.c: 93: }else{
   532  0085  2836               	goto	l46
   533  0086                     l66:	
   534                           
   535                           ;main.c: 94: RB7 = 1;
   536  0086  0020               	movlb	0	; select bank0
   537  0087  178D               	bsf	13,7	;volatile
   538  0088  2836               	goto	l46
   539  0089                     __end_of_main:	


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         6
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      2       8
    BANK0            80      0       0
    BANK1            80      0       0
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            48      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _Timer in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _Timer in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _Timer in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _Timer in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _Timer in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _Timer in BANK4

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0       0
                                              1 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (1) _Timer                                                1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)

 _Timer (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             170      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      2       8       2       57.1%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0       8       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITBANK3            50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BANK3               50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITBANK4            30      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BANK4               30      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
DATA                 0      0       8      15        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.34 build -361300703 
Symbol Table                                                                                   Sat May 16 17:24:45 2015

            __CFG_CP$OFF 0000                       l52 003E                       l61 004C  
                     l46 0036                       l55 0044                       l64 006B  
                     l49 0038                       l66 0086                       l58 0046  
                     u85 005B                       u95 0066                      l572 006D  
                    _GIE 005F                      _RA2 0062                      _RA3 0063  
                    _RB6 006E                      _RB7 006F                      u105 0076  
                    u115 0081             __CFG_CPD$OFF 0000             __CFG_BORV$LO 0000  
           __CFG_LVP$OFF 0000                     i1l42 0011                     _TMR0 0015  
           __CFG_WRT$OFF 0000                     _main 001F                     btemp 007E  
                   ltemp 007E                     start 0014                     ttemp 007E  
                   wtemp 007E            __CFG_IESO$OFF 0000                    ?_main 0076  
          __CFG_WDTE$OFF 0000                    _PORTA 000C                    _PORTB 000D  
                  _TRISA 008C                    _TRISB 008D           __CFG_FCMEN$OFF 0000  
                  _Timer 0004           __CFG_BOREN$OFF 0000                    ltemp0 007E  
                  ltemp1 0082                    ltemp2 0086                    ltemp3 0080  
                  ttemp0 007E                    ttemp1 0081                    ttemp2 0084  
                  ttemp3 0087                    ttemp4 007F                    wtemp0 007E  
                  wtemp1 0080                    wtemp2 0082                    wtemp3 0084  
                  wtemp4 0086                    wtemp5 0088                    wtemp6 007F  
         __CFG_MCLRE$OFF 0000          __initialization 0016             __end_of_main 0089  
                 ??_main 0077           __CFG_PLLEN$OFF 0000                   ?_Timer 0076  
                 _ANSELA 018C                   _ANSELB 018D                   _OSCCON 0099  
                 _TMR0IE 005D                   _TMR0IF 005A           __CFG_PWRTE$OFF 0000  
                 _Tcount 0070                   _Xcount 0072                   _Ycount 0074  
__end_of__initialization 001C           __pcstackCOMMON 0076            __end_of_Timer 0014  
                ??_Timer 0076               __pmaintext 001F               __pintentry 0004  
        __CFG_STVREN$OFF 0000     end_of_initialization 001C         __CFG_FOSC$INTOSC 0000  
    start_initialization 0016              __pbssCOMMON 0070                ___latbits 0001  
         __size_of_Timer 0010            __size_of_main 006A                 intlevel1 0000  
      __CFG_CLKOUTEN$OFF 0000               _OPTION_REG 0095  
