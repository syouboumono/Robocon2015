

Microchip Technology PIC LITE Macro Assembler V1.34 build -361300703 
                                                                                               Fri Jul 31 17:20:31 2015

Microchip Technology Omniscient Code Generator (Lite mode) build 201502162209
     1                           	processor	16F1829
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	stringtext,global,reloc=256,class=STRCODE,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     7                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     8                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    10                           	psect	text1,local,class=CODE,merge=1,delta=2
    11                           	psect	text2,local,class=CODE,merge=1,delta=2
    12                           	psect	text3,local,class=CODE,merge=1,delta=2
    13                           	psect	text4,local,class=CODE,merge=1,delta=2
    14                           	psect	text5,local,class=CODE,merge=1,delta=2
    15                           	dabs	1,0x7E,2
    16  0000                     	;# 
    17  0001                     	;# 
    18  0002                     	;# 
    19  0003                     	;# 
    20  0004                     	;# 
    21  0005                     	;# 
    22  0006                     	;# 
    23  0007                     	;# 
    24  0008                     	;# 
    25  0009                     	;# 
    26  000A                     	;# 
    27  000B                     	;# 
    28  000C                     	;# 
    29  000D                     	;# 
    30  000E                     	;# 
    31  0011                     	;# 
    32  0012                     	;# 
    33  0013                     	;# 
    34  0014                     	;# 
    35  0015                     	;# 
    36  0016                     	;# 
    37  0016                     	;# 
    38  0017                     	;# 
    39  0018                     	;# 
    40  0019                     	;# 
    41  001A                     	;# 
    42  001B                     	;# 
    43  001C                     	;# 
    44  001E                     	;# 
    45  001F                     	;# 
    46  008C                     	;# 
    47  008D                     	;# 
    48  008E                     	;# 
    49  0091                     	;# 
    50  0092                     	;# 
    51  0093                     	;# 
    52  0094                     	;# 
    53  0095                     	;# 
    54  0096                     	;# 
    55  0097                     	;# 
    56  0098                     	;# 
    57  0099                     	;# 
    58  009A                     	;# 
    59  009B                     	;# 
    60  009B                     	;# 
    61  009C                     	;# 
    62  009D                     	;# 
    63  009E                     	;# 
    64  010C                     	;# 
    65  010D                     	;# 
    66  010E                     	;# 
    67  0111                     	;# 
    68  0112                     	;# 
    69  0113                     	;# 
    70  0114                     	;# 
    71  0115                     	;# 
    72  0116                     	;# 
    73  0117                     	;# 
    74  0118                     	;# 
    75  0119                     	;# 
    76  011A                     	;# 
    77  011B                     	;# 
    78  011D                     	;# 
    79  011E                     	;# 
    80  018C                     	;# 
    81  018D                     	;# 
    82  018E                     	;# 
    83  0191                     	;# 
    84  0191                     	;# 
    85  0192                     	;# 
    86  0193                     	;# 
    87  0193                     	;# 
    88  0193                     	;# 
    89  0194                     	;# 
    90  0195                     	;# 
    91  0196                     	;# 
    92  0199                     	;# 
    93  019A                     	;# 
    94  019B                     	;# 
    95  019B                     	;# 
    96  019C                     	;# 
    97  019D                     	;# 
    98  019E                     	;# 
    99  019F                     	;# 
   100  020C                     	;# 
   101  020D                     	;# 
   102  020E                     	;# 
   103  0211                     	;# 
   104  0211                     	;# 
   105  0212                     	;# 
   106  0212                     	;# 
   107  0213                     	;# 
   108  0213                     	;# 
   109  0214                     	;# 
   110  0214                     	;# 
   111  0215                     	;# 
   112  0215                     	;# 
   113  0215                     	;# 
   114  0216                     	;# 
   115  0216                     	;# 
   116  0217                     	;# 
   117  0217                     	;# 
   118  0219                     	;# 
   119  021A                     	;# 
   120  021B                     	;# 
   121  021C                     	;# 
   122  021D                     	;# 
   123  021E                     	;# 
   124  021F                     	;# 
   125  0291                     	;# 
   126  0291                     	;# 
   127  0292                     	;# 
   128  0293                     	;# 
   129  0294                     	;# 
   130  0295                     	;# 
   131  0295                     	;# 
   132  0296                     	;# 
   133  0298                     	;# 
   134  0298                     	;# 
   135  0299                     	;# 
   136  029A                     	;# 
   137  029B                     	;# 
   138  029C                     	;# 
   139  029D                     	;# 
   140  029E                     	;# 
   141  0311                     	;# 
   142  0311                     	;# 
   143  0312                     	;# 
   144  0313                     	;# 
   145  0318                     	;# 
   146  0318                     	;# 
   147  0319                     	;# 
   148  031A                     	;# 
   149  038C                     	;# 
   150  038D                     	;# 
   151  038E                     	;# 
   152  0391                     	;# 
   153  0392                     	;# 
   154  0393                     	;# 
   155  0394                     	;# 
   156  0395                     	;# 
   157  0396                     	;# 
   158  039A                     	;# 
   159  039C                     	;# 
   160  039D                     	;# 
   161  039E                     	;# 
   162  039F                     	;# 
   163  0415                     	;# 
   164  0416                     	;# 
   165  0417                     	;# 
   166  041C                     	;# 
   167  041D                     	;# 
   168  041E                     	;# 
   169  0FE4                     	;# 
   170  0FE5                     	;# 
   171  0FE6                     	;# 
   172  0FE7                     	;# 
   173  0FE8                     	;# 
   174  0FE9                     	;# 
   175  0FEA                     	;# 
   176  0FEB                     	;# 
   177  0FED                     	;# 
   178  0FEE                     	;# 
   179  0FEF                     	;# 
   180  0000                     	;# 
   181  0001                     	;# 
   182  0002                     	;# 
   183  0003                     	;# 
   184  0004                     	;# 
   185  0005                     	;# 
   186  0006                     	;# 
   187  0007                     	;# 
   188  0008                     	;# 
   189  0009                     	;# 
   190  000A                     	;# 
   191  000B                     	;# 
   192  000C                     	;# 
   193  000D                     	;# 
   194  000E                     	;# 
   195  0011                     	;# 
   196  0012                     	;# 
   197  0013                     	;# 
   198  0014                     	;# 
   199  0015                     	;# 
   200  0016                     	;# 
   201  0016                     	;# 
   202  0017                     	;# 
   203  0018                     	;# 
   204  0019                     	;# 
   205  001A                     	;# 
   206  001B                     	;# 
   207  001C                     	;# 
   208  001E                     	;# 
   209  001F                     	;# 
   210  008C                     	;# 
   211  008D                     	;# 
   212  008E                     	;# 
   213  0091                     	;# 
   214  0092                     	;# 
   215  0093                     	;# 
   216  0094                     	;# 
   217  0095                     	;# 
   218  0096                     	;# 
   219  0097                     	;# 
   220  0098                     	;# 
   221  0099                     	;# 
   222  009A                     	;# 
   223  009B                     	;# 
   224  009B                     	;# 
   225  009C                     	;# 
   226  009D                     	;# 
   227  009E                     	;# 
   228  010C                     	;# 
   229  010D                     	;# 
   230  010E                     	;# 
   231  0111                     	;# 
   232  0112                     	;# 
   233  0113                     	;# 
   234  0114                     	;# 
   235  0115                     	;# 
   236  0116                     	;# 
   237  0117                     	;# 
   238  0118                     	;# 
   239  0119                     	;# 
   240  011A                     	;# 
   241  011B                     	;# 
   242  011D                     	;# 
   243  011E                     	;# 
   244  018C                     	;# 
   245  018D                     	;# 
   246  018E                     	;# 
   247  0191                     	;# 
   248  0191                     	;# 
   249  0192                     	;# 
   250  0193                     	;# 
   251  0193                     	;# 
   252  0193                     	;# 
   253  0194                     	;# 
   254  0195                     	;# 
   255  0196                     	;# 
   256  0199                     	;# 
   257  019A                     	;# 
   258  019B                     	;# 
   259  019B                     	;# 
   260  019C                     	;# 
   261  019D                     	;# 
   262  019E                     	;# 
   263  019F                     	;# 
   264  020C                     	;# 
   265  020D                     	;# 
   266  020E                     	;# 
   267  0211                     	;# 
   268  0211                     	;# 
   269  0212                     	;# 
   270  0212                     	;# 
   271  0213                     	;# 
   272  0213                     	;# 
   273  0214                     	;# 
   274  0214                     	;# 
   275  0215                     	;# 
   276  0215                     	;# 
   277  0215                     	;# 
   278  0216                     	;# 
   279  0216                     	;# 
   280  0217                     	;# 
   281  0217                     	;# 
   282  0219                     	;# 
   283  021A                     	;# 
   284  021B                     	;# 
   285  021C                     	;# 
   286  021D                     	;# 
   287  021E                     	;# 
   288  021F                     	;# 
   289  0291                     	;# 
   290  0291                     	;# 
   291  0292                     	;# 
   292  0293                     	;# 
   293  0294                     	;# 
   294  0295                     	;# 
   295  0295                     	;# 
   296  0296                     	;# 
   297  0298                     	;# 
   298  0298                     	;# 
   299  0299                     	;# 
   300  029A                     	;# 
   301  029B                     	;# 
   302  029C                     	;# 
   303  029D                     	;# 
   304  029E                     	;# 
   305  0311                     	;# 
   306  0311                     	;# 
   307  0312                     	;# 
   308  0313                     	;# 
   309  0318                     	;# 
   310  0318                     	;# 
   311  0319                     	;# 
   312  031A                     	;# 
   313  038C                     	;# 
   314  038D                     	;# 
   315  038E                     	;# 
   316  0391                     	;# 
   317  0392                     	;# 
   318  0393                     	;# 
   319  0394                     	;# 
   320  0395                     	;# 
   321  0396                     	;# 
   322  039A                     	;# 
   323  039C                     	;# 
   324  039D                     	;# 
   325  039E                     	;# 
   326  039F                     	;# 
   327  0415                     	;# 
   328  0416                     	;# 
   329  0417                     	;# 
   330  041C                     	;# 
   331  041D                     	;# 
   332  041E                     	;# 
   333  0FE4                     	;# 
   334  0FE5                     	;# 
   335  0FE6                     	;# 
   336  0FE7                     	;# 
   337  0FE8                     	;# 
   338  0FE9                     	;# 
   339  0FEA                     	;# 
   340  0FEB                     	;# 
   341  0FED                     	;# 
   342  0FEE                     	;# 
   343  0FEF                     	;# 
   344                           
   345                           	psect	stringtext
   346  0800                     __pstringtext:	
   347  0800                     _dpowers:	
   348  0800  3401               	retlw	1
   349  0801  3400               	retlw	0
   350  0802  340A               	retlw	10
   351  0803  3400               	retlw	0
   352  0804  3464               	retlw	100
   353  0805  3400               	retlw	0
   354  0806  34E8               	retlw	232
   355  0807  3403               	retlw	3
   356  0808  3410               	retlw	16
   357  0809  3427               	retlw	39
   358  080A                     __end_of_dpowers:	
   359  000C                     _PORTA	set	12
   360  000D                     _PORTB	set	13
   361  008C                     _TXIF	set	140
   362  0099                     _OSCCON	set	153
   363  008C                     _TRISA	set	140
   364  008D                     _TRISB	set	141
   365  08EF                     _RXDTSEL	set	2287
   366  08EA                     _TXCKSEL	set	2282
   367  019B                     _SPBRG	set	411
   368  018C                     _ANSELA	set	396
   369  018D                     _ANSELB	set	397
   370  019D                     _RCSTA	set	413
   371  019A                     _TXREG	set	410
   372  019E                     _TXSTA	set	414
   373  080A                     STR_1:	
   374  080A  3425               	retlw	37	;'%'
   375  080B  3464               	retlw	100	;'d'
   376  080C  3400               	retlw	0
   377                           
   378                           ; #config settings
   379  0000                     
   380                           	psect	cinit
   381  07F6                     start_initialization:	
   382  07F6                     __initialization:	
   383                           
   384                           ; Clear objects allocated to BANK0
   385  07F6  01BB               	clrf	__pbssBANK0& (0+127)
   386  07F7  01BC               	clrf	(__pbssBANK0+1)& (0+127)
   387  07F8  01BD               	clrf	(__pbssBANK0+2)& (0+127)
   388  07F9  01BE               	clrf	(__pbssBANK0+3)& (0+127)
   389  07FA  01BF               	clrf	(__pbssBANK0+4)& (0+127)
   390  07FB  01C0               	clrf	(__pbssBANK0+5)& (0+127)
   391  07FC  01C1               	clrf	(__pbssBANK0+6)& (0+127)
   392  07FD                     end_of_initialization:	
   393                           ;End of C runtime variable initialization code
   394                           
   395  07FD                     __end_of__initialization:	
   396  07FD  0020               	movlb	0
   397  07FE  3186  2EAE         	ljmp	_main	;jump to C main() function
   398                           
   399                           	psect	bssBANK0
   400  003B                     __pbssBANK0:	
   401  003B                     _str:	
   402  003B                     	ds	7
   403                           
   404                           	psect	cstackCOMMON
   405  0070                     __pcstackCOMMON:	
   406  0070                     ?_main:	
   407  0070                     ?___lwdiv:	
   408                           ; 0 bytes @ 0x0
   409                           
   410  0070                     ___lwdiv@divisor:	
   411                           ; 2 bytes @ 0x0
   412                           
   413                           
   414                           ; 2 bytes @ 0x0
   415  0070                     	ds	2
   416  0072                     ___lwdiv@dividend:	
   417                           
   418                           ; 2 bytes @ 0x2
   419  0072                     	ds	2
   420  0074                     ??___lwdiv:	
   421                           
   422                           ; 0 bytes @ 0x4
   423  0074                     	ds	1
   424  0075                     ___lwdiv@quotient:	
   425                           
   426                           ; 2 bytes @ 0x5
   427  0075                     	ds	2
   428  0077                     ___lwdiv@counter:	
   429                           
   430                           ; 1 bytes @ 0x7
   431  0077                     	ds	1
   432  0078                     ?___lwmod:	
   433  0078                     ___lwmod@divisor:	
   434                           ; 2 bytes @ 0x8
   435                           
   436                           
   437                           ; 2 bytes @ 0x8
   438  0078                     	ds	2
   439  007A                     ___lwmod@dividend:	
   440                           
   441                           ; 2 bytes @ 0xA
   442  007A                     	ds	2
   443  007C                     ??___lwmod:	
   444                           
   445                           ; 0 bytes @ 0xC
   446  007C                     	ds	1
   447  007D                     ___lwmod@counter:	
   448                           
   449                           ; 1 bytes @ 0xD
   450  007D                     	ds	1
   451  007E                     ??_henkan:	
   452                           
   453                           	psect	cstackBANK0
   454  0020                     __pcstackBANK0:	
   455                           ; 0 bytes @ 0xE
   456                           
   457  0020                     ?_sprintf:	
   458  0020                     sprintf@f:	
   459                           ; 2 bytes @ 0x0
   460                           
   461                           
   462                           ; 2 bytes @ 0x0
   463  0020                     	ds	4
   464  0024                     ??_sprintf:	
   465                           
   466                           ; 0 bytes @ 0x4
   467  0024                     	ds	4
   468  0028                     sprintf@ap:	
   469                           
   470                           ; 1 bytes @ 0x8
   471  0028                     	ds	1
   472  0029                     sprintf@flag:	
   473                           
   474                           ; 1 bytes @ 0x9
   475  0029                     	ds	1
   476  002A                     sprintf@prec:	
   477                           
   478                           ; 1 bytes @ 0xA
   479  002A                     	ds	1
   480  002B                     sprintf@val:	
   481                           
   482                           ; 2 bytes @ 0xB
   483  002B                     	ds	2
   484  002D                     sprintf@sp:	
   485                           
   486                           ; 1 bytes @ 0xD
   487  002D                     	ds	1
   488  002E                     sprintf@c:	
   489                           
   490                           ; 1 bytes @ 0xE
   491  002E                     	ds	1
   492  002F                     ?_henkan:	
   493  002F                     henkan@sdata:	
   494                           ; 0 bytes @ 0xF
   495                           
   496                           
   497                           ; 2 bytes @ 0xF
   498  002F                     	ds	2
   499  0031                     ?_sousin:	
   500  0031                     sousin@sdata:	
   501                           ; 0 bytes @ 0x11
   502                           
   503                           
   504                           ; 2 bytes @ 0x11
   505  0031                     	ds	2
   506  0033                     ??_sousin:	
   507                           
   508                           ; 0 bytes @ 0x13
   509  0033                     	ds	1
   510  0034                     sousin@i:	
   511                           
   512                           ; 2 bytes @ 0x14
   513  0034                     	ds	2
   514  0036                     ??_main:	
   515                           
   516                           ; 0 bytes @ 0x16
   517  0036                     	ds	3
   518  0039                     main@a:	
   519                           
   520                           ; 2 bytes @ 0x19
   521  0039                     	ds	2
   522                           
   523                           	psect	maintext
   524  06AE                     __pmaintext:	
   525 ;;
   526 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   527 ;;
   528 ;; *************** function _main *****************
   529 ;; Defined at:
   530 ;;		line 16 in file "MAIN.c"
   531 ;; Parameters:    Size  Location     Type
   532 ;;		None
   533 ;; Auto vars:     Size  Location     Type
   534 ;;  a               2   25[BANK0 ] int 
   535 ;; Return value:  Size  Location     Type
   536 ;;		None               void
   537 ;; Registers used:
   538 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
   539 ;; Tracked objects:
   540 ;;		On entry : B1F/0
   541 ;;		On exit  : 0/0
   542 ;;		Unchanged: 0/0
   543 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
   544 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   545 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
   546 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
   547 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
   548 ;;Total ram usage:        5 bytes
   549 ;; Hardware stack levels required when called:    4
   550 ;; This function calls:
   551 ;;		_sousin
   552 ;; This function is called by:
   553 ;;		Startup code after reset
   554 ;; This function uses a non-reentrant model
   555 ;;
   556                           
   557                           
   558                           ;psect for function _main
   559  06AE                     _main:	
   560                           
   561                           ;MAIN.c: 18: int a = -12345;
   562                           
   563                           ;incstack = 0
   564                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
   565  06AE  30C7               	movlw	199
   566  06AF  0020               	movlb	0	; select bank0
   567  06B0  00B9               	movwf	main@a
   568  06B1  30CF               	movlw	207
   569  06B2  00BA               	movwf	main@a+1
   570                           
   571                           ;MAIN.c: 21: OSCCON = 0x72;
   572  06B3  3072               	movlw	114
   573  06B4  0021               	movlb	1	; select bank1
   574  06B5  0099               	movwf	25	;volatile
   575                           
   576                           ;MAIN.c: 22: ANSELA = 0x00;
   577  06B6  0023               	movlb	3	; select bank3
   578  06B7  018C               	clrf	12	;volatile
   579                           
   580                           ;MAIN.c: 23: TRISA = 0x20;
   581  06B8  3020               	movlw	32
   582  06B9  0021               	movlb	1	; select bank1
   583  06BA  008C               	movwf	12	;volatile
   584                           
   585                           ;MAIN.c: 24: PORTA = 0x00;
   586  06BB  0020               	movlb	0	; select bank0
   587  06BC  018C               	clrf	12	;volatile
   588                           
   589                           ;MAIN.c: 25: ANSELB = 0x00;
   590  06BD  0023               	movlb	3	; select bank3
   591  06BE  018D               	clrf	13	;volatile
   592                           
   593                           ;MAIN.c: 26: TRISB = 0x00;
   594  06BF  0021               	movlb	1	; select bank1
   595  06C0  018D               	clrf	13	;volatile
   596                           
   597                           ;MAIN.c: 27: PORTB = 0x00;
   598  06C1  0020               	movlb	0	; select bank0
   599  06C2  018D               	clrf	13	;volatile
   600                           
   601                           ;MAIN.c: 31: RXDTSEL = 1;
   602  06C3  0022               	movlb	2	; select bank2
   603  06C4  179D               	bsf	29,7	;volatile
   604                           
   605                           ;MAIN.c: 32: TXCKSEL = 1;
   606  06C5  151D               	bsf	29,2	;volatile
   607                           
   608                           ;MAIN.c: 33: TXSTA = 0b00100100;
   609  06C6  3024               	movlw	36
   610  06C7  0023               	movlb	3	; select bank3
   611  06C8  009E               	movwf	30	;volatile
   612                           
   613                           ;MAIN.c: 34: RCSTA = 0b10010000;
   614  06C9  3090               	movlw	144
   615  06CA  009D               	movwf	29	;volatile
   616                           
   617                           ;MAIN.c: 35: SPBRG = 51;
   618  06CB  3000               	movlw	0
   619  06CC  009C               	movwf	28	;volatile
   620  06CD  3033               	movlw	51
   621  06CE  009B               	movwf	27	;volatile
   622                           
   623                           ;MAIN.c: 37: _delay((unsigned long)((500)*(8000000/4000.0)));
   624  06CF  3006               	movlw	6
   625  06D0  0020               	movlb	0	; select bank0
   626  06D1  00B8               	movwf	??_main+2
   627  06D2  3013               	movlw	19
   628  06D3  00B7               	movwf	??_main+1
   629  06D4  30B1               	movlw	177
   630  06D5  00B6               	movwf	??_main
   631  06D6                     u537:	
   632  06D6  0BB6               	decfsz	??_main,f
   633  06D7  2ED6               	goto	u537
   634  06D8  0BB7               	decfsz	??_main+1,f
   635  06D9  2ED6               	goto	u537
   636  06DA  0BB8               	decfsz	??_main+2,f
   637  06DB  2ED6               	goto	u537
   638  06DC  3200               	nop2
   639  06DD                     l855:	
   640                           ;MAIN.c: 41: while(1) {
   641                           
   642                           
   643                           ;MAIN.c: 43: sousin(a);
   644  06DD  0020               	movlb	0	; select bank0
   645  06DE  083A               	movf	main@a+1,w
   646  06DF  00B2               	movwf	sousin@sdata+1
   647  06E0  0839               	movf	main@a,w
   648  06E1  00B1               	movwf	sousin@sdata
   649  06E2  3186  26E6  3186   	fcall	_sousin
   650  06E5  2EDD               	goto	l855
   651  06E6                     __end_of_main:	
   652                           
   653                           	psect	text1
   654  06E6                     __ptext1:	
   655 ;; *************** function _sousin *****************
   656 ;; Defined at:
   657 ;;		line 13 in file "usart.c"
   658 ;; Parameters:    Size  Location     Type
   659 ;;  sdata           2   17[BANK0 ] int 
   660 ;; Auto vars:     Size  Location     Type
   661 ;;  i               2   20[BANK0 ] int 
   662 ;; Return value:  Size  Location     Type
   663 ;;		None               void
   664 ;; Registers used:
   665 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
   666 ;; Tracked objects:
   667 ;;		On entry : 0/0
   668 ;;		On exit  : 0/0
   669 ;;		Unchanged: 0/0
   670 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
   671 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
   672 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
   673 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
   674 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
   675 ;;Total ram usage:        5 bytes
   676 ;; Hardware stack levels used:    1
   677 ;; Hardware stack levels required when called:    3
   678 ;; This function calls:
   679 ;;		_henkan
   680 ;; This function is called by:
   681 ;;		_main
   682 ;; This function uses a non-reentrant model
   683 ;;
   684                           
   685                           
   686                           ;psect for function _sousin
   687  06E6                     _sousin:	
   688                           
   689                           ;usart.c: 15: int i = 0;
   690                           
   691                           ;incstack = 0
   692                           ; Regs used in _sousin: [wreg-fsr1h+status,2+status,0+pclath+cstack]
   693  06E6  0020               	movlb	0	; select bank0
   694  06E7  01B4               	clrf	sousin@i
   695  06E8  01B5               	clrf	sousin@i+1
   696                           
   697                           ;usart.c: 17: henkan(sdata);
   698  06E9  0832               	movf	sousin@sdata+1,w
   699  06EA  00B0               	movwf	henkan@sdata+1
   700  06EB  0831               	movf	sousin@sdata,w
   701  06EC  00AF               	movwf	henkan@sdata
   702  06ED  3186  2641  3186   	fcall	_henkan
   703                           
   704                           ;usart.c: 19: for(i=0;i<7;i++){
   705  06F0  0020               	movlb	0	; select bank0
   706  06F1  01B4               	clrf	sousin@i
   707  06F2  01B5               	clrf	sousin@i+1
   708  06F3  0835               	movf	sousin@i+1,w
   709  06F4  3A80               	xorlw	128
   710  06F5  00B3               	movwf	??_sousin
   711  06F6  3080               	movlw	128
   712  06F7  0233               	subwf	??_sousin,w
   713  06F8  1D03               	skipz
   714  06F9  2EFC               	goto	u485
   715  06FA  3007               	movlw	7
   716  06FB  0234               	subwf	sousin@i,w
   717  06FC                     u485:	
   718  06FC  1803               	btfsc	3,0
   719  06FD  2F19               	goto	l55
   720  06FE                     l52:	
   721                           ;usart.c: 20: while(TXIF==0);
   722                           
   723  06FE  0020               	movlb	0	; select bank0
   724  06FF  1E11               	btfss	17,4	;volatile
   725  0700  2EFE               	goto	l52
   726                           
   727                           ;usart.c: 21: TXREG = str[i];
   728  0701  0834               	movf	sousin@i,w
   729  0702  3E3B               	addlw	(low (_str| 0))& (0+255)
   730  0703  0086               	movwf	6
   731  0704  0187               	clrf	7
   732  0705  0801               	movf	1,w
   733  0706  0023               	movlb	3	; select bank3
   734  0707  009A               	movwf	26	;volatile
   735                           
   736                           ;usart.c: 22: TXIF = 0;
   737  0708  0020               	movlb	0	; select bank0
   738  0709  1211               	bcf	17,4	;volatile
   739  070A  3001               	movlw	1
   740  070B  07B4               	addwf	sousin@i,f
   741  070C  3000               	movlw	0
   742  070D  3DB5               	addwfc	sousin@i+1,f
   743  070E  0835               	movf	sousin@i+1,w
   744  070F  3A80               	xorlw	128
   745  0710  00B3               	movwf	??_sousin
   746  0711  3080               	movlw	128
   747  0712  0233               	subwf	??_sousin,w
   748  0713  1D03               	skipz
   749  0714  2F17               	goto	u505
   750  0715  3007               	movlw	7
   751  0716  0234               	subwf	sousin@i,w
   752  0717                     u505:	
   753  0717  1C03               	skipc
   754  0718  2EFE               	goto	l52
   755  0719                     l55:	
   756                           ;usart.c: 23: }
   757                           ;usart.c: 24: while(TXIF==0);
   758                           
   759  0719  0020               	movlb	0	; select bank0
   760  071A  1E11               	btfss	17,4	;volatile
   761  071B  2F19               	goto	l55
   762                           
   763                           ;usart.c: 25: TXREG = '\n';
   764  071C  300A               	movlw	10
   765  071D  0023               	movlb	3	; select bank3
   766  071E  009A               	movwf	26	;volatile
   767                           
   768                           ;usart.c: 26: TXIF = 0;
   769  071F  0020               	movlb	0	; select bank0
   770  0720  1211               	bcf	17,4	;volatile
   771  0721                     l58:	
   772                           ;usart.c: 27: while(TXIF==0);
   773                           
   774  0721  1E11               	btfss	17,4	;volatile
   775  0722  2F21               	goto	l58
   776                           
   777                           ;usart.c: 28: TXREG = '\r';
   778  0723  300D               	movlw	13
   779  0724  0023               	movlb	3	; select bank3
   780  0725  009A               	movwf	26	;volatile
   781                           
   782                           ;usart.c: 29: TXIF = 0;
   783  0726  0020               	movlb	0	; select bank0
   784  0727  1211               	bcf	17,4	;volatile
   785  0728  0008               	return
   786  0729                     __end_of_sousin:	
   787                           
   788                           	psect	text2
   789  0641                     __ptext2:	
   790 ;; *************** function _henkan *****************
   791 ;; Defined at:
   792 ;;		line 7 in file "usart.c"
   793 ;; Parameters:    Size  Location     Type
   794 ;;  sdata           2   15[BANK0 ] int 
   795 ;; Auto vars:     Size  Location     Type
   796 ;;		None
   797 ;; Return value:  Size  Location     Type
   798 ;;		None               void
   799 ;; Registers used:
   800 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
   801 ;; Tracked objects:
   802 ;;		On entry : 0/0
   803 ;;		On exit  : 0/0
   804 ;;		Unchanged: 0/0
   805 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
   806 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
   807 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   808 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   809 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
   810 ;;Total ram usage:        2 bytes
   811 ;; Hardware stack levels used:    1
   812 ;; Hardware stack levels required when called:    2
   813 ;; This function calls:
   814 ;;		_sprintf
   815 ;; This function is called by:
   816 ;;		_sousin
   817 ;; This function uses a non-reentrant model
   818 ;;
   819                           
   820                           
   821                           ;psect for function _henkan
   822  0641                     _henkan:	
   823                           
   824                           ;usart.c: 9: sprintf(str,"%d",sdata);
   825                           
   826                           ;incstack = 0
   827                           ; Regs used in _henkan: [wreg-fsr1h+status,2+status,0+pclath+cstack]
   828  0641  300A               	movlw	low (STR_1| (0+32768))
   829  0642  0020               	movlb	0	; select bank0
   830  0643  00A0               	movwf	sprintf@f
   831  0644  3088               	movlw	high (STR_1| (0+32768))
   832  0645  00A1               	movwf	sprintf@f+1
   833  0646  0830               	movf	henkan@sdata+1,w
   834  0647  00A3               	movwf	?_sprintf+3
   835  0648  082F               	movf	henkan@sdata,w
   836  0649  00A2               	movwf	?_sprintf+2
   837  064A  303B               	movlw	(low (_str| 0))& (0+255)
   838  064B  3187  2729         	fcall	_sprintf
   839  064D  0008               	return
   840  064E                     __end_of_henkan:	
   841                           
   842                           	psect	text3
   843  0729                     __ptext3:	
   844 ;; *************** function _sprintf *****************
   845 ;; Defined at:
   846 ;;		line 492 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\doprnt.c"
   847 ;; Parameters:    Size  Location     Type
   848 ;;  sp              1    wreg     PTR unsigned char 
   849 ;;		 -> str(7), 
   850 ;;  f               2    0[BANK0 ] PTR const unsigned char 
   851 ;;		 -> STR_1(3), 
   852 ;; Auto vars:     Size  Location     Type
   853 ;;  sp              1   13[BANK0 ] PTR unsigned char 
   854 ;;		 -> str(7), 
   855 ;;  tmpval          4    0        struct .
   856 ;;  val             2   11[BANK0 ] unsigned int 
   857 ;;  cp              2    0        PTR const unsigned char 
   858 ;;  len             2    0        unsigned int 
   859 ;;  c               1   14[BANK0 ] char 
   860 ;;  prec            1   10[BANK0 ] char 
   861 ;;  flag            1    9[BANK0 ] unsigned char 
   862 ;;  ap              1    8[BANK0 ] PTR void [1]
   863 ;;		 -> ?_sprintf(2), 
   864 ;; Return value:  Size  Location     Type
   865 ;;                  2    0[BANK0 ] int 
   866 ;; Registers used:
   867 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
   868 ;; Tracked objects:
   869 ;;		On entry : 0/0
   870 ;;		On exit  : 0/0
   871 ;;		Unchanged: 0/0
   872 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
   873 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
   874 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
   875 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
   876 ;;      Totals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0
   877 ;;Total ram usage:       15 bytes
   878 ;; Hardware stack levels used:    1
   879 ;; Hardware stack levels required when called:    1
   880 ;; This function calls:
   881 ;;		___lwdiv
   882 ;;		___lwmod
   883 ;; This function is called by:
   884 ;;		_henkan
   885 ;; This function uses a non-reentrant model
   886 ;;
   887                           
   888                           
   889                           ;psect for function _sprintf
   890  0729                     _sprintf:	
   891                           
   892                           ;incstack = 0
   893                           ; Regs used in _sprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
   894                           ;sprintf@sp stored from wreg
   895  0729  0020               	movlb	0	; select bank0
   896  072A  00AD               	movwf	sprintf@sp
   897                           
   898                           ;doprnt.c: 494: va_list ap;
   899                           ;doprnt.c: 499: signed char c;
   900                           ;doprnt.c: 506: signed char prec;
   901                           ;doprnt.c: 508: unsigned char flag;
   902                           ;doprnt.c: 523: union {
   903                           ;doprnt.c: 524: unsigned long vd;
   904                           ;doprnt.c: 525: double integ;
   905                           ;doprnt.c: 526: } tmpval;
   906                           ;doprnt.c: 528: unsigned int val;
   907                           ;doprnt.c: 529: unsigned len;
   908                           ;doprnt.c: 530: const char * cp;
   909                           ;doprnt.c: 533: *ap = __va_start();
   910  072B  3022               	movlw	(low ((?_sprintf| 0+2)))& (0+255)
   911  072C  00A4               	movwf	??_sprintf
   912  072D  0824               	movf	??_sprintf,w
   913  072E  00A8               	movwf	sprintf@ap
   914  072F                     l803:	
   915                           ;doprnt.c: 536: while(c = *f++) {
   916                           
   917  072F  0821               	movf	sprintf@f+1,w
   918  0730  00A5               	movwf	??_sprintf+1
   919  0731  0820               	movf	sprintf@f,w
   920  0732  00A4               	movwf	??_sprintf
   921  0733  0AA0               	incf	sprintf@f,f
   922  0734  1903               	skipnz
   923  0735  0AA1               	incf	sprintf@f+1,f
   924  0736  0824               	movf	??_sprintf,w
   925  0737  0084               	movwf	4
   926  0738  0825               	movf	??_sprintf+1,w
   927  0739  0085               	movwf	5
   928  073A  0800               	movf	0,w	;code access
   929  073B  00A6               	movwf	??_sprintf+2
   930  073C  0826               	movf	??_sprintf+2,w
   931  073D  00AE               	movwf	sprintf@c
   932  073E  082E               	movf	sprintf@c,w
   933  073F  1903               	btfsc	3,2
   934  0740  2FF1               	goto	l805
   935                           
   936                           ;doprnt.c: 538: if(c != '%')
   937  0741  3025               	movlw	37
   938  0742  062E               	xorwf	sprintf@c,w
   939  0743  1903               	btfsc	3,2
   940  0744  2F51               	goto	l759
   941                           
   942                           ;doprnt.c: 540: {
   943                           ;doprnt.c: 541: ((*sp++ = (c)));
   944  0745  082E               	movf	sprintf@c,w
   945  0746  00A4               	movwf	??_sprintf
   946  0747  082D               	movf	sprintf@sp,w
   947  0748  0086               	movwf	6
   948  0749  0187               	clrf	7
   949  074A  0824               	movf	??_sprintf,w
   950  074B  0081               	movwf	1
   951  074C  3001               	movlw	1
   952  074D  00A4               	movwf	??_sprintf
   953  074E  0824               	movf	??_sprintf,w
   954  074F  07AD               	addwf	sprintf@sp,f
   955                           
   956                           ;doprnt.c: 542: continue;
   957  0750  2F2F               	goto	l803
   958  0751                     l759:	
   959                           
   960                           ;doprnt.c: 543: }
   961                           ;doprnt.c: 548: flag = 0;
   962  0751  01A9               	clrf	sprintf@flag
   963                           
   964                           ;doprnt.c: 822: }
   965                           
   966                           ;doprnt.c: 813: continue;
   967                           
   968                           ;doprnt.c: 802: default:
   969                           
   970                           ;doprnt.c: 698: case 'i':
   971                           ;doprnt.c: 699: break;
   972                           
   973                           ;doprnt.c: 697: case 'd':
   974                           
   975                           ;doprnt.c: 638: goto alldone;
   976                           
   977                           ;doprnt.c: 637: case 0:
   978                           
   979                           ;doprnt.c: 635: switch(c = *f++) {
   980  0752  0821               	movf	sprintf@f+1,w
   981  0753  00A5               	movwf	??_sprintf+1
   982  0754  0820               	movf	sprintf@f,w
   983  0755  00A4               	movwf	??_sprintf
   984  0756  0AA0               	incf	sprintf@f,f
   985  0757  1903               	skipnz
   986  0758  0AA1               	incf	sprintf@f+1,f
   987  0759  0824               	movf	??_sprintf,w
   988  075A  0084               	movwf	4
   989  075B  0825               	movf	??_sprintf+1,w
   990  075C  0085               	movwf	5
   991  075D  0800               	movf	0,w	;code access
   992  075E  00AE               	movwf	sprintf@c
   993                           
   994                           ; Switch size 1, requested type "space"
   995                           ; Number of cases is 3, Range of values is 0 to 105
   996                           ; switch strategies available:
   997                           ; Name         Instructions Cycles
   998                           ; simple_byte           10     6 (average)
   999                           ; direct_byte          218     6 (fixed)
  1000                           ; jumptable            260     6 (fixed)
  1001                           ;	Chosen strategy is simple_byte
  1002  075F  3A00               	xorlw	0	; case 0
  1003  0760  1903               	skipnz
  1004  0761  2FF1               	goto	l805
  1005  0762  3A64               	xorlw	100	; case 100
  1006  0763  1903               	skipnz
  1007  0764  2F69               	goto	l765
  1008  0765  3A0D               	xorlw	13	; case 105
  1009  0766  1903               	skipnz
  1010  0767  2F69               	goto	l765
  1011  0768  2F2F               	goto	l803
  1012  0769                     l765:	
  1013                           
  1014                           ;doprnt.c: 1253: {
  1015                           ;doprnt.c: 1259: val = (int)(*(int *)__va_arg((*(int **)ap), (int)0));
  1016  0769  0828               	movf	sprintf@ap,w
  1017  076A  0086               	movwf	6
  1018  076B  0187               	clrf	7
  1019  076C  3F40               	moviw [0]fsr1
  1020  076D  00AB               	movwf	sprintf@val
  1021  076E  3F41               	moviw [1]fsr1
  1022  076F  00AC               	movwf	sprintf@val+1
  1023  0770  3002               	movlw	2
  1024  0771  00A4               	movwf	??_sprintf
  1025  0772  0824               	movf	??_sprintf,w
  1026  0773  07A8               	addwf	sprintf@ap,f
  1027                           
  1028                           ;doprnt.c: 1261: if((int)val < 0) {
  1029  0774  1FAC               	btfss	sprintf@val+1,7
  1030  0775  2F7F               	goto	l775
  1031                           
  1032                           ;doprnt.c: 1262: flag |= 0x03;
  1033  0776  3003               	movlw	3
  1034  0777  00A4               	movwf	??_sprintf
  1035  0778  0824               	movf	??_sprintf,w
  1036  0779  04A9               	iorwf	sprintf@flag,f
  1037                           
  1038                           ;doprnt.c: 1263: val = -val;
  1039  077A  09AB               	comf	sprintf@val,f
  1040  077B  09AC               	comf	sprintf@val+1,f
  1041  077C  0AAB               	incf	sprintf@val,f
  1042  077D  1903               	skipnz
  1043  077E  0AAC               	incf	sprintf@val+1,f
  1044  077F                     l775:	
  1045                           
  1046                           ;doprnt.c: 1264: }
  1047                           ;doprnt.c: 1266: }
  1048                           ;doprnt.c: 1305: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  1049  077F  01AE               	clrf	sprintf@c
  1050  0780  0AAE               	incf	sprintf@c,f
  1051  0781  3005               	movlw	5
  1052  0782  062E               	xorwf	sprintf@c,w
  1053  0783  1903               	btfsc	3,2
  1054  0784  2FA4               	goto	l787
  1055  0785                     l781:	
  1056                           
  1057                           ;doprnt.c: 1306: if(val < dpowers[c])
  1058  0785  082E               	movf	sprintf@c,w
  1059  0786  00A4               	movwf	??_sprintf
  1060  0787  01A5               	clrf	??_sprintf+1
  1061  0788  35A4               	lslf	??_sprintf,f
  1062  0789  0DA5               	rlf	??_sprintf+1,f
  1063  078A  3000               	movlw	low (_dpowers| (0+32768))
  1064  078B  0724               	addwf	??_sprintf,w
  1065  078C  0084               	movwf	4
  1066  078D  3088               	movlw	high (_dpowers| (0+32768))
  1067  078E  3D25               	addwfc	??_sprintf+1,w
  1068  078F  0085               	movwf	5
  1069  0790  3F00               	moviw [0]fsr0
  1070  0791  00A6               	movwf	??_sprintf+2
  1071  0792  3F01               	moviw [1]fsr0
  1072  0793  00A7               	movwf	??_sprintf+3
  1073  0794  0827               	movf	??_sprintf+3,w
  1074  0795  022C               	subwf	sprintf@val+1,w
  1075  0796  1D03               	skipz
  1076  0797  2F9A               	goto	u435
  1077  0798  0826               	movf	??_sprintf+2,w
  1078  0799  022B               	subwf	sprintf@val,w
  1079  079A                     u435:	
  1080  079A  1C03               	btfss	3,0
  1081  079B  2FA4               	goto	l787
  1082                           
  1083                           ;doprnt.c: 1307: break;
  1084  079C  3001               	movlw	1
  1085  079D  00A4               	movwf	??_sprintf
  1086  079E  0824               	movf	??_sprintf,w
  1087  079F  07AE               	addwf	sprintf@c,f
  1088  07A0  3005               	movlw	5
  1089  07A1  062E               	xorwf	sprintf@c,w
  1090  07A2  1D03               	btfss	3,2
  1091  07A3  2F85               	goto	l781
  1092  07A4                     l787:	
  1093                           
  1094                           ;doprnt.c: 1422: {
  1095                           ;doprnt.c: 1438: if(flag & 0x03)
  1096  07A4  0829               	movf	sprintf@flag,w
  1097  07A5  3903               	andlw	3
  1098  07A6  1903               	btfsc	3,2
  1099  07A7  2FB3               	goto	l793
  1100                           
  1101                           ;doprnt.c: 1439: ((*sp++ = ('-')));
  1102  07A8  302D               	movlw	45
  1103  07A9  00A4               	movwf	??_sprintf
  1104  07AA  082D               	movf	sprintf@sp,w
  1105  07AB  0086               	movwf	6
  1106  07AC  0187               	clrf	7
  1107  07AD  0824               	movf	??_sprintf,w
  1108  07AE  0081               	movwf	1
  1109  07AF  3001               	movlw	1
  1110  07B0  00A4               	movwf	??_sprintf
  1111  07B1  0824               	movf	??_sprintf,w
  1112  07B2  07AD               	addwf	sprintf@sp,f
  1113  07B3                     l793:	
  1114                           
  1115                           ;doprnt.c: 1469: }
  1116                           ;doprnt.c: 1472: prec = c;
  1117  07B3  082E               	movf	sprintf@c,w
  1118  07B4  00A4               	movwf	??_sprintf
  1119  07B5  0824               	movf	??_sprintf,w
  1120  07B6  00AA               	movwf	sprintf@prec
  1121  07B7                     l801:	
  1122                           ;doprnt.c: 1474: while(prec--) {
  1123                           
  1124  07B7  30FF               	movlw	255
  1125  07B8  00A4               	movwf	??_sprintf
  1126  07B9  0824               	movf	??_sprintf,w
  1127  07BA  07AA               	addwf	sprintf@prec,f
  1128  07BB  0A2A               	incf	sprintf@prec,w
  1129  07BC  1903               	btfsc	3,2
  1130  07BD  2F2F               	goto	l803
  1131                           
  1132                           ;doprnt.c: 1478: {
  1133                           ;doprnt.c: 1489: c = (val / dpowers[prec]) % 10 + '0';
  1134  07BE  300A               	movlw	10
  1135  07BF  00F8               	movwf	___lwmod@divisor
  1136  07C0  3000               	movlw	0
  1137  07C1  00F9               	movwf	___lwmod@divisor+1
  1138  07C2  082A               	movf	sprintf@prec,w
  1139  07C3  00A4               	movwf	??_sprintf
  1140  07C4  01A5               	clrf	??_sprintf+1
  1141  07C5  35A4               	lslf	??_sprintf,f
  1142  07C6  0DA5               	rlf	??_sprintf+1,f
  1143  07C7  3000               	movlw	low (_dpowers| (0+32768))
  1144  07C8  0724               	addwf	??_sprintf,w
  1145  07C9  0084               	movwf	4
  1146  07CA  3088               	movlw	high (_dpowers| (0+32768))
  1147  07CB  3D25               	addwfc	??_sprintf+1,w
  1148  07CC  0085               	movwf	5
  1149  07CD  3F00               	moviw [0]fsr0
  1150  07CE  00F0               	movwf	___lwdiv@divisor
  1151  07CF  3F01               	moviw [1]fsr0
  1152  07D0  00F1               	movwf	___lwdiv@divisor+1
  1153  07D1  082C               	movf	sprintf@val+1,w
  1154  07D2  00F3               	movwf	___lwdiv@dividend+1
  1155  07D3  082B               	movf	sprintf@val,w
  1156  07D4  00F2               	movwf	___lwdiv@dividend
  1157  07D5  3186  267A  3187   	fcall	___lwdiv
  1158  07D8  0871               	movf	?___lwdiv+1,w
  1159  07D9  00FB               	movwf	___lwmod@dividend+1
  1160  07DA  0870               	movf	?___lwdiv,w
  1161  07DB  00FA               	movwf	___lwmod@dividend
  1162  07DC  3186  264E  3187   	fcall	___lwmod
  1163  07DF  0878               	movf	?___lwmod,w
  1164  07E0  3E30               	addlw	48
  1165  07E1  0020               	movlb	0	; select bank0
  1166  07E2  00A6               	movwf	??_sprintf+2
  1167  07E3  0826               	movf	??_sprintf+2,w
  1168  07E4  00AE               	movwf	sprintf@c
  1169                           
  1170                           ;doprnt.c: 1523: }
  1171                           ;doprnt.c: 1524: ((*sp++ = (c)));
  1172  07E5  082E               	movf	sprintf@c,w
  1173  07E6  00A4               	movwf	??_sprintf
  1174  07E7  082D               	movf	sprintf@sp,w
  1175  07E8  0086               	movwf	6
  1176  07E9  0187               	clrf	7
  1177  07EA  0824               	movf	??_sprintf,w
  1178  07EB  0081               	movwf	1
  1179  07EC  3001               	movlw	1
  1180  07ED  00A4               	movwf	??_sprintf
  1181  07EE  0824               	movf	??_sprintf,w
  1182  07EF  07AD               	addwf	sprintf@sp,f
  1183  07F0  2FB7               	goto	l801
  1184  07F1                     l805:	
  1185                           ;doprnt.c: 1525: }
  1186                           ;doprnt.c: 1533: }
  1187                           ;doprnt.c: 1535: alldone:
  1188                           
  1189                           
  1190                           ;doprnt.c: 1538: *sp = 0;
  1191  07F1  082D               	movf	sprintf@sp,w
  1192  07F2  0086               	movwf	6
  1193  07F3  0187               	clrf	7
  1194  07F4  0181               	clrf	1
  1195  07F5  0008               	return
  1196  07F6                     __end_of_sprintf:	
  1197                           ;doprnt.c: 1540: return 0;
  1198                           ;	Return value of _sprintf is never used
  1199                           
  1200                           
  1201                           	psect	text4
  1202  064E                     __ptext4:	
  1203 ;; *************** function ___lwmod *****************
  1204 ;; Defined at:
  1205 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\lwmod.c"
  1206 ;; Parameters:    Size  Location     Type
  1207 ;;  divisor         2    8[COMMON] unsigned int 
  1208 ;;  dividend        2   10[COMMON] unsigned int 
  1209 ;; Auto vars:     Size  Location     Type
  1210 ;;  counter         1   13[COMMON] unsigned char 
  1211 ;; Return value:  Size  Location     Type
  1212 ;;                  2    8[COMMON] unsigned int 
  1213 ;; Registers used:
  1214 ;;		wreg, status,2, status,0
  1215 ;; Tracked objects:
  1216 ;;		On entry : 0/0
  1217 ;;		On exit  : 0/0
  1218 ;;		Unchanged: 0/0
  1219 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1220 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1221 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1222 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1223 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1224 ;;Total ram usage:        6 bytes
  1225 ;; Hardware stack levels used:    1
  1226 ;; This function calls:
  1227 ;;		Nothing
  1228 ;; This function is called by:
  1229 ;;		_sprintf
  1230 ;; This function uses a non-reentrant model
  1231 ;;
  1232                           
  1233                           
  1234                           ;psect for function ___lwmod
  1235  064E                     ___lwmod:	
  1236                           
  1237                           ;incstack = 0
  1238                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  1239  064E  0878               	movf	___lwmod@divisor,w
  1240  064F  0479               	iorwf	___lwmod@divisor+1,w
  1241  0650  1903               	btfsc	3,2
  1242  0651  2E75               	goto	l747
  1243  0652  01FD               	clrf	___lwmod@counter
  1244  0653  0AFD               	incf	___lwmod@counter,f
  1245  0654                     l737:	
  1246  0654  1BF9               	btfsc	___lwmod@divisor+1,7
  1247  0655  2E60               	goto	l739
  1248  0656  3001               	movlw	1
  1249  0657                     u355:	
  1250  0657  35F8               	lslf	___lwmod@divisor,f
  1251  0658  0DF9               	rlf	___lwmod@divisor+1,f
  1252  0659  0B89               	decfsz	9,f
  1253  065A  2E57               	goto	u355
  1254  065B  3001               	movlw	1
  1255  065C  00FC               	movwf	??___lwmod
  1256  065D  087C               	movf	??___lwmod,w
  1257  065E  07FD               	addwf	___lwmod@counter,f
  1258  065F  2E54               	goto	l737
  1259  0660                     l739:	
  1260  0660  0879               	movf	___lwmod@divisor+1,w
  1261  0661  027B               	subwf	___lwmod@dividend+1,w
  1262  0662  1D03               	skipz
  1263  0663  2E66               	goto	u375
  1264  0664  0878               	movf	___lwmod@divisor,w
  1265  0665  027A               	subwf	___lwmod@dividend,w
  1266  0666                     u375:	
  1267  0666  1C03               	skipc
  1268  0667  2E6C               	goto	l743
  1269  0668  0878               	movf	___lwmod@divisor,w
  1270  0669  02FA               	subwf	___lwmod@dividend,f
  1271  066A  0879               	movf	___lwmod@divisor+1,w
  1272  066B  3BFB               	subwfb	___lwmod@dividend+1,f
  1273  066C                     l743:	
  1274  066C  3001               	movlw	1
  1275  066D                     u385:	
  1276  066D  36F9               	lsrf	___lwmod@divisor+1,f
  1277  066E  0CF8               	rrf	___lwmod@divisor,f
  1278  066F  0B89               	decfsz	9,f
  1279  0670  2E6D               	goto	u385
  1280  0671  3001               	movlw	1
  1281  0672  02FD               	subwf	___lwmod@counter,f
  1282  0673  1D03               	btfss	3,2
  1283  0674  2E60               	goto	l739
  1284  0675                     l747:	
  1285  0675  087B               	movf	___lwmod@dividend+1,w
  1286  0676  00F9               	movwf	?___lwmod+1
  1287  0677  087A               	movf	___lwmod@dividend,w
  1288  0678  00F8               	movwf	?___lwmod
  1289  0679  0008               	return
  1290  067A                     __end_of___lwmod:	
  1291                           
  1292                           	psect	text5
  1293  067A                     __ptext5:	
  1294 ;; *************** function ___lwdiv *****************
  1295 ;; Defined at:
  1296 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\lwdiv.c"
  1297 ;; Parameters:    Size  Location     Type
  1298 ;;  divisor         2    0[COMMON] unsigned int 
  1299 ;;  dividend        2    2[COMMON] unsigned int 
  1300 ;; Auto vars:     Size  Location     Type
  1301 ;;  quotient        2    5[COMMON] unsigned int 
  1302 ;;  counter         1    7[COMMON] unsigned char 
  1303 ;; Return value:  Size  Location     Type
  1304 ;;                  2    0[COMMON] unsigned int 
  1305 ;; Registers used:
  1306 ;;		wreg, status,2, status,0
  1307 ;; Tracked objects:
  1308 ;;		On entry : 0/0
  1309 ;;		On exit  : 0/0
  1310 ;;		Unchanged: 0/0
  1311 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1312 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1313 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1314 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1315 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1316 ;;Total ram usage:        8 bytes
  1317 ;; Hardware stack levels used:    1
  1318 ;; This function calls:
  1319 ;;		Nothing
  1320 ;; This function is called by:
  1321 ;;		_sprintf
  1322 ;; This function uses a non-reentrant model
  1323 ;;
  1324                           
  1325                           
  1326                           ;psect for function ___lwdiv
  1327  067A                     ___lwdiv:	
  1328                           
  1329                           ;incstack = 0
  1330                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  1331  067A  01F5               	clrf	___lwdiv@quotient
  1332  067B  01F6               	clrf	___lwdiv@quotient+1
  1333  067C  0870               	movf	___lwdiv@divisor,w
  1334  067D  0471               	iorwf	___lwdiv@divisor+1,w
  1335  067E  1903               	btfsc	3,2
  1336  067F  2EA9               	goto	l725
  1337  0680  01F7               	clrf	___lwdiv@counter
  1338  0681  0AF7               	incf	___lwdiv@counter,f
  1339  0682                     l713:	
  1340  0682  1BF1               	btfsc	___lwdiv@divisor+1,7
  1341  0683  2E8E               	goto	l715
  1342  0684  3001               	movlw	1
  1343  0685                     u285:	
  1344  0685  35F0               	lslf	___lwdiv@divisor,f
  1345  0686  0DF1               	rlf	___lwdiv@divisor+1,f
  1346  0687  0B89               	decfsz	9,f
  1347  0688  2E85               	goto	u285
  1348  0689  3001               	movlw	1
  1349  068A  00F4               	movwf	??___lwdiv
  1350  068B  0874               	movf	??___lwdiv,w
  1351  068C  07F7               	addwf	___lwdiv@counter,f
  1352  068D  2E82               	goto	l713
  1353  068E                     l715:	
  1354  068E  3001               	movlw	1
  1355  068F                     u305:	
  1356  068F  35F5               	lslf	___lwdiv@quotient,f
  1357  0690  0DF6               	rlf	___lwdiv@quotient+1,f
  1358  0691  0B89               	decfsz	9,f
  1359  0692  2E8F               	goto	u305
  1360  0693  0871               	movf	___lwdiv@divisor+1,w
  1361  0694  0273               	subwf	___lwdiv@dividend+1,w
  1362  0695  1D03               	skipz
  1363  0696  2E99               	goto	u315
  1364  0697  0870               	movf	___lwdiv@divisor,w
  1365  0698  0272               	subwf	___lwdiv@dividend,w
  1366  0699                     u315:	
  1367  0699  1C03               	skipc
  1368  069A  2EA0               	goto	l721
  1369  069B  0870               	movf	___lwdiv@divisor,w
  1370  069C  02F2               	subwf	___lwdiv@dividend,f
  1371  069D  0871               	movf	___lwdiv@divisor+1,w
  1372  069E  3BF3               	subwfb	___lwdiv@dividend+1,f
  1373  069F  1475               	bsf	___lwdiv@quotient,0
  1374  06A0                     l721:	
  1375  06A0  3001               	movlw	1
  1376  06A1                     u325:	
  1377  06A1  36F1               	lsrf	___lwdiv@divisor+1,f
  1378  06A2  0CF0               	rrf	___lwdiv@divisor,f
  1379  06A3  0B89               	decfsz	9,f
  1380  06A4  2EA1               	goto	u325
  1381  06A5  3001               	movlw	1
  1382  06A6  02F7               	subwf	___lwdiv@counter,f
  1383  06A7  1D03               	btfss	3,2
  1384  06A8  2E8E               	goto	l715
  1385  06A9                     l725:	
  1386  06A9  0876               	movf	___lwdiv@quotient+1,w
  1387  06AA  00F1               	movwf	?___lwdiv+1
  1388  06AB  0875               	movf	___lwdiv@quotient,w
  1389  06AC  00F0               	movwf	?___lwdiv
  1390  06AD  0008               	return
  1391  06AE                     __end_of___lwdiv:	
  1392  007E                     btemp	set	126	;btemp
  1393  007E                     wtemp	set	126
  1394  007E                     wtemp0	set	126
  1395  0080                     wtemp1	set	128
  1396  0082                     wtemp2	set	130
  1397  0084                     wtemp3	set	132
  1398  0086                     wtemp4	set	134
  1399  0088                     wtemp5	set	136
  1400  007F                     wtemp6	set	127
  1401  007E                     ttemp	set	126
  1402  007E                     ttemp0	set	126
  1403  0081                     ttemp1	set	129
  1404  0084                     ttemp2	set	132
  1405  0087                     ttemp3	set	135
  1406  007F                     ttemp4	set	127
  1407  007E                     ltemp	set	126
  1408  007E                     ltemp0	set	126
  1409  0082                     ltemp1	set	130
  1410  0086                     ltemp2	set	134
  1411  0080                     ltemp3	set	128


Data Sizes:
    Strings     3
    Constant    10
    Data        0
    BSS         7
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     27      34
    BANK1            80      0       0
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_1(CODE[3]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 7
		 -> str(BANK0[7]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 


Critical Paths under _main in COMMON

    _sprintf->___lwmod
    ___lwmod->___lwdiv

Critical Paths under _main in BANK0

    _main->_sousin
    _sousin->_henkan
    _henkan->_sprintf

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 5     5      0    1332
                                             22 BANK0      5     5      0
                             _sousin
 ---------------------------------------------------------------------------------
 (1) _sousin                                               5     3      2    1309
                                             17 BANK0      5     3      2
                             _henkan
 ---------------------------------------------------------------------------------
 (2) _henkan                                               2     0      2    1165
                                             15 BANK0      2     0      2
                            _sprintf
 ---------------------------------------------------------------------------------
 (3) _sprintf                                             23    19      4    1090
                                              0 BANK0     15    11      4
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (4) ___lwmod                                              6     2      4     265
                                              8 COMMON     6     2      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (4) ___lwdiv                                              8     4      4     268
                                              0 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _sousin
     _henkan
       _sprintf
         ___lwdiv
         ___lwmod
           ___lwdiv (ARG)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     1B      22       5       42.5%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0      30      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0      30      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.34 build -361300703 
Symbol Table                                                                                   Fri Jul 31 17:20:31 2015

            __CFG_CP$OFF 0000                       l52 06FE                       l55 0719  
                     l58 0721                      l721 06A0                      l713 0682  
                    l801 07B7                      l715 068E                      l803 072F  
                    l725 06A9                      l805 07F1                      l743 066C  
                    l737 0654                      l739 0660                      l747 0675  
                    l781 0785                      l765 0769                      l775 077F  
                    l759 0751                      l855 06DD                      l793 07B3  
                    l787 07A4                      u305 068F                      u315 0699  
                    u325 06A1                      u505 0717             __CFG_CPD$OFF 0000  
                    u355 0657                      u435 079A                      u285 0685  
                    u375 0666                      u385 066D                      u537 06D6  
                    u485 06FC              henkan@sdata 002F                      _str 003B  
           __CFG_BORV$LO 0000                      wreg 0009             __CFG_LVP$OFF 0000  
                   STR_1 080A                     _TXIF 008C             __CFG_WRT$OFF 0000  
                   _main 06AE                     fsr0h 0005                     fsr1h 0007  
                   fsr0l 0004                     indf0 0000                     indf1 0001  
                   fsr1l 0006                     btemp 007E                     ltemp 007E  
                   start 0002                     ttemp 007E                     wtemp 007E  
          __CFG_IESO$OFF 0000                    ?_main 0070            __CFG_WDTE$OFF 0000  
        __end_of___lwdiv 06AE          __end_of___lwmod 067A                    _RCSTA 019D  
                  _SPBRG 019B                    _PORTA 000C                    _PORTB 000D  
                  _TRISA 008C                    _TRISB 008D                    _TXREG 019A  
                  _TXSTA 019E           __CFG_FCMEN$OFF 0000          __end_of_dpowers 080A  
                  main@a 0039           __CFG_BOREN$OFF 0000                    ltemp0 007E  
                  ltemp1 0082                    ltemp2 0086                    ltemp3 0080  
                  ttemp0 007E                    ttemp1 0081                    ttemp2 0084  
                  ttemp3 0087                    ttemp4 007F                    status 0003  
                  wtemp0 007E                    wtemp1 0080                    wtemp2 0082  
                  wtemp3 0084                    wtemp4 0086                    wtemp5 0088  
                  wtemp6 007F          __end_of_sprintf 07F6           __CFG_MCLRE$OFF 0000  
        __initialization 07F6             __end_of_main 06E6                   ??_main 0036  
         __CFG_PLLEN$OFF 0000                   _ANSELA 018C                   _ANSELB 018D  
                 _OSCCON 0099           __CFG_PWRTE$OFF 0000                ??___lwdiv 0074  
              ??___lwmod 007C                   _henkan 0641                   _sousin 06E6  
              ??_sprintf 0024  __end_of__initialization 07FD           __pcstackCOMMON 0070  
             __pbssBANK0 003B               __pmaintext 06AE                  ?_henkan 002F  
                ?_sousin 0031                  _RXDTSEL 08EF                  _TXCKSEL 08EA  
                ___lwdiv 067A                  ___lwmod 064E          __size_of_henkan 000D  
        __CFG_STVREN$OFF 0000                  __ptext1 06E6                  __ptext2 0641  
                __ptext3 0729                  __ptext4 064E                  __ptext5 067A  
        __size_of_sousin 0043                  _dpowers 0800                  _sprintf 0729  
   end_of_initialization 07FD             __pstringtext 0800                  sousin@i 0034  
       __CFG_FOSC$INTOSC 0000           __end_of_henkan 064E           __end_of_sousin 0729  
    start_initialization 07F6                 ??_henkan 007E                 ??_sousin 0033  
              ___latbits 0002            __pcstackBANK0 0020              sprintf@flag 0029  
            sprintf@prec 002A         ___lwdiv@dividend 0072                 ?___lwdiv 0070  
               ?___lwmod 0078              sousin@sdata 0031         ___lwdiv@quotient 0075  
               ?_sprintf 0020         __size_of___lwdiv 0034         __size_of___lwmod 002C  
             sprintf@val 002B          ___lwdiv@divisor 0070          ___lwdiv@counter 0077  
       __size_of_sprintf 00CD            __size_of_main 0038                sprintf@ap 0028  
              sprintf@sp 002D         ___lwmod@dividend 007A        __CFG_CLKOUTEN$OFF 0000  
               sprintf@c 002E                 sprintf@f 0020          ___lwmod@divisor 0078  
        ___lwmod@counter 007D  
