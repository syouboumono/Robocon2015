

Microchip Technology PIC LITE Macro Assembler V1.34 build -361300703 
                                                                                               Wed Aug 19 17:08:50 2015

Microchip Technology Omniscient Code Generator (Lite mode) build 201502162209
     1                           	processor	16F1829
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK0,global,class=CODE,delta=2
     5                           	psect	stringtext,global,reloc=256,class=STRCODE,delta=2
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    13                           	psect	text1,local,class=CODE,merge=1,delta=2
    14                           	psect	text2,local,class=CODE,merge=1,delta=2
    15                           	psect	text3,local,class=CODE,merge=1,delta=2
    16                           	psect	text4,local,class=CODE,merge=1,delta=2
    17                           	psect	text5,local,class=CODE,merge=1,delta=2
    18                           	psect	text6,local,class=CODE,merge=1,delta=2
    19                           	psect	text7,local,class=CODE,merge=1,delta=2
    20                           	psect	intentry,global,class=CODE,delta=2
    21                           	psect	text9,local,class=CODE,merge=1,delta=2
    22                           	psect	text10,local,class=CODE,merge=1,delta=2
    23                           	dabs	1,0x7E,2
    24  0000                     	;# 
    25  0001                     	;# 
    26  0002                     	;# 
    27  0003                     	;# 
    28  0004                     	;# 
    29  0005                     	;# 
    30  0006                     	;# 
    31  0007                     	;# 
    32  0008                     	;# 
    33  0009                     	;# 
    34  000A                     	;# 
    35  000B                     	;# 
    36  000C                     	;# 
    37  000D                     	;# 
    38  000E                     	;# 
    39  0011                     	;# 
    40  0012                     	;# 
    41  0013                     	;# 
    42  0014                     	;# 
    43  0015                     	;# 
    44  0016                     	;# 
    45  0016                     	;# 
    46  0017                     	;# 
    47  0018                     	;# 
    48  0019                     	;# 
    49  001A                     	;# 
    50  001B                     	;# 
    51  001C                     	;# 
    52  001E                     	;# 
    53  001F                     	;# 
    54  008C                     	;# 
    55  008D                     	;# 
    56  008E                     	;# 
    57  0091                     	;# 
    58  0092                     	;# 
    59  0093                     	;# 
    60  0094                     	;# 
    61  0095                     	;# 
    62  0096                     	;# 
    63  0097                     	;# 
    64  0098                     	;# 
    65  0099                     	;# 
    66  009A                     	;# 
    67  009B                     	;# 
    68  009B                     	;# 
    69  009C                     	;# 
    70  009D                     	;# 
    71  009E                     	;# 
    72  010C                     	;# 
    73  010D                     	;# 
    74  010E                     	;# 
    75  0111                     	;# 
    76  0112                     	;# 
    77  0113                     	;# 
    78  0114                     	;# 
    79  0115                     	;# 
    80  0116                     	;# 
    81  0117                     	;# 
    82  0118                     	;# 
    83  0119                     	;# 
    84  011A                     	;# 
    85  011B                     	;# 
    86  011D                     	;# 
    87  011E                     	;# 
    88  018C                     	;# 
    89  018D                     	;# 
    90  018E                     	;# 
    91  0191                     	;# 
    92  0191                     	;# 
    93  0192                     	;# 
    94  0193                     	;# 
    95  0193                     	;# 
    96  0193                     	;# 
    97  0194                     	;# 
    98  0195                     	;# 
    99  0196                     	;# 
   100  0199                     	;# 
   101  019A                     	;# 
   102  019B                     	;# 
   103  019B                     	;# 
   104  019C                     	;# 
   105  019D                     	;# 
   106  019E                     	;# 
   107  019F                     	;# 
   108  020C                     	;# 
   109  020D                     	;# 
   110  020E                     	;# 
   111  0211                     	;# 
   112  0211                     	;# 
   113  0212                     	;# 
   114  0212                     	;# 
   115  0213                     	;# 
   116  0213                     	;# 
   117  0214                     	;# 
   118  0214                     	;# 
   119  0215                     	;# 
   120  0215                     	;# 
   121  0215                     	;# 
   122  0216                     	;# 
   123  0216                     	;# 
   124  0217                     	;# 
   125  0217                     	;# 
   126  0219                     	;# 
   127  021A                     	;# 
   128  021B                     	;# 
   129  021C                     	;# 
   130  021D                     	;# 
   131  021E                     	;# 
   132  021F                     	;# 
   133  0291                     	;# 
   134  0291                     	;# 
   135  0292                     	;# 
   136  0293                     	;# 
   137  0294                     	;# 
   138  0295                     	;# 
   139  0295                     	;# 
   140  0296                     	;# 
   141  0298                     	;# 
   142  0298                     	;# 
   143  0299                     	;# 
   144  029A                     	;# 
   145  029B                     	;# 
   146  029C                     	;# 
   147  029D                     	;# 
   148  029E                     	;# 
   149  0311                     	;# 
   150  0311                     	;# 
   151  0312                     	;# 
   152  0313                     	;# 
   153  0318                     	;# 
   154  0318                     	;# 
   155  0319                     	;# 
   156  031A                     	;# 
   157  038C                     	;# 
   158  038D                     	;# 
   159  038E                     	;# 
   160  0391                     	;# 
   161  0392                     	;# 
   162  0393                     	;# 
   163  0394                     	;# 
   164  0395                     	;# 
   165  0396                     	;# 
   166  039A                     	;# 
   167  039C                     	;# 
   168  039D                     	;# 
   169  039E                     	;# 
   170  039F                     	;# 
   171  0415                     	;# 
   172  0416                     	;# 
   173  0417                     	;# 
   174  041C                     	;# 
   175  041D                     	;# 
   176  041E                     	;# 
   177  0FE4                     	;# 
   178  0FE5                     	;# 
   179  0FE6                     	;# 
   180  0FE7                     	;# 
   181  0FE8                     	;# 
   182  0FE9                     	;# 
   183  0FEA                     	;# 
   184  0FEB                     	;# 
   185  0FED                     	;# 
   186  0FEE                     	;# 
   187  0FEF                     	;# 
   188  0000                     	;# 
   189  0001                     	;# 
   190  0002                     	;# 
   191  0003                     	;# 
   192  0004                     	;# 
   193  0005                     	;# 
   194  0006                     	;# 
   195  0007                     	;# 
   196  0008                     	;# 
   197  0009                     	;# 
   198  000A                     	;# 
   199  000B                     	;# 
   200  000C                     	;# 
   201  000D                     	;# 
   202  000E                     	;# 
   203  0011                     	;# 
   204  0012                     	;# 
   205  0013                     	;# 
   206  0014                     	;# 
   207  0015                     	;# 
   208  0016                     	;# 
   209  0016                     	;# 
   210  0017                     	;# 
   211  0018                     	;# 
   212  0019                     	;# 
   213  001A                     	;# 
   214  001B                     	;# 
   215  001C                     	;# 
   216  001E                     	;# 
   217  001F                     	;# 
   218  008C                     	;# 
   219  008D                     	;# 
   220  008E                     	;# 
   221  0091                     	;# 
   222  0092                     	;# 
   223  0093                     	;# 
   224  0094                     	;# 
   225  0095                     	;# 
   226  0096                     	;# 
   227  0097                     	;# 
   228  0098                     	;# 
   229  0099                     	;# 
   230  009A                     	;# 
   231  009B                     	;# 
   232  009B                     	;# 
   233  009C                     	;# 
   234  009D                     	;# 
   235  009E                     	;# 
   236  010C                     	;# 
   237  010D                     	;# 
   238  010E                     	;# 
   239  0111                     	;# 
   240  0112                     	;# 
   241  0113                     	;# 
   242  0114                     	;# 
   243  0115                     	;# 
   244  0116                     	;# 
   245  0117                     	;# 
   246  0118                     	;# 
   247  0119                     	;# 
   248  011A                     	;# 
   249  011B                     	;# 
   250  011D                     	;# 
   251  011E                     	;# 
   252  018C                     	;# 
   253  018D                     	;# 
   254  018E                     	;# 
   255  0191                     	;# 
   256  0191                     	;# 
   257  0192                     	;# 
   258  0193                     	;# 
   259  0193                     	;# 
   260  0193                     	;# 
   261  0194                     	;# 
   262  0195                     	;# 
   263  0196                     	;# 
   264  0199                     	;# 
   265  019A                     	;# 
   266  019B                     	;# 
   267  019B                     	;# 
   268  019C                     	;# 
   269  019D                     	;# 
   270  019E                     	;# 
   271  019F                     	;# 
   272  020C                     	;# 
   273  020D                     	;# 
   274  020E                     	;# 
   275  0211                     	;# 
   276  0211                     	;# 
   277  0212                     	;# 
   278  0212                     	;# 
   279  0213                     	;# 
   280  0213                     	;# 
   281  0214                     	;# 
   282  0214                     	;# 
   283  0215                     	;# 
   284  0215                     	;# 
   285  0215                     	;# 
   286  0216                     	;# 
   287  0216                     	;# 
   288  0217                     	;# 
   289  0217                     	;# 
   290  0219                     	;# 
   291  021A                     	;# 
   292  021B                     	;# 
   293  021C                     	;# 
   294  021D                     	;# 
   295  021E                     	;# 
   296  021F                     	;# 
   297  0291                     	;# 
   298  0291                     	;# 
   299  0292                     	;# 
   300  0293                     	;# 
   301  0294                     	;# 
   302  0295                     	;# 
   303  0295                     	;# 
   304  0296                     	;# 
   305  0298                     	;# 
   306  0298                     	;# 
   307  0299                     	;# 
   308  029A                     	;# 
   309  029B                     	;# 
   310  029C                     	;# 
   311  029D                     	;# 
   312  029E                     	;# 
   313  0311                     	;# 
   314  0311                     	;# 
   315  0312                     	;# 
   316  0313                     	;# 
   317  0318                     	;# 
   318  0318                     	;# 
   319  0319                     	;# 
   320  031A                     	;# 
   321  038C                     	;# 
   322  038D                     	;# 
   323  038E                     	;# 
   324  0391                     	;# 
   325  0392                     	;# 
   326  0393                     	;# 
   327  0394                     	;# 
   328  0395                     	;# 
   329  0396                     	;# 
   330  039A                     	;# 
   331  039C                     	;# 
   332  039D                     	;# 
   333  039E                     	;# 
   334  039F                     	;# 
   335  0415                     	;# 
   336  0416                     	;# 
   337  0417                     	;# 
   338  041C                     	;# 
   339  041D                     	;# 
   340  041E                     	;# 
   341  0FE4                     	;# 
   342  0FE5                     	;# 
   343  0FE6                     	;# 
   344  0FE7                     	;# 
   345  0FE8                     	;# 
   346  0FE9                     	;# 
   347  0FEA                     	;# 
   348  0FEB                     	;# 
   349  0FED                     	;# 
   350  0FEE                     	;# 
   351  0FEF                     	;# 
   352  0000                     	;# 
   353  0001                     	;# 
   354  0002                     	;# 
   355  0003                     	;# 
   356  0004                     	;# 
   357  0005                     	;# 
   358  0006                     	;# 
   359  0007                     	;# 
   360  0008                     	;# 
   361  0009                     	;# 
   362  000A                     	;# 
   363  000B                     	;# 
   364  000C                     	;# 
   365  000D                     	;# 
   366  000E                     	;# 
   367  0011                     	;# 
   368  0012                     	;# 
   369  0013                     	;# 
   370  0014                     	;# 
   371  0015                     	;# 
   372  0016                     	;# 
   373  0016                     	;# 
   374  0017                     	;# 
   375  0018                     	;# 
   376  0019                     	;# 
   377  001A                     	;# 
   378  001B                     	;# 
   379  001C                     	;# 
   380  001E                     	;# 
   381  001F                     	;# 
   382  008C                     	;# 
   383  008D                     	;# 
   384  008E                     	;# 
   385  0091                     	;# 
   386  0092                     	;# 
   387  0093                     	;# 
   388  0094                     	;# 
   389  0095                     	;# 
   390  0096                     	;# 
   391  0097                     	;# 
   392  0098                     	;# 
   393  0099                     	;# 
   394  009A                     	;# 
   395  009B                     	;# 
   396  009B                     	;# 
   397  009C                     	;# 
   398  009D                     	;# 
   399  009E                     	;# 
   400  010C                     	;# 
   401  010D                     	;# 
   402  010E                     	;# 
   403  0111                     	;# 
   404  0112                     	;# 
   405  0113                     	;# 
   406  0114                     	;# 
   407  0115                     	;# 
   408  0116                     	;# 
   409  0117                     	;# 
   410  0118                     	;# 
   411  0119                     	;# 
   412  011A                     	;# 
   413  011B                     	;# 
   414  011D                     	;# 
   415  011E                     	;# 
   416  018C                     	;# 
   417  018D                     	;# 
   418  018E                     	;# 
   419  0191                     	;# 
   420  0191                     	;# 
   421  0192                     	;# 
   422  0193                     	;# 
   423  0193                     	;# 
   424  0193                     	;# 
   425  0194                     	;# 
   426  0195                     	;# 
   427  0196                     	;# 
   428  0199                     	;# 
   429  019A                     	;# 
   430  019B                     	;# 
   431  019B                     	;# 
   432  019C                     	;# 
   433  019D                     	;# 
   434  019E                     	;# 
   435  019F                     	;# 
   436  020C                     	;# 
   437  020D                     	;# 
   438  020E                     	;# 
   439  0211                     	;# 
   440  0211                     	;# 
   441  0212                     	;# 
   442  0212                     	;# 
   443  0213                     	;# 
   444  0213                     	;# 
   445  0214                     	;# 
   446  0214                     	;# 
   447  0215                     	;# 
   448  0215                     	;# 
   449  0215                     	;# 
   450  0216                     	;# 
   451  0216                     	;# 
   452  0217                     	;# 
   453  0217                     	;# 
   454  0219                     	;# 
   455  021A                     	;# 
   456  021B                     	;# 
   457  021C                     	;# 
   458  021D                     	;# 
   459  021E                     	;# 
   460  021F                     	;# 
   461  0291                     	;# 
   462  0291                     	;# 
   463  0292                     	;# 
   464  0293                     	;# 
   465  0294                     	;# 
   466  0295                     	;# 
   467  0295                     	;# 
   468  0296                     	;# 
   469  0298                     	;# 
   470  0298                     	;# 
   471  0299                     	;# 
   472  029A                     	;# 
   473  029B                     	;# 
   474  029C                     	;# 
   475  029D                     	;# 
   476  029E                     	;# 
   477  0311                     	;# 
   478  0311                     	;# 
   479  0312                     	;# 
   480  0313                     	;# 
   481  0318                     	;# 
   482  0318                     	;# 
   483  0319                     	;# 
   484  031A                     	;# 
   485  038C                     	;# 
   486  038D                     	;# 
   487  038E                     	;# 
   488  0391                     	;# 
   489  0392                     	;# 
   490  0393                     	;# 
   491  0394                     	;# 
   492  0395                     	;# 
   493  0396                     	;# 
   494  039A                     	;# 
   495  039C                     	;# 
   496  039D                     	;# 
   497  039E                     	;# 
   498  039F                     	;# 
   499  0415                     	;# 
   500  0416                     	;# 
   501  0417                     	;# 
   502  041C                     	;# 
   503  041D                     	;# 
   504  041E                     	;# 
   505  0FE4                     	;# 
   506  0FE5                     	;# 
   507  0FE6                     	;# 
   508  0FE7                     	;# 
   509  0FE8                     	;# 
   510  0FE9                     	;# 
   511  0FEA                     	;# 
   512  0FEB                     	;# 
   513  0FED                     	;# 
   514  0FEE                     	;# 
   515  0FEF                     	;# 
   516                           
   517                           	psect	idataBANK0
   518  0323                     __pidataBANK0:	
   519                           
   520                           ;initializer for _target
   521  0323  34BE               	retlw	190
   522  0324  3400               	retlw	0
   523                           
   524                           	psect	stringtext
   525  0300                     __pstringtext:	
   526  0300                     _dpowers:	
   527  0300  3401               	retlw	1
   528  0301  3400               	retlw	0
   529  0302  340A               	retlw	10
   530  0303  3400               	retlw	0
   531  0304  3464               	retlw	100
   532  0305  3400               	retlw	0
   533  0306  34E8               	retlw	232
   534  0307  3403               	retlw	3
   535  0308  3410               	retlw	16
   536  0309  3427               	retlw	39
   537  030A                     __end_of_dpowers:	
   538  000C                     _PORTA	set	12
   539  000D                     _PORTB	set	13
   540  000E                     _PORTC	set	14
   541  001B                     _PR2	set	27
   542  001C                     _T2CON	set	28
   543  0015                     _TMR0	set	21
   544  001A                     _TMR2	set	26
   545  005F                     _GIE	set	95
   546  005B                     _IOCIE	set	91
   547  005E                     _PEIE	set	94
   548  0060                     _RA0	set	96
   549  0061                     _RA1	set	97
   550  0062                     _RA2	set	98
   551  0063                     _RA3	set	99
   552  0064                     _RA4	set	100
   553  0065                     _RA5	set	101
   554  006D                     _RB5	set	109
   555  006F                     _RB7	set	111
   556  0070                     _RC0	set	112
   557  0071                     _RC1	set	113
   558  0072                     _RC2	set	114
   559  0073                     _RC3	set	115
   560  0074                     _RC4	set	116
   561  0075                     _RC5	set	117
   562  008B                     _SSP1IF	set	139
   563  005D                     _T0IE	set	93
   564  005A                     _T0IF	set	90
   565  00E2                     _TMR2ON	set	226
   566  008C                     _TXIF	set	140
   567  0095                     _OPTION_REG	set	149
   568  0099                     _OSCCON	set	153
   569  008C                     _TRISA	set	140
   570  008D                     _TRISB	set	141
   571  008E                     _TRISC	set	142
   572  048B                     _SSP1IE	set	1163
   573  08F2                     _P1CSEL	set	2290
   574  08F3                     _P1DSEL	set	2291
   575  08EF                     _RXDTSEL	set	2287
   576  08EA                     _TXCKSEL	set	2282
   577  019B                     _SPBRG	set	411
   578  018C                     _ANSELA	set	396
   579  018D                     _ANSELB	set	397
   580  018E                     _ANSELC	set	398
   581  019D                     _RCSTA	set	413
   582  019A                     _TXREG	set	410
   583  019E                     _TXSTA	set	414
   584  0CF1                     _TRMT	set	3313
   585  0215                     _SSP1CON1	set	533
   586  0214                     _SSP1STAT	set	532
   587  0214                     _SSP1STATbits	set	532
   588  020C                     _WPUA	set	524
   589  0211                     _SSP1BUF	set	529
   590  0293                     _CCP1CON	set	659
   591  0292                     _CCPR1H	set	658
   592  0291                     _CCPR1L	set	657
   593  029E                     _CCPTMRS	set	670
   594  0296                     _PSTR1CON	set	662
   595  0393                     _IOCAF	set	915
   596  0393                     _IOCAFbits	set	915
   597  0391                     _IOCAP	set	913
   598  030A                     STR_1:	
   599  030A  3425               	retlw	37	;'%'
   600  030B  3464               	retlw	100	;'d'
   601  030C  3400               	retlw	0
   602                           
   603                           ; #config settings
   604  0000                     
   605                           	psect	cinit
   606  0030                     start_initialization:	
   607  0030                     __initialization:	
   608                           
   609                           ; Clear objects allocated to COMMON
   610  0030  01F8               	clrf	__pbssCOMMON& (0+127)
   611                           
   612                           ; Clear objects allocated to BANK0
   613  0031  01D6               	clrf	__pbssBANK0& (0+127)
   614  0032  01D7               	clrf	(__pbssBANK0+1)& (0+127)
   615  0033  01D8               	clrf	(__pbssBANK0+2)& (0+127)
   616  0034  01D9               	clrf	(__pbssBANK0+3)& (0+127)
   617  0035  01DA               	clrf	(__pbssBANK0+4)& (0+127)
   618  0036  01DB               	clrf	(__pbssBANK0+5)& (0+127)
   619  0037  01DC               	clrf	(__pbssBANK0+6)& (0+127)
   620  0038  01DD               	clrf	(__pbssBANK0+7)& (0+127)
   621  0039  01DE               	clrf	(__pbssBANK0+8)& (0+127)
   622  003A  01DF               	clrf	(__pbssBANK0+9)& (0+127)
   623  003B  01E0               	clrf	(__pbssBANK0+10)& (0+127)
   624                           
   625                           ; Initialize objects allocated to BANK0
   626  003C  3183  2323  3180   	fcall	__pidataBANK0	;fetch initializer
   627  003F  00E1               	movwf	__pdataBANK0& (0+127)
   628  0040  3183  2324         	fcall	__pidataBANK0+1	;fetch initializer
   629  0042  00E2               	movwf	(__pdataBANK0+1)& (0+127)
   630  0043                     end_of_initialization:	
   631                           ;End of C runtime variable initialization code
   632                           
   633  0043                     __end_of__initialization:	
   634  0043  0020               	movlb	0
   635  0044  3180  2846         	ljmp	_main	;jump to C main() function
   636                           
   637                           	psect	bssCOMMON
   638  0078                     __pbssCOMMON:	
   639  0078                     _r_data:	
   640  0078                     	ds	1
   641                           
   642                           	psect	bssBANK0
   643  0056                     __pbssBANK0:	
   644  0056                     _count:	
   645  0056                     	ds	2
   646  0058                     _time:	
   647  0058                     	ds	2
   648  005A                     _str:	
   649  005A                     	ds	7
   650                           
   651                           	psect	dataBANK0
   652  0061                     __pdataBANK0:	
   653  0061                     _target:	
   654  0061                     	ds	2
   655                           
   656                           	psect	cstackCOMMON
   657  0070                     __pcstackCOMMON:	
   658  0070                     ?_slave_reg:	
   659  0070                     ?_inter:	
   660                           ; 0 bytes @ 0x0
   661                           
   662  0070                     ?_main:	
   663                           ; 0 bytes @ 0x0
   664                           
   665  0070                     ?_slaveread:	
   666                           ; 0 bytes @ 0x0
   667                           
   668  0070                     ?___bmul:	
   669                           ; 1 bytes @ 0x0
   670                           
   671  0070                     ___bmul@multiplicand:	
   672                           ; 1 bytes @ 0x0
   673                           
   674                           
   675                           ; 1 bytes @ 0x0
   676  0070                     	ds	1
   677  0071                     ??___bmul:	
   678                           
   679                           ; 0 bytes @ 0x1
   680  0071                     	ds	1
   681  0072                     ___bmul@product:	
   682                           
   683                           ; 1 bytes @ 0x2
   684  0072                     	ds	1
   685  0073                     ___bmul@multiplier:	
   686                           
   687                           ; 1 bytes @ 0x3
   688  0073                     	ds	1
   689  0074                     ??_slaveread:	
   690                           
   691                           ; 0 bytes @ 0x4
   692  0074                     	ds	1
   693  0075                     ??_inter:	
   694                           
   695                           ; 0 bytes @ 0x5
   696  0075                     	ds	3
   697                           
   698                           	psect	cstackBANK0
   699  0020                     __pcstackBANK0:	
   700  0020                     ??_slave_reg:	
   701  0020                     ?___wmul:	
   702                           ; 0 bytes @ 0x0
   703                           
   704  0020                     ?___lwdiv:	
   705                           ; 2 bytes @ 0x0
   706                           
   707  0020                     ___wmul@multiplier:	
   708                           ; 2 bytes @ 0x0
   709                           
   710  0020                     ___lwdiv@divisor:	
   711                           ; 2 bytes @ 0x0
   712                           
   713                           
   714                           ; 2 bytes @ 0x0
   715  0020                     	ds	2
   716  0022                     ___wmul@multiplicand:	
   717  0022                     ___lwdiv@dividend:	
   718                           ; 2 bytes @ 0x2
   719                           
   720                           
   721                           ; 2 bytes @ 0x2
   722  0022                     	ds	2
   723  0024                     ??___wmul:	
   724  0024                     ??___lwdiv:	
   725                           ; 0 bytes @ 0x4
   726                           
   727  0024                     ___wmul@product:	
   728                           ; 0 bytes @ 0x4
   729                           
   730                           
   731                           ; 2 bytes @ 0x4
   732  0024                     	ds	1
   733  0025                     ___lwdiv@quotient:	
   734                           
   735                           ; 2 bytes @ 0x5
   736  0025                     	ds	2
   737  0027                     ___lwdiv@counter:	
   738                           
   739                           ; 1 bytes @ 0x7
   740  0027                     	ds	1
   741  0028                     ?___lwmod:	
   742  0028                     ___lwmod@divisor:	
   743                           ; 2 bytes @ 0x8
   744                           
   745                           
   746                           ; 2 bytes @ 0x8
   747  0028                     	ds	2
   748  002A                     ___lwmod@dividend:	
   749                           
   750                           ; 2 bytes @ 0xA
   751  002A                     	ds	2
   752  002C                     ??___lwmod:	
   753                           
   754                           ; 0 bytes @ 0xC
   755  002C                     	ds	1
   756  002D                     ___lwmod@counter:	
   757                           
   758                           ; 1 bytes @ 0xD
   759  002D                     	ds	1
   760  002E                     ?_sprintf:	
   761  002E                     sprintf@f:	
   762                           ; 2 bytes @ 0xE
   763                           
   764                           
   765                           ; 2 bytes @ 0xE
   766  002E                     	ds	4
   767  0032                     ??_sprintf:	
   768                           
   769                           ; 0 bytes @ 0x12
   770  0032                     	ds	4
   771  0036                     sprintf@ap:	
   772                           
   773                           ; 1 bytes @ 0x16
   774  0036                     	ds	1
   775  0037                     sprintf@flag:	
   776                           
   777                           ; 1 bytes @ 0x17
   778  0037                     	ds	1
   779  0038                     sprintf@prec:	
   780                           
   781                           ; 1 bytes @ 0x18
   782  0038                     	ds	1
   783  0039                     sprintf@val:	
   784                           
   785                           ; 2 bytes @ 0x19
   786  0039                     	ds	2
   787  003B                     sprintf@sp:	
   788                           
   789                           ; 1 bytes @ 0x1B
   790  003B                     	ds	1
   791  003C                     sprintf@c:	
   792                           
   793                           ; 1 bytes @ 0x1C
   794  003C                     	ds	1
   795  003D                     ?_henkan:	
   796  003D                     henkan@sdata:	
   797                           ; 0 bytes @ 0x1D
   798                           
   799                           
   800                           ; 2 bytes @ 0x1D
   801  003D                     	ds	2
   802  003F                     ?_sousin:	
   803  003F                     ??_henkan:	
   804                           ; 0 bytes @ 0x1F
   805                           
   806  003F                     sousin@sdata:	
   807                           ; 0 bytes @ 0x1F
   808                           
   809                           
   810                           ; 2 bytes @ 0x1F
   811  003F                     	ds	2
   812  0041                     ??_sousin:	
   813                           
   814                           ; 0 bytes @ 0x21
   815  0041                     	ds	1
   816  0042                     sousin@i:	
   817                           
   818                           ; 2 bytes @ 0x22
   819  0042                     	ds	2
   820  0044                     ??_main:	
   821                           
   822                           ; 0 bytes @ 0x24
   823  0044                     	ds	6
   824  004A                     main@dev_befor:	
   825                           
   826                           ; 2 bytes @ 0x2A
   827  004A                     	ds	2
   828  004C                     main@diff_befor:	
   829                           
   830                           ; 2 bytes @ 0x2C
   831  004C                     	ds	2
   832  004E                     main@dmv:	
   833                           
   834                           ; 2 bytes @ 0x2E
   835  004E                     	ds	2
   836  0050                     main@dev_now:	
   837                           
   838                           ; 2 bytes @ 0x30
   839  0050                     	ds	2
   840  0052                     main@diff_now:	
   841                           
   842                           ; 2 bytes @ 0x32
   843  0052                     	ds	2
   844  0054                     main@mv:	
   845                           
   846                           ; 2 bytes @ 0x34
   847  0054                     	ds	2
   848                           
   849                           	psect	maintext
   850  0046                     __pmaintext:	
   851 ;;
   852 ;;Main: autosize = 0, tempsize = 6, incstack = 0, save=0
   853 ;;
   854 ;; *************** function _main *****************
   855 ;; Defined at:
   856 ;;		line 39 in file "main.c"
   857 ;; Parameters:    Size  Location     Type
   858 ;;		None
   859 ;; Auto vars:     Size  Location     Type
   860 ;;  mv              2   52[BANK0 ] int 
   861 ;;  diff_now        2   50[BANK0 ] int 
   862 ;;  dev_now         2   48[BANK0 ] int 
   863 ;;  dmv             2   46[BANK0 ] int 
   864 ;;  diff_befor      2   44[BANK0 ] int 
   865 ;;  dev_befor       2   42[BANK0 ] int 
   866 ;; Return value:  Size  Location     Type
   867 ;;		None               void
   868 ;; Registers used:
   869 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
   870 ;; Tracked objects:
   871 ;;		On entry : B1F/0
   872 ;;		On exit  : 0/0
   873 ;;		Unchanged: 0/0
   874 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
   875 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   876 ;;      Locals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0
   877 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
   878 ;;      Totals:         0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0
   879 ;;Total ram usage:       18 bytes
   880 ;; Hardware stack levels required when called:    7
   881 ;; This function calls:
   882 ;;		___wmul
   883 ;;		_slave_reg
   884 ;;		_sousin
   885 ;; This function is called by:
   886 ;;		Startup code after reset
   887 ;; This function uses a non-reentrant model
   888 ;;
   889                           
   890                           
   891                           ;psect for function _main
   892  0046                     _main:	
   893                           
   894                           ;main.c: 42: int dev_befor = 0;
   895                           
   896                           ;incstack = 0
   897                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
   898  0046  0020               	movlb	0	; select bank0
   899  0047  01CA               	clrf	main@dev_befor
   900  0048  01CB               	clrf	main@dev_befor+1
   901                           
   902                           ;main.c: 43: int dev_now = 0;
   903  0049  01D0               	clrf	main@dev_now
   904  004A  01D1               	clrf	main@dev_now+1
   905                           
   906                           ;main.c: 44: int diff_befor = 0;
   907  004B  01CC               	clrf	main@diff_befor
   908  004C  01CD               	clrf	main@diff_befor+1
   909                           
   910                           ;main.c: 45: int diff_now;
   911                           ;main.c: 46: int mv = 0;
   912  004D  01D4               	clrf	main@mv
   913  004E  01D5               	clrf	main@mv+1
   914                           
   915                           ;main.c: 47: int dmv = 0;
   916  004F  01CE               	clrf	main@dmv
   917  0050  01CF               	clrf	main@dmv+1
   918                           
   919                           ;main.c: 49: OSCCON = 0x72;
   920  0051  3072               	movlw	114
   921  0052  0021               	movlb	1	; select bank1
   922  0053  0099               	movwf	25	;volatile
   923                           
   924                           ;main.c: 50: TRISA = 0x30;
   925  0054  3030               	movlw	48
   926  0055  008C               	movwf	12	;volatile
   927                           
   928                           ;main.c: 51: TRISB = 0x70;
   929  0056  3070               	movlw	112
   930  0057  008D               	movwf	13	;volatile
   931                           
   932                           ;main.c: 52: TRISC = 0x40;
   933  0058  3040               	movlw	64
   934  0059  008E               	movwf	14	;volatile
   935                           
   936                           ;main.c: 53: PORTA = 0x00;
   937  005A  0020               	movlb	0	; select bank0
   938  005B  018C               	clrf	12	;volatile
   939                           
   940                           ;main.c: 54: PORTB = 0x00;
   941  005C  018D               	clrf	13	;volatile
   942                           
   943                           ;main.c: 55: PORTC = 0x00;
   944  005D  018E               	clrf	14	;volatile
   945                           
   946                           ;main.c: 56: ANSELA = 0x00;
   947  005E  0023               	movlb	3	; select bank3
   948  005F  018C               	clrf	12	;volatile
   949                           
   950                           ;main.c: 57: ANSELB = 0x00;
   951  0060  018D               	clrf	13	;volatile
   952                           
   953                           ;main.c: 58: ANSELC = 0x00;
   954  0061  018E               	clrf	14	;volatile
   955                           
   956                           ;main.c: 59: WPUA = 0x30;
   957  0062  3030               	movlw	48
   958  0063  0024               	movlb	4	; select bank4
   959  0064  008C               	movwf	12	;volatile
   960                           
   961                           ;main.c: 62: CCPTMRS = 0x00;
   962  0065  0025               	movlb	5	; select bank5
   963  0066  019E               	clrf	30	;volatile
   964                           
   965                           ;main.c: 63: CCP1CON = 0xCC;
   966  0067  30CC               	movlw	204
   967  0068  0093               	movwf	19	;volatile
   968                           
   969                           ;main.c: 64: PSTR1CON = 0x0A;
   970  0069  300A               	movlw	10
   971  006A  0096               	movwf	22	;volatile
   972                           
   973                           ;main.c: 65: CCPR1L = 0;
   974  006B  0191               	clrf	17	;volatile
   975                           
   976                           ;main.c: 66: P1CSEL = 0;
   977  006C  0022               	movlb	2	; select bank2
   978  006D  111E               	bcf	30,2	;volatile
   979                           
   980                           ;main.c: 67: P1DSEL = 0;
   981  006E  119E               	bcf	30,3	;volatile
   982                           
   983                           ;main.c: 68: T2CON = 0x00;
   984  006F  0020               	movlb	0	; select bank0
   985  0070  019C               	clrf	28	;volatile
   986                           
   987                           ;main.c: 69: PR2 = 124;
   988  0071  307C               	movlw	124
   989  0072  009B               	movwf	27	;volatile
   990                           
   991                           ;main.c: 70: CCPR1L = 0;
   992  0073  0025               	movlb	5	; select bank5
   993  0074  0191               	clrf	17	;volatile
   994                           
   995                           ;main.c: 71: CCPR1H = 0;
   996  0075  0192               	clrf	18	;volatile
   997                           
   998                           ;main.c: 72: TMR2 = 0;
   999  0076  0020               	movlb	0	; select bank0
  1000  0077  019A               	clrf	26	;volatile
  1001                           
  1002                           ;main.c: 73: TMR2ON = 1;
  1003  0078  151C               	bsf	28,2	;volatile
  1004                           
  1005                           ;main.c: 76: RXDTSEL = 0;
  1006  0079  0022               	movlb	2	; select bank2
  1007  007A  139D               	bcf	29,7	;volatile
  1008                           
  1009                           ;main.c: 77: TXCKSEL = 0;
  1010  007B  111D               	bcf	29,2	;volatile
  1011                           
  1012                           ;main.c: 78: TXSTA = 0b00100100;
  1013  007C  3024               	movlw	36
  1014  007D  0023               	movlb	3	; select bank3
  1015  007E  009E               	movwf	30	;volatile
  1016                           
  1017                           ;main.c: 79: RCSTA = 0b10010000;
  1018  007F  3090               	movlw	144
  1019  0080  009D               	movwf	29	;volatile
  1020                           
  1021                           ;main.c: 80: SPBRG = 51;
  1022  0081  3000               	movlw	0
  1023  0082  009C               	movwf	28	;volatile
  1024  0083  3033               	movlw	51
  1025  0084  009B               	movwf	27	;volatile
  1026                           
  1027                           ;main.c: 83: slave_reg();
  1028  0085  3183  231A  3180   	fcall	_slave_reg
  1029                           
  1030                           ;main.c: 86: OPTION_REG = 0x01;
  1031  0088  3001               	movlw	1
  1032  0089  0021               	movlb	1	; select bank1
  1033  008A  0095               	movwf	21	;volatile
  1034                           
  1035                           ;main.c: 88: TMR0 = 156;
  1036  008B  309C               	movlw	156
  1037  008C  0020               	movlb	0	; select bank0
  1038  008D  0095               	movwf	21	;volatile
  1039                           
  1040                           ;main.c: 89: T0IF = 0;
  1041  008E  110B               	bcf	11,2	;volatile
  1042                           
  1043                           ;main.c: 90: T0IE = 1;
  1044  008F  168B               	bsf	11,5	;volatile
  1045                           
  1046                           ;main.c: 92: IOCAP = 0x10;
  1047  0090  3010               	movlw	16
  1048  0091  0027               	movlb	7	; select bank7
  1049  0092  0091               	movwf	17	;volatile
  1050                           
  1051                           ;main.c: 93: IOCAF = 0;
  1052  0093  0193               	clrf	19	;volatile
  1053                           
  1054                           ;main.c: 94: IOCIE = 1;
  1055  0094  158B               	bsf	11,3	;volatile
  1056                           
  1057                           ;main.c: 96: PEIE = 1;
  1058  0095  170B               	bsf	11,6	;volatile
  1059                           
  1060                           ;main.c: 97: GIE = 1;
  1061  0096  178B               	bsf	11,7	;volatile
  1062  0097                     l1461:	
  1063                           ;main.c: 101: while(1){
  1064                           
  1065                           
  1066                           ;main.c: 103: if(time == 500){
  1067  0097  30F4               	movlw	244
  1068  0098  0020               	movlb	0	; select bank0
  1069  0099  0658               	xorwf	_time,w
  1070  009A  1D03               	skipz
  1071  009B  2897               	goto	l1461
  1072  009C  0359               	decf	_time+1,w
  1073  009D  1D03               	btfss	3,2
  1074  009E  2897               	goto	l1461
  1075                           
  1076                           ;main.c: 105: dev_befor = diff_now;
  1077  009F  0853               	movf	main@diff_now+1,w
  1078  00A0  00CB               	movwf	main@dev_befor+1
  1079  00A1  0852               	movf	main@diff_now,w
  1080  00A2  00CA               	movwf	main@dev_befor
  1081                           
  1082                           ;main.c: 106: dev_now = target-count;
  1083  00A3  0956               	comf	_count,w
  1084  00A4  00C4               	movwf	??_main
  1085  00A5  0957               	comf	_count+1,w
  1086  00A6  00C5               	movwf	??_main+1
  1087  00A7  0AC4               	incf	??_main,f
  1088  00A8  1903               	skipnz
  1089  00A9  0AC5               	incf	??_main+1,f
  1090  00AA  0861               	movf	_target,w
  1091  00AB  0744               	addwf	??_main,w
  1092  00AC  00D0               	movwf	main@dev_now
  1093  00AD  0862               	movf	_target+1,w
  1094  00AE  3D45               	addwfc	??_main+1,w
  1095  00AF  00D1               	movwf	main@dev_now+1
  1096                           
  1097                           ;main.c: 108: diff_befor = diff_now;
  1098  00B0  0853               	movf	main@diff_now+1,w
  1099  00B1  00CD               	movwf	main@diff_befor+1
  1100  00B2  0852               	movf	main@diff_now,w
  1101  00B3  00CC               	movwf	main@diff_befor
  1102                           
  1103                           ;main.c: 109: diff_now = dev_now - dev_befor;
  1104  00B4  094A               	comf	main@dev_befor,w
  1105  00B5  00C4               	movwf	??_main
  1106  00B6  094B               	comf	main@dev_befor+1,w
  1107  00B7  00C5               	movwf	??_main+1
  1108  00B8  0AC4               	incf	??_main,f
  1109  00B9  1903               	skipnz
  1110  00BA  0AC5               	incf	??_main+1,f
  1111  00BB  0850               	movf	main@dev_now,w
  1112  00BC  0744               	addwf	??_main,w
  1113  00BD  00D2               	movwf	main@diff_now
  1114  00BE  0851               	movf	main@dev_now+1,w
  1115  00BF  3D45               	addwfc	??_main+1,w
  1116  00C0  00D3               	movwf	main@diff_now+1
  1117                           
  1118                           ;main.c: 111: dmv = (1 * diff_now) + (0 * dev_now) + (0 * (diff_now - diff_befor));
  1119  00C1  0851               	movf	main@dev_now+1,w
  1120  00C2  00A1               	movwf	___wmul@multiplier+1
  1121  00C3  0850               	movf	main@dev_now,w
  1122  00C4  00A0               	movwf	___wmul@multiplier
  1123  00C5  3000               	movlw	0
  1124  00C6  00A2               	movwf	___wmul@multiplicand
  1125  00C7  00A3               	movwf	___wmul@multiplicand+1
  1126  00C8  3182  22C2  3180   	fcall	___wmul
  1127  00CB  0020               	movlb	0	; select bank0
  1128  00CC  0820               	movf	?___wmul,w
  1129  00CD  00C4               	movwf	??_main
  1130  00CE  0821               	movf	?___wmul+1,w
  1131  00CF  00C5               	movwf	??_main+1
  1132  00D0  094C               	comf	main@diff_befor,w
  1133  00D1  00C6               	movwf	??_main+2
  1134  00D2  094D               	comf	main@diff_befor+1,w
  1135  00D3  00C7               	movwf	??_main+3
  1136  00D4  0AC6               	incf	??_main+2,f
  1137  00D5  1903               	skipnz
  1138  00D6  0AC7               	incf	??_main+3,f
  1139  00D7  0852               	movf	main@diff_now,w
  1140  00D8  0746               	addwf	??_main+2,w
  1141  00D9  00A0               	movwf	___wmul@multiplier
  1142  00DA  0853               	movf	main@diff_now+1,w
  1143  00DB  3D47               	addwfc	??_main+3,w
  1144  00DC  00A1               	movwf	___wmul@multiplier+1
  1145  00DD  3000               	movlw	0
  1146  00DE  00A2               	movwf	___wmul@multiplicand
  1147  00DF  00A3               	movwf	___wmul@multiplicand+1
  1148  00E0  3182  22C2  3180   	fcall	___wmul
  1149  00E3  0020               	movlb	0	; select bank0
  1150  00E4  0820               	movf	?___wmul,w
  1151  00E5  0744               	addwf	??_main,w
  1152  00E6  00C8               	movwf	??_main+4
  1153  00E7  0821               	movf	?___wmul+1,w
  1154  00E8  3D45               	addwfc	??_main+1,w
  1155  00E9  00C9               	movwf	??_main+5
  1156  00EA  0852               	movf	main@diff_now,w
  1157  00EB  0748               	addwf	??_main+4,w
  1158  00EC  00CE               	movwf	main@dmv
  1159  00ED  0853               	movf	main@diff_now+1,w
  1160  00EE  3D49               	addwfc	??_main+5,w
  1161  00EF  00CF               	movwf	main@dmv+1
  1162                           
  1163                           ;main.c: 112: mv = mv +dmv;
  1164  00F0  084E               	movf	main@dmv,w
  1165  00F1  0754               	addwf	main@mv,w
  1166  00F2  00D4               	movwf	main@mv
  1167  00F3  084F               	movf	main@dmv+1,w
  1168  00F4  3D55               	addwfc	main@mv+1,w
  1169  00F5  00D5               	movwf	main@mv+1
  1170                           
  1171                           ;main.c: 114: if(mv >= 124){
  1172  00F6  0855               	movf	main@mv+1,w
  1173  00F7  3A80               	xorlw	128
  1174  00F8  00C4               	movwf	??_main
  1175  00F9  3080               	movlw	128
  1176  00FA  0244               	subwf	??_main,w
  1177  00FB  1D03               	skipz
  1178  00FC  28FF               	goto	u1155
  1179  00FD  307C               	movlw	124
  1180  00FE  0254               	subwf	main@mv,w
  1181  00FF                     u1155:	
  1182  00FF  1C03               	skipc
  1183  0100  2907               	goto	l104
  1184                           
  1185                           ;main.c: 115: mv = 124;
  1186  0101  307C               	movlw	124
  1187  0102  0020               	movlb	0	; select bank0
  1188  0103  00D4               	movwf	main@mv
  1189  0104  3000               	movlw	0
  1190  0105  00D5               	movwf	main@mv+1
  1191                           
  1192                           ;main.c: 116: }else if(mv < 0){
  1193  0106  290C               	goto	l1479
  1194  0107                     l104:	
  1195  0107  0020               	movlb	0	; select bank0
  1196  0108  1FD5               	btfss	main@mv+1,7
  1197  0109  290C               	goto	l1479
  1198                           
  1199                           ;main.c: 117: mv = 0;
  1200  010A  01D4               	clrf	main@mv
  1201  010B  01D5               	clrf	main@mv+1
  1202  010C                     l1479:	
  1203                           
  1204                           ;main.c: 118: }
  1205                           ;main.c: 120: CCPR1L = mv;
  1206  010C  0854               	movf	main@mv,w
  1207  010D  0025               	movlb	5	; select bank5
  1208  010E  0091               	movwf	17	;volatile
  1209                           
  1210                           ;main.c: 122: sousin(dev_now);
  1211  010F  0020               	movlb	0	; select bank0
  1212  0110  0851               	movf	main@dev_now+1,w
  1213  0111  00C0               	movwf	sousin@sdata+1
  1214  0112  0850               	movf	main@dev_now,w
  1215  0113  00BF               	movwf	sousin@sdata
  1216  0114  3181  21EB  3180   	fcall	_sousin
  1217                           
  1218                           ;main.c: 123: time = 0;
  1219  0117  0020               	movlb	0	; select bank0
  1220  0118  01D8               	clrf	_time
  1221  0119  01D9               	clrf	_time+1
  1222                           
  1223                           ;main.c: 124: count = 0;
  1224  011A  01D6               	clrf	_count
  1225  011B  01D7               	clrf	_count+1
  1226  011C  2897               	goto	l1461
  1227  011D                     __end_of_main:	
  1228                           
  1229                           	psect	text1
  1230  01EB                     __ptext1:	
  1231 ;; *************** function _sousin *****************
  1232 ;; Defined at:
  1233 ;;		line 13 in file "usart.c"
  1234 ;; Parameters:    Size  Location     Type
  1235 ;;  sdata           2   31[BANK0 ] int 
  1236 ;; Auto vars:     Size  Location     Type
  1237 ;;  i               2   34[BANK0 ] int 
  1238 ;; Return value:  Size  Location     Type
  1239 ;;		None               void
  1240 ;; Registers used:
  1241 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1242 ;; Tracked objects:
  1243 ;;		On entry : 0/0
  1244 ;;		On exit  : 0/0
  1245 ;;		Unchanged: 0/0
  1246 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1247 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1248 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1249 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1250 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1251 ;;Total ram usage:        5 bytes
  1252 ;; Hardware stack levels used:    1
  1253 ;; Hardware stack levels required when called:    6
  1254 ;; This function calls:
  1255 ;;		_henkan
  1256 ;; This function is called by:
  1257 ;;		_main
  1258 ;; This function uses a non-reentrant model
  1259 ;;
  1260                           
  1261                           
  1262                           ;psect for function _sousin
  1263  01EB                     _sousin:	
  1264                           
  1265                           ;usart.c: 15: int i = 0;
  1266                           
  1267                           ;incstack = 0
  1268                           ; Regs used in _sousin: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1269  01EB  0020               	movlb	0	; select bank0
  1270  01EC  01C2               	clrf	sousin@i
  1271  01ED  01C3               	clrf	sousin@i+1
  1272                           
  1273                           ;usart.c: 17: henkan(sdata);
  1274  01EE  0840               	movf	sousin@sdata+1,w
  1275  01EF  00BE               	movwf	henkan@sdata+1
  1276  01F0  083F               	movf	sousin@sdata,w
  1277  01F1  00BD               	movwf	henkan@sdata
  1278  01F2  3183  230D  3181   	fcall	_henkan
  1279                           
  1280                           ;usart.c: 19: for(i=0;i<7;i++){
  1281  01F5  0020               	movlb	0	; select bank0
  1282  01F6  01C2               	clrf	sousin@i
  1283  01F7  01C3               	clrf	sousin@i+1
  1284  01F8  0843               	movf	sousin@i+1,w
  1285  01F9  3A80               	xorlw	128
  1286  01FA  00C1               	movwf	??_sousin
  1287  01FB  3080               	movlw	128
  1288  01FC  0241               	subwf	??_sousin,w
  1289  01FD  1D03               	skipz
  1290  01FE  2A01               	goto	u995
  1291  01FF  3007               	movlw	7
  1292  0200  0242               	subwf	sousin@i,w
  1293  0201                     u995:	
  1294  0201  1803               	btfsc	3,0
  1295  0202  2A22               	goto	l269
  1296  0203                     l264:	
  1297                           ;usart.c: 20: while(TXIF==0 && TRMT==0);
  1298                           
  1299  0203  0020               	movlb	0	; select bank0
  1300  0204  1A11               	btfsc	17,4	;volatile
  1301  0205  2A09               	goto	l1349
  1302  0206  0023               	movlb	3	; select bank3
  1303  0207  1C9E               	btfss	30,1	;volatile
  1304  0208  2A03               	goto	l264
  1305  0209                     l1349:	
  1306                           
  1307                           ;usart.c: 21: TXREG = str[i];
  1308  0209  0020               	movlb	0	; select bank0
  1309  020A  0842               	movf	sousin@i,w
  1310  020B  3E5A               	addlw	(low (_str| 0))& (0+255)
  1311  020C  0086               	movwf	6
  1312  020D  0187               	clrf	7
  1313  020E  0801               	movf	1,w
  1314  020F  0023               	movlb	3	; select bank3
  1315  0210  009A               	movwf	26	;volatile
  1316                           
  1317                           ;usart.c: 22: TXIF = 0;
  1318  0211  0020               	movlb	0	; select bank0
  1319  0212  1211               	bcf	17,4	;volatile
  1320  0213  3001               	movlw	1
  1321  0214  07C2               	addwf	sousin@i,f
  1322  0215  3000               	movlw	0
  1323  0216  3DC3               	addwfc	sousin@i+1,f
  1324  0217  0843               	movf	sousin@i+1,w
  1325  0218  3A80               	xorlw	128
  1326  0219  00C1               	movwf	??_sousin
  1327  021A  3080               	movlw	128
  1328  021B  0241               	subwf	??_sousin,w
  1329  021C  1D03               	skipz
  1330  021D  2A20               	goto	u1025
  1331  021E  3007               	movlw	7
  1332  021F  0242               	subwf	sousin@i,w
  1333  0220                     u1025:	
  1334  0220  1C03               	skipc
  1335  0221  2A03               	goto	l264
  1336  0222                     l269:	
  1337                           ;usart.c: 23: }
  1338                           ;usart.c: 24: while(TXIF==0 && TRMT==0);
  1339                           
  1340  0222  0020               	movlb	0	; select bank0
  1341  0223  1A11               	btfsc	17,4	;volatile
  1342  0224  2A28               	goto	l1359
  1343  0225  0023               	movlb	3	; select bank3
  1344  0226  1C9E               	btfss	30,1	;volatile
  1345  0227  2A22               	goto	l269
  1346  0228                     l1359:	
  1347                           
  1348                           ;usart.c: 25: TXREG = '\n';
  1349  0228  300A               	movlw	10
  1350  0229  0023               	movlb	3	; select bank3
  1351  022A  009A               	movwf	26	;volatile
  1352                           
  1353                           ;usart.c: 26: TXIF = 0;
  1354  022B  0020               	movlb	0	; select bank0
  1355  022C  1211               	bcf	17,4	;volatile
  1356  022D                     l274:	
  1357                           ;usart.c: 27: while(TXIF==0 && TRMT==0);
  1358                           
  1359  022D  0020               	movlb	0	; select bank0
  1360  022E  1A11               	btfsc	17,4	;volatile
  1361  022F  2A33               	goto	l1365
  1362  0230  0023               	movlb	3	; select bank3
  1363  0231  1C9E               	btfss	30,1	;volatile
  1364  0232  2A2D               	goto	l274
  1365  0233                     l1365:	
  1366                           
  1367                           ;usart.c: 28: TXREG = '\r';
  1368  0233  300D               	movlw	13
  1369  0234  0023               	movlb	3	; select bank3
  1370  0235  009A               	movwf	26	;volatile
  1371                           
  1372                           ;usart.c: 29: TXIF = 0;
  1373  0236  0020               	movlb	0	; select bank0
  1374  0237  1211               	bcf	17,4	;volatile
  1375  0238  0008               	return
  1376  0239                     __end_of_sousin:	
  1377                           
  1378                           	psect	text2
  1379  030D                     __ptext2:	
  1380 ;; *************** function _henkan *****************
  1381 ;; Defined at:
  1382 ;;		line 6 in file "usart.c"
  1383 ;; Parameters:    Size  Location     Type
  1384 ;;  sdata           2   29[BANK0 ] int 
  1385 ;; Auto vars:     Size  Location     Type
  1386 ;;		None
  1387 ;; Return value:  Size  Location     Type
  1388 ;;		None               void
  1389 ;; Registers used:
  1390 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1391 ;; Tracked objects:
  1392 ;;		On entry : 0/0
  1393 ;;		On exit  : 0/0
  1394 ;;		Unchanged: 0/0
  1395 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1396 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1397 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1398 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1399 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1400 ;;Total ram usage:        2 bytes
  1401 ;; Hardware stack levels used:    1
  1402 ;; Hardware stack levels required when called:    5
  1403 ;; This function calls:
  1404 ;;		_sprintf
  1405 ;; This function is called by:
  1406 ;;		_sousin
  1407 ;; This function uses a non-reentrant model
  1408 ;;
  1409                           
  1410                           
  1411                           ;psect for function _henkan
  1412  030D                     _henkan:	
  1413                           
  1414                           ;usart.c: 8: sprintf(str,"%d",sdata);
  1415                           
  1416                           ;incstack = 0
  1417                           ; Regs used in _henkan: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1418  030D  300A               	movlw	low (STR_1| (0+32768))
  1419  030E  0020               	movlb	0	; select bank0
  1420  030F  00AE               	movwf	sprintf@f
  1421  0310  3083               	movlw	high (STR_1| (0+32768))
  1422  0311  00AF               	movwf	sprintf@f+1
  1423  0312  083E               	movf	henkan@sdata+1,w
  1424  0313  00B1               	movwf	?_sprintf+3
  1425  0314  083D               	movf	henkan@sdata,w
  1426  0315  00B0               	movwf	?_sprintf+2
  1427  0316  305A               	movlw	(low (_str| 0))& (0+255)
  1428  0317  3181  211D         	fcall	_sprintf
  1429  0319  0008               	return
  1430  031A                     __end_of_henkan:	
  1431                           
  1432                           	psect	text3
  1433  011D                     __ptext3:	
  1434 ;; *************** function _sprintf *****************
  1435 ;; Defined at:
  1436 ;;		line 492 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\doprnt.c"
  1437 ;; Parameters:    Size  Location     Type
  1438 ;;  sp              1    wreg     PTR unsigned char 
  1439 ;;		 -> str(7), 
  1440 ;;  f               2   14[BANK0 ] PTR const unsigned char 
  1441 ;;		 -> STR_1(3), 
  1442 ;; Auto vars:     Size  Location     Type
  1443 ;;  sp              1   27[BANK0 ] PTR unsigned char 
  1444 ;;		 -> str(7), 
  1445 ;;  tmpval          4    0        struct .
  1446 ;;  val             2   25[BANK0 ] unsigned int 
  1447 ;;  cp              2    0        PTR const unsigned char 
  1448 ;;  len             2    0        unsigned int 
  1449 ;;  c               1   28[BANK0 ] char 
  1450 ;;  prec            1   24[BANK0 ] char 
  1451 ;;  flag            1   23[BANK0 ] unsigned char 
  1452 ;;  ap              1   22[BANK0 ] PTR void [1]
  1453 ;;		 -> ?_sprintf(2), 
  1454 ;; Return value:  Size  Location     Type
  1455 ;;                  2   14[BANK0 ] int 
  1456 ;; Registers used:
  1457 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1458 ;; Tracked objects:
  1459 ;;		On entry : 0/0
  1460 ;;		On exit  : 0/0
  1461 ;;		Unchanged: 0/0
  1462 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1463 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1464 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1465 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1466 ;;      Totals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1467 ;;Total ram usage:       15 bytes
  1468 ;; Hardware stack levels used:    1
  1469 ;; Hardware stack levels required when called:    4
  1470 ;; This function calls:
  1471 ;;		___lwdiv
  1472 ;;		___lwmod
  1473 ;; This function is called by:
  1474 ;;		_henkan
  1475 ;; This function uses a non-reentrant model
  1476 ;;
  1477                           
  1478                           
  1479                           ;psect for function _sprintf
  1480  011D                     _sprintf:	
  1481                           
  1482                           ;incstack = 0
  1483                           ; Regs used in _sprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1484                           ;sprintf@sp stored from wreg
  1485  011D  0020               	movlb	0	; select bank0
  1486  011E  00BB               	movwf	sprintf@sp
  1487                           
  1488                           ;doprnt.c: 494: va_list ap;
  1489                           ;doprnt.c: 499: signed char c;
  1490                           ;doprnt.c: 506: signed char prec;
  1491                           ;doprnt.c: 508: unsigned char flag;
  1492                           ;doprnt.c: 523: union {
  1493                           ;doprnt.c: 524: unsigned long vd;
  1494                           ;doprnt.c: 525: double integ;
  1495                           ;doprnt.c: 526: } tmpval;
  1496                           ;doprnt.c: 528: unsigned int val;
  1497                           ;doprnt.c: 529: unsigned len;
  1498                           ;doprnt.c: 530: const char * cp;
  1499                           ;doprnt.c: 533: *ap = __va_start();
  1500  011F  3030               	movlw	(low ((?_sprintf| 0+2)))& (0+255)
  1501  0120  00B2               	movwf	??_sprintf
  1502  0121  0832               	movf	??_sprintf,w
  1503  0122  00B6               	movwf	sprintf@ap
  1504  0123                     l1283:	
  1505                           ;doprnt.c: 536: while(c = *f++) {
  1506                           
  1507  0123  082F               	movf	sprintf@f+1,w
  1508  0124  00B3               	movwf	??_sprintf+1
  1509  0125  082E               	movf	sprintf@f,w
  1510  0126  00B2               	movwf	??_sprintf
  1511  0127  0AAE               	incf	sprintf@f,f
  1512  0128  1903               	skipnz
  1513  0129  0AAF               	incf	sprintf@f+1,f
  1514  012A  0832               	movf	??_sprintf,w
  1515  012B  0084               	movwf	4
  1516  012C  0833               	movf	??_sprintf+1,w
  1517  012D  0085               	movwf	5
  1518  012E  0800               	movf	0,w	;code access
  1519  012F  00B4               	movwf	??_sprintf+2
  1520  0130  0834               	movf	??_sprintf+2,w
  1521  0131  00BC               	movwf	sprintf@c
  1522  0132  083C               	movf	sprintf@c,w
  1523  0133  1903               	btfsc	3,2
  1524  0134  29E6               	goto	l1285
  1525                           
  1526                           ;doprnt.c: 538: if(c != '%')
  1527  0135  3025               	movlw	37
  1528  0136  063C               	xorwf	sprintf@c,w
  1529  0137  1903               	btfsc	3,2
  1530  0138  2945               	goto	l1239
  1531                           
  1532                           ;doprnt.c: 540: {
  1533                           ;doprnt.c: 541: ((*sp++ = (c)));
  1534  0139  083C               	movf	sprintf@c,w
  1535  013A  00B2               	movwf	??_sprintf
  1536  013B  083B               	movf	sprintf@sp,w
  1537  013C  0086               	movwf	6
  1538  013D  0187               	clrf	7
  1539  013E  0832               	movf	??_sprintf,w
  1540  013F  0081               	movwf	1
  1541  0140  3001               	movlw	1
  1542  0141  00B2               	movwf	??_sprintf
  1543  0142  0832               	movf	??_sprintf,w
  1544  0143  07BB               	addwf	sprintf@sp,f
  1545                           
  1546                           ;doprnt.c: 542: continue;
  1547  0144  2923               	goto	l1283
  1548  0145                     l1239:	
  1549                           
  1550                           ;doprnt.c: 543: }
  1551                           ;doprnt.c: 548: flag = 0;
  1552  0145  01B7               	clrf	sprintf@flag
  1553                           
  1554                           ;doprnt.c: 822: }
  1555                           
  1556                           ;doprnt.c: 813: continue;
  1557                           
  1558                           ;doprnt.c: 802: default:
  1559                           
  1560                           ;doprnt.c: 698: case 'i':
  1561                           ;doprnt.c: 699: break;
  1562                           
  1563                           ;doprnt.c: 697: case 'd':
  1564                           
  1565                           ;doprnt.c: 638: goto alldone;
  1566                           
  1567                           ;doprnt.c: 637: case 0:
  1568                           
  1569                           ;doprnt.c: 635: switch(c = *f++) {
  1570  0146  082F               	movf	sprintf@f+1,w
  1571  0147  00B3               	movwf	??_sprintf+1
  1572  0148  082E               	movf	sprintf@f,w
  1573  0149  00B2               	movwf	??_sprintf
  1574  014A  0AAE               	incf	sprintf@f,f
  1575  014B  1903               	skipnz
  1576  014C  0AAF               	incf	sprintf@f+1,f
  1577  014D  0832               	movf	??_sprintf,w
  1578  014E  0084               	movwf	4
  1579  014F  0833               	movf	??_sprintf+1,w
  1580  0150  0085               	movwf	5
  1581  0151  0800               	movf	0,w	;code access
  1582  0152  00BC               	movwf	sprintf@c
  1583                           
  1584                           ; Switch size 1, requested type "space"
  1585                           ; Number of cases is 3, Range of values is 0 to 105
  1586                           ; switch strategies available:
  1587                           ; Name         Instructions Cycles
  1588                           ; simple_byte           10     6 (average)
  1589                           ; direct_byte          218     6 (fixed)
  1590                           ; jumptable            260     6 (fixed)
  1591                           ;	Chosen strategy is simple_byte
  1592  0153  3A00               	xorlw	0	; case 0
  1593  0154  1903               	skipnz
  1594  0155  29E6               	goto	l1285
  1595  0156  3A64               	xorlw	100	; case 100
  1596  0157  1903               	skipnz
  1597  0158  295D               	goto	l1245
  1598  0159  3A0D               	xorlw	13	; case 105
  1599  015A  1903               	skipnz
  1600  015B  295D               	goto	l1245
  1601  015C  2923               	goto	l1283
  1602  015D                     l1245:	
  1603                           
  1604                           ;doprnt.c: 1253: {
  1605                           ;doprnt.c: 1259: val = (int)(*(int *)__va_arg((*(int **)ap), (int)0));
  1606  015D  0836               	movf	sprintf@ap,w
  1607  015E  0086               	movwf	6
  1608  015F  0187               	clrf	7
  1609  0160  3F40               	moviw [0]fsr1
  1610  0161  00B9               	movwf	sprintf@val
  1611  0162  3F41               	moviw [1]fsr1
  1612  0163  00BA               	movwf	sprintf@val+1
  1613  0164  3002               	movlw	2
  1614  0165  00B2               	movwf	??_sprintf
  1615  0166  0832               	movf	??_sprintf,w
  1616  0167  07B6               	addwf	sprintf@ap,f
  1617                           
  1618                           ;doprnt.c: 1261: if((int)val < 0) {
  1619  0168  1FBA               	btfss	sprintf@val+1,7
  1620  0169  2973               	goto	l1255
  1621                           
  1622                           ;doprnt.c: 1262: flag |= 0x03;
  1623  016A  3003               	movlw	3
  1624  016B  00B2               	movwf	??_sprintf
  1625  016C  0832               	movf	??_sprintf,w
  1626  016D  04B7               	iorwf	sprintf@flag,f
  1627                           
  1628                           ;doprnt.c: 1263: val = -val;
  1629  016E  09B9               	comf	sprintf@val,f
  1630  016F  09BA               	comf	sprintf@val+1,f
  1631  0170  0AB9               	incf	sprintf@val,f
  1632  0171  1903               	skipnz
  1633  0172  0ABA               	incf	sprintf@val+1,f
  1634  0173                     l1255:	
  1635                           
  1636                           ;doprnt.c: 1264: }
  1637                           ;doprnt.c: 1266: }
  1638                           ;doprnt.c: 1305: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  1639  0173  01BC               	clrf	sprintf@c
  1640  0174  0ABC               	incf	sprintf@c,f
  1641  0175  3005               	movlw	5
  1642  0176  063C               	xorwf	sprintf@c,w
  1643  0177  1903               	btfsc	3,2
  1644  0178  2998               	goto	l1267
  1645  0179                     l1261:	
  1646                           
  1647                           ;doprnt.c: 1306: if(val < dpowers[c])
  1648  0179  083C               	movf	sprintf@c,w
  1649  017A  00B2               	movwf	??_sprintf
  1650  017B  01B3               	clrf	??_sprintf+1
  1651  017C  35B2               	lslf	??_sprintf,f
  1652  017D  0DB3               	rlf	??_sprintf+1,f
  1653  017E  3000               	movlw	low (_dpowers| (0+32768))
  1654  017F  0732               	addwf	??_sprintf,w
  1655  0180  0084               	movwf	4
  1656  0181  3083               	movlw	high (_dpowers| (0+32768))
  1657  0182  3D33               	addwfc	??_sprintf+1,w
  1658  0183  0085               	movwf	5
  1659  0184  3F00               	moviw [0]fsr0
  1660  0185  00B4               	movwf	??_sprintf+2
  1661  0186  3F01               	moviw [1]fsr0
  1662  0187  00B5               	movwf	??_sprintf+3
  1663  0188  0835               	movf	??_sprintf+3,w
  1664  0189  023A               	subwf	sprintf@val+1,w
  1665  018A  1D03               	skipz
  1666  018B  298E               	goto	u895
  1667  018C  0834               	movf	??_sprintf+2,w
  1668  018D  0239               	subwf	sprintf@val,w
  1669  018E                     u895:	
  1670  018E  1C03               	btfss	3,0
  1671  018F  2998               	goto	l1267
  1672                           
  1673                           ;doprnt.c: 1307: break;
  1674  0190  3001               	movlw	1
  1675  0191  00B2               	movwf	??_sprintf
  1676  0192  0832               	movf	??_sprintf,w
  1677  0193  07BC               	addwf	sprintf@c,f
  1678  0194  3005               	movlw	5
  1679  0195  063C               	xorwf	sprintf@c,w
  1680  0196  1D03               	btfss	3,2
  1681  0197  2979               	goto	l1261
  1682  0198                     l1267:	
  1683                           
  1684                           ;doprnt.c: 1422: {
  1685                           ;doprnt.c: 1438: if(flag & 0x03)
  1686  0198  0837               	movf	sprintf@flag,w
  1687  0199  3903               	andlw	3
  1688  019A  1903               	btfsc	3,2
  1689  019B  29A7               	goto	l1273
  1690                           
  1691                           ;doprnt.c: 1439: ((*sp++ = ('-')));
  1692  019C  302D               	movlw	45
  1693  019D  00B2               	movwf	??_sprintf
  1694  019E  083B               	movf	sprintf@sp,w
  1695  019F  0086               	movwf	6
  1696  01A0  0187               	clrf	7
  1697  01A1  0832               	movf	??_sprintf,w
  1698  01A2  0081               	movwf	1
  1699  01A3  3001               	movlw	1
  1700  01A4  00B2               	movwf	??_sprintf
  1701  01A5  0832               	movf	??_sprintf,w
  1702  01A6  07BB               	addwf	sprintf@sp,f
  1703  01A7                     l1273:	
  1704                           
  1705                           ;doprnt.c: 1469: }
  1706                           ;doprnt.c: 1472: prec = c;
  1707  01A7  083C               	movf	sprintf@c,w
  1708  01A8  00B2               	movwf	??_sprintf
  1709  01A9  0832               	movf	??_sprintf,w
  1710  01AA  00B8               	movwf	sprintf@prec
  1711  01AB                     l1281:	
  1712                           ;doprnt.c: 1474: while(prec--) {
  1713                           
  1714  01AB  30FF               	movlw	255
  1715  01AC  00B2               	movwf	??_sprintf
  1716  01AD  0832               	movf	??_sprintf,w
  1717  01AE  07B8               	addwf	sprintf@prec,f
  1718  01AF  0A38               	incf	sprintf@prec,w
  1719  01B0  1903               	btfsc	3,2
  1720  01B1  2923               	goto	l1283
  1721                           
  1722                           ;doprnt.c: 1478: {
  1723                           ;doprnt.c: 1489: c = (val / dpowers[prec]) % 10 + '0';
  1724  01B2  300A               	movlw	10
  1725  01B3  00A8               	movwf	___lwmod@divisor
  1726  01B4  3000               	movlw	0
  1727  01B5  00A9               	movwf	___lwmod@divisor+1
  1728  01B6  0838               	movf	sprintf@prec,w
  1729  01B7  00B2               	movwf	??_sprintf
  1730  01B8  01B3               	clrf	??_sprintf+1
  1731  01B9  35B2               	lslf	??_sprintf,f
  1732  01BA  0DB3               	rlf	??_sprintf+1,f
  1733  01BB  3000               	movlw	low (_dpowers| (0+32768))
  1734  01BC  0732               	addwf	??_sprintf,w
  1735  01BD  0084               	movwf	4
  1736  01BE  3083               	movlw	high (_dpowers| (0+32768))
  1737  01BF  3D33               	addwfc	??_sprintf+1,w
  1738  01C0  0085               	movwf	5
  1739  01C1  3F00               	moviw [0]fsr0
  1740  01C2  00A0               	movwf	___lwdiv@divisor
  1741  01C3  3F01               	moviw [1]fsr0
  1742  01C4  00A1               	movwf	___lwdiv@divisor+1
  1743  01C5  083A               	movf	sprintf@val+1,w
  1744  01C6  00A3               	movwf	___lwdiv@dividend+1
  1745  01C7  0839               	movf	sprintf@val,w
  1746  01C8  00A2               	movwf	___lwdiv@dividend
  1747  01C9  3182  2239  3181   	fcall	___lwdiv
  1748  01CC  0020               	movlb	0	; select bank0
  1749  01CD  0821               	movf	?___lwdiv+1,w
  1750  01CE  00AB               	movwf	___lwmod@dividend+1
  1751  01CF  0820               	movf	?___lwdiv,w
  1752  01D0  00AA               	movwf	___lwmod@dividend
  1753  01D1  3182  226E  3181   	fcall	___lwmod
  1754  01D4  0020               	movlb	0	; select bank0
  1755  01D5  0828               	movf	?___lwmod,w
  1756  01D6  3E30               	addlw	48
  1757  01D7  00B4               	movwf	??_sprintf+2
  1758  01D8  0834               	movf	??_sprintf+2,w
  1759  01D9  00BC               	movwf	sprintf@c
  1760                           
  1761                           ;doprnt.c: 1523: }
  1762                           ;doprnt.c: 1524: ((*sp++ = (c)));
  1763  01DA  083C               	movf	sprintf@c,w
  1764  01DB  00B2               	movwf	??_sprintf
  1765  01DC  083B               	movf	sprintf@sp,w
  1766  01DD  0086               	movwf	6
  1767  01DE  0187               	clrf	7
  1768  01DF  0832               	movf	??_sprintf,w
  1769  01E0  0081               	movwf	1
  1770  01E1  3001               	movlw	1
  1771  01E2  00B2               	movwf	??_sprintf
  1772  01E3  0832               	movf	??_sprintf,w
  1773  01E4  07BB               	addwf	sprintf@sp,f
  1774  01E5  29AB               	goto	l1281
  1775  01E6                     l1285:	
  1776                           ;doprnt.c: 1525: }
  1777                           ;doprnt.c: 1533: }
  1778                           ;doprnt.c: 1535: alldone:
  1779                           
  1780                           
  1781                           ;doprnt.c: 1538: *sp = 0;
  1782  01E6  083B               	movf	sprintf@sp,w
  1783  01E7  0086               	movwf	6
  1784  01E8  0187               	clrf	7
  1785  01E9  0181               	clrf	1
  1786  01EA  0008               	return
  1787  01EB                     __end_of_sprintf:	
  1788                           ;doprnt.c: 1540: return 0;
  1789                           ;	Return value of _sprintf is never used
  1790                           
  1791                           
  1792                           	psect	text4
  1793  026E                     __ptext4:	
  1794 ;; *************** function ___lwmod *****************
  1795 ;; Defined at:
  1796 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\lwmod.c"
  1797 ;; Parameters:    Size  Location     Type
  1798 ;;  divisor         2    8[BANK0 ] unsigned int 
  1799 ;;  dividend        2   10[BANK0 ] unsigned int 
  1800 ;; Auto vars:     Size  Location     Type
  1801 ;;  counter         1   13[BANK0 ] unsigned char 
  1802 ;; Return value:  Size  Location     Type
  1803 ;;                  2    8[BANK0 ] unsigned int 
  1804 ;; Registers used:
  1805 ;;		wreg, status,2, status,0
  1806 ;; Tracked objects:
  1807 ;;		On entry : 0/0
  1808 ;;		On exit  : 0/0
  1809 ;;		Unchanged: 0/0
  1810 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1811 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1812 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1813 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1814 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1815 ;;Total ram usage:        6 bytes
  1816 ;; Hardware stack levels used:    1
  1817 ;; Hardware stack levels required when called:    3
  1818 ;; This function calls:
  1819 ;;		Nothing
  1820 ;; This function is called by:
  1821 ;;		_sprintf
  1822 ;; This function uses a non-reentrant model
  1823 ;;
  1824                           
  1825                           
  1826                           ;psect for function ___lwmod
  1827  026E                     ___lwmod:	
  1828                           
  1829                           ;incstack = 0
  1830                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  1831  026E  0020               	movlb	0	; select bank0
  1832  026F  0828               	movf	___lwmod@divisor,w
  1833  0270  0429               	iorwf	___lwmod@divisor+1,w
  1834  0271  1903               	btfsc	3,2
  1835  0272  2A96               	goto	l1227
  1836  0273  01AD               	clrf	___lwmod@counter
  1837  0274  0AAD               	incf	___lwmod@counter,f
  1838  0275                     l1217:	
  1839  0275  1BA9               	btfsc	___lwmod@divisor+1,7
  1840  0276  2A81               	goto	l1219
  1841  0277  3001               	movlw	1
  1842  0278                     u815:	
  1843  0278  35A8               	lslf	___lwmod@divisor,f
  1844  0279  0DA9               	rlf	___lwmod@divisor+1,f
  1845  027A  0B89               	decfsz	9,f
  1846  027B  2A78               	goto	u815
  1847  027C  3001               	movlw	1
  1848  027D  00AC               	movwf	??___lwmod
  1849  027E  082C               	movf	??___lwmod,w
  1850  027F  07AD               	addwf	___lwmod@counter,f
  1851  0280  2A75               	goto	l1217
  1852  0281                     l1219:	
  1853  0281  0829               	movf	___lwmod@divisor+1,w
  1854  0282  022B               	subwf	___lwmod@dividend+1,w
  1855  0283  1D03               	skipz
  1856  0284  2A87               	goto	u835
  1857  0285  0828               	movf	___lwmod@divisor,w
  1858  0286  022A               	subwf	___lwmod@dividend,w
  1859  0287                     u835:	
  1860  0287  1C03               	skipc
  1861  0288  2A8D               	goto	l1223
  1862  0289  0828               	movf	___lwmod@divisor,w
  1863  028A  02AA               	subwf	___lwmod@dividend,f
  1864  028B  0829               	movf	___lwmod@divisor+1,w
  1865  028C  3BAB               	subwfb	___lwmod@dividend+1,f
  1866  028D                     l1223:	
  1867  028D  3001               	movlw	1
  1868  028E                     u845:	
  1869  028E  36A9               	lsrf	___lwmod@divisor+1,f
  1870  028F  0CA8               	rrf	___lwmod@divisor,f
  1871  0290  0B89               	decfsz	9,f
  1872  0291  2A8E               	goto	u845
  1873  0292  3001               	movlw	1
  1874  0293  02AD               	subwf	___lwmod@counter,f
  1875  0294  1D03               	btfss	3,2
  1876  0295  2A81               	goto	l1219
  1877  0296                     l1227:	
  1878  0296  082B               	movf	___lwmod@dividend+1,w
  1879  0297  00A9               	movwf	?___lwmod+1
  1880  0298  082A               	movf	___lwmod@dividend,w
  1881  0299  00A8               	movwf	?___lwmod
  1882  029A  0008               	return
  1883  029B                     __end_of___lwmod:	
  1884                           
  1885                           	psect	text5
  1886  0239                     __ptext5:	
  1887 ;; *************** function ___lwdiv *****************
  1888 ;; Defined at:
  1889 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\lwdiv.c"
  1890 ;; Parameters:    Size  Location     Type
  1891 ;;  divisor         2    0[BANK0 ] unsigned int 
  1892 ;;  dividend        2    2[BANK0 ] unsigned int 
  1893 ;; Auto vars:     Size  Location     Type
  1894 ;;  quotient        2    5[BANK0 ] unsigned int 
  1895 ;;  counter         1    7[BANK0 ] unsigned char 
  1896 ;; Return value:  Size  Location     Type
  1897 ;;                  2    0[BANK0 ] unsigned int 
  1898 ;; Registers used:
  1899 ;;		wreg, status,2, status,0
  1900 ;; Tracked objects:
  1901 ;;		On entry : 0/0
  1902 ;;		On exit  : 0/0
  1903 ;;		Unchanged: 0/0
  1904 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1905 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1906 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1907 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1908 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1909 ;;Total ram usage:        8 bytes
  1910 ;; Hardware stack levels used:    1
  1911 ;; Hardware stack levels required when called:    3
  1912 ;; This function calls:
  1913 ;;		Nothing
  1914 ;; This function is called by:
  1915 ;;		_sprintf
  1916 ;; This function uses a non-reentrant model
  1917 ;;
  1918                           
  1919                           
  1920                           ;psect for function ___lwdiv
  1921  0239                     ___lwdiv:	
  1922                           
  1923                           ;incstack = 0
  1924                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  1925  0239  0020               	movlb	0	; select bank0
  1926  023A  01A5               	clrf	___lwdiv@quotient
  1927  023B  01A6               	clrf	___lwdiv@quotient+1
  1928  023C  0820               	movf	___lwdiv@divisor,w
  1929  023D  0421               	iorwf	___lwdiv@divisor+1,w
  1930  023E  1903               	btfsc	3,2
  1931  023F  2A69               	goto	l1205
  1932  0240  01A7               	clrf	___lwdiv@counter
  1933  0241  0AA7               	incf	___lwdiv@counter,f
  1934  0242                     l1193:	
  1935  0242  1BA1               	btfsc	___lwdiv@divisor+1,7
  1936  0243  2A4E               	goto	l1195
  1937  0244  3001               	movlw	1
  1938  0245                     u745:	
  1939  0245  35A0               	lslf	___lwdiv@divisor,f
  1940  0246  0DA1               	rlf	___lwdiv@divisor+1,f
  1941  0247  0B89               	decfsz	9,f
  1942  0248  2A45               	goto	u745
  1943  0249  3001               	movlw	1
  1944  024A  00A4               	movwf	??___lwdiv
  1945  024B  0824               	movf	??___lwdiv,w
  1946  024C  07A7               	addwf	___lwdiv@counter,f
  1947  024D  2A42               	goto	l1193
  1948  024E                     l1195:	
  1949  024E  3001               	movlw	1
  1950  024F                     u765:	
  1951  024F  35A5               	lslf	___lwdiv@quotient,f
  1952  0250  0DA6               	rlf	___lwdiv@quotient+1,f
  1953  0251  0B89               	decfsz	9,f
  1954  0252  2A4F               	goto	u765
  1955  0253  0821               	movf	___lwdiv@divisor+1,w
  1956  0254  0223               	subwf	___lwdiv@dividend+1,w
  1957  0255  1D03               	skipz
  1958  0256  2A59               	goto	u775
  1959  0257  0820               	movf	___lwdiv@divisor,w
  1960  0258  0222               	subwf	___lwdiv@dividend,w
  1961  0259                     u775:	
  1962  0259  1C03               	skipc
  1963  025A  2A60               	goto	l1201
  1964  025B  0820               	movf	___lwdiv@divisor,w
  1965  025C  02A2               	subwf	___lwdiv@dividend,f
  1966  025D  0821               	movf	___lwdiv@divisor+1,w
  1967  025E  3BA3               	subwfb	___lwdiv@dividend+1,f
  1968  025F  1425               	bsf	___lwdiv@quotient,0
  1969  0260                     l1201:	
  1970  0260  3001               	movlw	1
  1971  0261                     u785:	
  1972  0261  36A1               	lsrf	___lwdiv@divisor+1,f
  1973  0262  0CA0               	rrf	___lwdiv@divisor,f
  1974  0263  0B89               	decfsz	9,f
  1975  0264  2A61               	goto	u785
  1976  0265  3001               	movlw	1
  1977  0266  02A7               	subwf	___lwdiv@counter,f
  1978  0267  1D03               	btfss	3,2
  1979  0268  2A4E               	goto	l1195
  1980  0269                     l1205:	
  1981  0269  0826               	movf	___lwdiv@quotient+1,w
  1982  026A  00A1               	movwf	?___lwdiv+1
  1983  026B  0825               	movf	___lwdiv@quotient,w
  1984  026C  00A0               	movwf	?___lwdiv
  1985  026D  0008               	return
  1986  026E                     __end_of___lwdiv:	
  1987                           
  1988                           	psect	text6
  1989  031A                     __ptext6:	
  1990 ;; *************** function _slave_reg *****************
  1991 ;; Defined at:
  1992 ;;		line 15 in file "spi.c"
  1993 ;; Parameters:    Size  Location     Type
  1994 ;;		None
  1995 ;; Auto vars:     Size  Location     Type
  1996 ;;		None
  1997 ;; Return value:  Size  Location     Type
  1998 ;;		None               void
  1999 ;; Registers used:
  2000 ;;		wreg, status,2
  2001 ;; Tracked objects:
  2002 ;;		On entry : 0/0
  2003 ;;		On exit  : 0/0
  2004 ;;		Unchanged: 0/0
  2005 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2006 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2007 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2008 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2009 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2010 ;;Total ram usage:        0 bytes
  2011 ;; Hardware stack levels used:    1
  2012 ;; Hardware stack levels required when called:    3
  2013 ;; This function calls:
  2014 ;;		Nothing
  2015 ;; This function is called by:
  2016 ;;		_main
  2017 ;; This function uses a non-reentrant model
  2018 ;;
  2019                           
  2020                           
  2021                           ;psect for function _slave_reg
  2022  031A                     _slave_reg:	
  2023                           
  2024                           ;spi.c: 29: SSP1CON1 = 0b00100100;
  2025                           
  2026                           ;incstack = 0
  2027                           ; Regs used in _slave_reg: [wreg+status,2]
  2028  031A  3024               	movlw	36
  2029  031B  0024               	movlb	4	; select bank4
  2030  031C  0095               	movwf	21	;volatile
  2031                           
  2032                           ;spi.c: 30: SSP1STAT = 0b00000000;
  2033  031D  0194               	clrf	20	;volatile
  2034                           
  2035                           ;spi.c: 33: SSP1IF = 0;
  2036  031E  0020               	movlb	0	; select bank0
  2037  031F  1191               	bcf	17,3	;volatile
  2038                           
  2039                           ;spi.c: 34: SSP1IE = 1;
  2040  0320  0021               	movlb	1	; select bank1
  2041  0321  1591               	bsf	17,3	;volatile
  2042  0322  0008               	return
  2043  0323                     __end_of_slave_reg:	
  2044                           
  2045                           	psect	text7
  2046  02C2                     __ptext7:	
  2047 ;; *************** function ___wmul *****************
  2048 ;; Defined at:
  2049 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\Umul16.c"
  2050 ;; Parameters:    Size  Location     Type
  2051 ;;  multiplier      2    0[BANK0 ] unsigned int 
  2052 ;;  multiplicand    2    2[BANK0 ] unsigned int 
  2053 ;; Auto vars:     Size  Location     Type
  2054 ;;  product         2    4[BANK0 ] unsigned int 
  2055 ;; Return value:  Size  Location     Type
  2056 ;;                  2    0[BANK0 ] unsigned int 
  2057 ;; Registers used:
  2058 ;;		wreg, status,2, status,0
  2059 ;; Tracked objects:
  2060 ;;		On entry : 0/0
  2061 ;;		On exit  : 0/0
  2062 ;;		Unchanged: 0/0
  2063 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2064 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2065 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2066 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2067 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2068 ;;Total ram usage:        6 bytes
  2069 ;; Hardware stack levels used:    1
  2070 ;; Hardware stack levels required when called:    3
  2071 ;; This function calls:
  2072 ;;		Nothing
  2073 ;; This function is called by:
  2074 ;;		_main
  2075 ;; This function uses a non-reentrant model
  2076 ;;
  2077                           
  2078                           
  2079                           ;psect for function ___wmul
  2080  02C2                     ___wmul:	
  2081                           
  2082                           ;incstack = 0
  2083                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  2084  02C2  0020               	movlb	0	; select bank0
  2085  02C3  01A4               	clrf	___wmul@product
  2086  02C4  01A5               	clrf	___wmul@product+1
  2087  02C5                     l1371:	
  2088  02C5  1C20               	btfss	___wmul@multiplier,0
  2089  02C6  2ACB               	goto	l391
  2090  02C7  0822               	movf	___wmul@multiplicand,w
  2091  02C8  07A4               	addwf	___wmul@product,f
  2092  02C9  0823               	movf	___wmul@multiplicand+1,w
  2093  02CA  3DA5               	addwfc	___wmul@product+1,f
  2094  02CB                     l391:	
  2095  02CB  3001               	movlw	1
  2096  02CC                     u1085:	
  2097  02CC  35A2               	lslf	___wmul@multiplicand,f
  2098  02CD  0DA3               	rlf	___wmul@multiplicand+1,f
  2099  02CE  0B89               	decfsz	9,f
  2100  02CF  2ACC               	goto	u1085
  2101  02D0  3001               	movlw	1
  2102  02D1                     u1095:	
  2103  02D1  36A1               	lsrf	___wmul@multiplier+1,f
  2104  02D2  0CA0               	rrf	___wmul@multiplier,f
  2105  02D3  0B89               	decfsz	9,f
  2106  02D4  2AD1               	goto	u1095
  2107  02D5  0820               	movf	___wmul@multiplier,w
  2108  02D6  0421               	iorwf	___wmul@multiplier+1,w
  2109  02D7  1D03               	btfss	3,2
  2110  02D8  2AC5               	goto	l1371
  2111  02D9  0825               	movf	___wmul@product+1,w
  2112  02DA  00A1               	movwf	?___wmul+1
  2113  02DB  0824               	movf	___wmul@product,w
  2114  02DC  00A0               	movwf	?___wmul
  2115  02DD  0008               	return
  2116  02DE                     __end_of___wmul:	
  2117                           
  2118                           	psect	intentry
  2119  0004                     __pintentry:	
  2120 ;; *************** function _inter *****************
  2121 ;; Defined at:
  2122 ;;		line 19 in file "main.c"
  2123 ;; Parameters:    Size  Location     Type
  2124 ;;		None
  2125 ;; Auto vars:     Size  Location     Type
  2126 ;;		None
  2127 ;; Return value:  Size  Location     Type
  2128 ;;		None               void
  2129 ;; Registers used:
  2130 ;;		wreg, status,2, status,0, pclath, cstack
  2131 ;; Tracked objects:
  2132 ;;		On entry : 0/0
  2133 ;;		On exit  : 0/0
  2134 ;;		Unchanged: 0/0
  2135 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2136 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2137 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2138 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2139 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2140 ;;Total ram usage:        3 bytes
  2141 ;; Hardware stack levels used:    1
  2142 ;; Hardware stack levels required when called:    2
  2143 ;; This function calls:
  2144 ;;		_slaveread
  2145 ;; This function is called by:
  2146 ;;		Interrupt level 1
  2147 ;; This function uses a non-reentrant model
  2148 ;;
  2149                           
  2150  0004                     _inter:	
  2151                           
  2152                           ;incstack = 0
  2153                           ; Regs used in _inter: [wreg+status,2+status,0+pclath+cstack]
  2154  0004  3180               	pagesel	$
  2155  0005  0020               	movlb	0	; select bank0
  2156  0006  087F               	movf	127,w
  2157  0007  00F7               	movwf	??_inter+2
  2158                           
  2159                           ;main.c: 21: if(IOCAFbits.IOCAF4 == 1){
  2160  0008  0027               	movlb	7	; select bank7
  2161  0009  1E13               	btfss	19,4	;volatile
  2162  000A  2818               	goto	i1l1393
  2163                           
  2164                           ;main.c: 22: if(RA5 == 1){
  2165  000B  0020               	movlb	0	; select bank0
  2166  000C  1E8C               	btfss	12,5	;volatile
  2167  000D  2812               	goto	i1l1389
  2168                           
  2169                           ;main.c: 23: count++;
  2170  000E  3001               	movlw	1
  2171  000F  07D6               	addwf	_count,f
  2172  0010  3000               	movlw	0
  2173  0011  2815               	goto	L1
  2174  0012                     i1l1389:	
  2175                           ;main.c: 24: }else{
  2176                           
  2177                           
  2178                           ;main.c: 25: count--;
  2179  0012  30FF               	movlw	255
  2180  0013  07D6               	addwf	_count,f
  2181  0014  30FF               	movlw	255
  2182  0015                     L1:	
  2183  0015  3DD7               	addwfc	_count+1,f
  2184                           
  2185                           ;main.c: 26: }
  2186                           ;main.c: 27: IOCAFbits.IOCAF4 = 0;
  2187  0016  0027               	movlb	7	; select bank7
  2188  0017  1213               	bcf	19,4	;volatile
  2189  0018                     i1l1393:	
  2190                           
  2191                           ;main.c: 28: }
  2192                           ;main.c: 30: if(T0IF == 1){
  2193  0018  1D0B               	btfss	11,2	;volatile
  2194  0019  2822               	goto	i1l1399
  2195                           
  2196                           ;main.c: 31: TMR0 = 156;
  2197  001A  309C               	movlw	156
  2198  001B  0020               	movlb	0	; select bank0
  2199  001C  0095               	movwf	21	;volatile
  2200                           
  2201                           ;main.c: 32: time++;
  2202  001D  3001               	movlw	1
  2203  001E  07D8               	addwf	_time,f
  2204  001F  3000               	movlw	0
  2205  0020  3DD9               	addwfc	_time+1,f
  2206                           
  2207                           ;main.c: 33: T0IF = 0;
  2208  0021  110B               	bcf	11,2	;volatile
  2209  0022                     i1l1399:	
  2210                           
  2211                           ;main.c: 34: }
  2212                           ;main.c: 36: target = slaveread();
  2213  0022  3182  229B         	fcall	_slaveread
  2214  0024  00F5               	movwf	??_inter
  2215  0025  01F6               	clrf	??_inter+1
  2216  0026  0875               	movf	??_inter,w
  2217  0027  0020               	movlb	0	; select bank0
  2218  0028  00E1               	movwf	_target
  2219  0029  0876               	movf	??_inter+1,w
  2220  002A  00E2               	movwf	_target+1
  2221  002B  0877               	movf	??_inter+2,w
  2222  002C  00FF               	movwf	127
  2223  002D  0009               	retfie
  2224  002E                     __end_of_inter:	
  2225                           
  2226                           	psect	text9
  2227  029B                     __ptext9:	
  2228 ;; *************** function _slaveread *****************
  2229 ;; Defined at:
  2230 ;;		line 43 in file "spi.c"
  2231 ;; Parameters:    Size  Location     Type
  2232 ;;		None
  2233 ;; Auto vars:     Size  Location     Type
  2234 ;;		None
  2235 ;; Return value:  Size  Location     Type
  2236 ;;                  1    wreg      unsigned char 
  2237 ;; Registers used:
  2238 ;;		wreg, status,2, status,0, pclath, cstack
  2239 ;; Tracked objects:
  2240 ;;		On entry : 0/0
  2241 ;;		On exit  : 0/0
  2242 ;;		Unchanged: 0/0
  2243 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2244 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2245 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2246 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2247 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2248 ;;Total ram usage:        1 bytes
  2249 ;; Hardware stack levels used:    1
  2250 ;; Hardware stack levels required when called:    1
  2251 ;; This function calls:
  2252 ;;		___bmul
  2253 ;; This function is called by:
  2254 ;;		_inter
  2255 ;; This function uses a non-reentrant model
  2256 ;;
  2257                           
  2258                           
  2259                           ;psect for function _slaveread
  2260  029B                     _slaveread:	
  2261                           
  2262                           ;spi.c: 46: if((SSP1IF == 1) && (SSP1STATbits.BF != 0)){
  2263                           
  2264                           ;incstack = 0
  2265                           ; Regs used in _slaveread: [wreg+status,2+status,0+pclath+cstack]
  2266  029B  0020               	movlb	0	; select bank0
  2267  029C  1D91               	btfss	17,3	;volatile
  2268  029D  2AC0               	goto	i1l1325
  2269  029E  0024               	movlb	4	; select bank4
  2270  029F  1C14               	btfss	20,0	;volatile
  2271  02A0  2AC0               	goto	i1l1325
  2272                           
  2273                           ;spi.c: 47: SSP1IF = 0;
  2274  02A1  0020               	movlb	0	; select bank0
  2275  02A2  1191               	bcf	17,3	;volatile
  2276                           
  2277                           ;spi.c: 49: if(SSP1BUF & 0x80 == 0x80){
  2278  02A3  0024               	movlb	4	; select bank4
  2279  02A4  1C11               	btfss	17,0	;volatile
  2280  02A5  2AB3               	goto	i1l1319
  2281                           
  2282                           ;spi.c: 50: CCP1CON = 0x4C;
  2283  02A6  304C               	movlw	76
  2284  02A7  0025               	movlb	5	; select bank5
  2285  02A8  0093               	movwf	19	;volatile
  2286                           
  2287                           ;spi.c: 51: return ((SSP1BUF & 0x7F) * 3);
  2288  02A9  3003               	movlw	3
  2289  02AA  00F4               	movwf	??_slaveread
  2290  02AB  0874               	movf	??_slaveread,w
  2291  02AC  00F0               	movwf	___bmul@multiplicand
  2292  02AD  0024               	movlb	4	; select bank4
  2293  02AE  0811               	movf	17,w	;volatile
  2294  02AF  397F               	andlw	127
  2295  02B0  3182  22DE         	fcall	___bmul
  2296  02B2  0008               	return
  2297  02B3                     i1l1319:	
  2298                           ;spi.c: 52: }else{
  2299                           
  2300                           
  2301                           ;spi.c: 53: CCP1CON = 0xCC;
  2302  02B3  30CC               	movlw	204
  2303  02B4  0025               	movlb	5	; select bank5
  2304  02B5  0093               	movwf	19	;volatile
  2305                           
  2306                           ;spi.c: 54: return ((SSP1BUF & 0x7F) * (-3));
  2307  02B6  30FD               	movlw	253
  2308  02B7  00F4               	movwf	??_slaveread
  2309  02B8  0874               	movf	??_slaveread,w
  2310  02B9  00F0               	movwf	___bmul@multiplicand
  2311  02BA  0024               	movlb	4	; select bank4
  2312  02BB  0811               	movf	17,w	;volatile
  2313  02BC  397F               	andlw	127
  2314  02BD  3182  22DE         	fcall	___bmul
  2315  02BF  0008               	return
  2316  02C0                     i1l1325:	
  2317                           
  2318                           ;spi.c: 55: }
  2319                           ;spi.c: 58: }
  2320                           ;spi.c: 60: return 0;
  2321  02C0  3000               	movlw	0
  2322  02C1  0008               	return
  2323  02C2                     __end_of_slaveread:	
  2324                           
  2325                           	psect	text10
  2326  02DE                     __ptext10:	
  2327 ;; *************** function ___bmul *****************
  2328 ;; Defined at:
  2329 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\Umul8.c"
  2330 ;; Parameters:    Size  Location     Type
  2331 ;;  multiplier      1    wreg     unsigned char 
  2332 ;;  multiplicand    1    0[COMMON] unsigned char 
  2333 ;; Auto vars:     Size  Location     Type
  2334 ;;  multiplier      1    3[COMMON] unsigned char 
  2335 ;;  product         1    2[COMMON] unsigned char 
  2336 ;; Return value:  Size  Location     Type
  2337 ;;                  1    wreg      unsigned char 
  2338 ;; Registers used:
  2339 ;;		wreg, status,2, status,0
  2340 ;; Tracked objects:
  2341 ;;		On entry : 0/0
  2342 ;;		On exit  : 0/0
  2343 ;;		Unchanged: 0/0
  2344 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2345 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2346 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2347 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2348 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2349 ;;Total ram usage:        4 bytes
  2350 ;; Hardware stack levels used:    1
  2351 ;; This function calls:
  2352 ;;		Nothing
  2353 ;; This function is called by:
  2354 ;;		_slaveread
  2355 ;; This function uses a non-reentrant model
  2356 ;;
  2357                           
  2358                           
  2359                           ;psect for function ___bmul
  2360  02DE                     ___bmul:	
  2361                           
  2362                           ;incstack = 0
  2363                           ; Regs used in ___bmul: [wreg+status,2+status,0]
  2364                           ;___bmul@multiplier stored from wreg
  2365  02DE  00F3               	movwf	___bmul@multiplier
  2366  02DF  01F2               	clrf	___bmul@product
  2367  02E0                     i1l1293:	
  2368  02E0  1C73               	btfss	___bmul@multiplier,0
  2369  02E1  2AE6               	goto	i1l1297
  2370  02E2  0870               	movf	___bmul@multiplicand,w
  2371  02E3  00F1               	movwf	??___bmul
  2372  02E4  0871               	movf	??___bmul,w
  2373  02E5  07F2               	addwf	___bmul@product,f
  2374  02E6                     i1l1297:	
  2375  02E6  1003               	clrc
  2376  02E7  0DF0               	rlf	___bmul@multiplicand,f
  2377  02E8  1003               	clrc
  2378  02E9  0CF3               	rrf	___bmul@multiplier,f
  2379  02EA  0873               	movf	___bmul@multiplier,w
  2380  02EB  1D03               	btfss	3,2
  2381  02EC  2AE0               	goto	i1l1293
  2382  02ED  0872               	movf	___bmul@product,w
  2383  02EE  0008               	return
  2384  02EF                     __end_of___bmul:	
  2385  007E                     btemp	set	126	;btemp
  2386  007E                     wtemp	set	126
  2387  007E                     wtemp0	set	126
  2388  0080                     wtemp1	set	128
  2389  0082                     wtemp2	set	130
  2390  0084                     wtemp3	set	132
  2391  0086                     wtemp4	set	134
  2392  0088                     wtemp5	set	136
  2393  007F                     wtemp6	set	127
  2394  007E                     ttemp	set	126
  2395  007E                     ttemp0	set	126
  2396  0081                     ttemp1	set	129
  2397  0084                     ttemp2	set	132
  2398  0087                     ttemp3	set	135
  2399  007F                     ttemp4	set	127
  2400  007E                     ltemp	set	126
  2401  007E                     ltemp0	set	126
  2402  0082                     ltemp1	set	130
  2403  0086                     ltemp2	set	134
  2404  0080                     ltemp3	set	128


Data Sizes:
    Strings     3
    Constant    10
    Data        2
    BSS         12
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      8       9
    BANK0            80     54      67
    BANK1            80      0       0
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_1(CODE[3]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 7
		 -> str(BANK0[7]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _inter in COMMON

    _inter->_slaveread
    _slaveread->___bmul

Critical Paths under _main in BANK0

    _main->_sousin
    _sousin->_henkan
    _henkan->_sprintf
    _sprintf->___lwmod
    ___lwmod->___lwdiv

Critical Paths under _inter in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _inter in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _inter in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _inter in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _inter in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _inter in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _inter in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _inter in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _inter in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _inter in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _inter in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _inter in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _inter in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                18    18      0    1934
                                             36 BANK0     18    18      0
                             ___wmul
                          _slave_reg
                             _sousin
 ---------------------------------------------------------------------------------
 (1) _sousin                                               5     3      2    1309
                                             31 BANK0      5     3      2
                             _henkan
 ---------------------------------------------------------------------------------
 (2) _henkan                                               2     0      2    1165
                                             29 BANK0      2     0      2
                            _sprintf
 ---------------------------------------------------------------------------------
 (3) _sprintf                                             23    19      4    1090
                                             14 BANK0     15    11      4
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (4) ___lwmod                                              6     2      4     265
                                              8 BANK0      6     2      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (4) ___lwdiv                                              8     4      4     268
                                              0 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (1) _slave_reg                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) ___wmul                                               6     2      4     304
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _inter                                                3     3      0     198
                                              5 COMMON     3     3      0
                          _slaveread
 ---------------------------------------------------------------------------------
 (6) _slaveread                                            1     1      0     198
                                              4 COMMON     1     1      0
                             ___bmul
 ---------------------------------------------------------------------------------
 (7) ___bmul                                               4     3      1     198
                                              0 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   ___wmul
   _slave_reg
   _sousin
     _henkan
       _sprintf
         ___lwdiv
         ___lwmod
           ___lwdiv (ARG)

 _inter (ROOT)
   _slaveread
     ___bmul

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      8       9       2       64.3%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     36      43       5       83.8%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0      4C      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0      4C      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.34 build -361300703 
Symbol Table                                                                                   Wed Aug 19 17:08:50 2015

         ___bmul@product 0072              __CFG_CP$OFF 0000      ___wmul@multiplicand 0022  
                    l104 0107                      l264 0203                      l274 022D  
                    l269 0222                      l391 02CB                      _GIE 005F  
                    _RA0 0060                      _RA1 0061                      _RA2 0062  
                    _RA3 0063                      _RC0 0070                      _RA4 0064  
                    _RC1 0071                      _RA5 0065                      _RC2 0072  
                    _RC3 0073                      _RB5 006D                      _RC4 0074  
                    _RC5 0075                      _RB7 006F                      _PR2 001B  
           __CFG_CPD$OFF 0000                      u815 0278                      u745 0245  
                    u835 0287                      u765 024F                      u845 028E  
                    u775 0259                      u785 0261                      u895 018E  
                    u995 0201              henkan@sdata 003D                      _str 005A  
           __CFG_BORV$LO 0000                      wreg 0009             __CFG_LVP$OFF 0000  
            main@dev_now 0050                     l1201 0260                     l1205 0269  
                   l1223 028D                     l1217 0275                     l1219 0281  
                   l1227 0296                     l1261 0179                     l1245 015D  
                   l1255 0173                     l1239 0145                     l1193 0242  
                   l1281 01AB                     l1273 01A7                     l1371 02C5  
                   l1195 024E                     l1267 0198                     l1283 0123  
                   l1285 01E6                     l1365 0233                     l1349 0209  
                   l1461 0097                     l1359 0228                     l1479 010C  
                   STR_1 030A                     _T0IE 005D                     _T0IF 005A  
                   u1025 0220                     u1155 00FF                     u1085 02CC  
                   u1095 02D1                     _PEIE 005E                     _TMR0 0015  
                   _TMR2 001A                     _TRMT 0CF1                     _TXIF 008C  
                   _WPUA 020C             __CFG_WRT$OFF 0000                     _main 0046  
                   _time 0058                     fsr0h 0005                     fsr1h 0007  
                   fsr0l 0004                     indf0 0000                     indf1 0001  
                   fsr1l 0006                     btemp 007E                     ltemp 007E  
                   start 002E                     ttemp 007E                     wtemp 007E  
          __CFG_IESO$OFF 0000        ___bmul@multiplier 0073             main@diff_now 0052  
                  ?_main 0070            __CFG_WDTE$OFF 0000                    _T2CON 001C  
                  _IOCAF 0393                    _IOCAP 0391                    _IOCIE 005B  
        __end_of___lwdiv 026E          __end_of___lwmod 029B                    _RCSTA 019D  
                  _SPBRG 019B                    _PORTA 000C                    _PORTB 000D  
                  _PORTC 000E                    _TRISA 008C                    _TRISB 008D  
                  _TRISC 008E                    _TXREG 019A                    _TXSTA 019E  
         __CFG_FCMEN$OFF 0000          __end_of_dpowers 030A                    _count 0056  
                  _inter 0004           __CFG_BOREN$OFF 0000                    ltemp0 007E  
                  ltemp1 0082                    ltemp2 0086                    ltemp3 0080  
                  ttemp0 007E                    ttemp1 0081                    ttemp2 0084  
                  ttemp3 0087                    ttemp4 007F                    status 0003  
                  wtemp0 007E                    wtemp1 0080                    wtemp2 0082  
                  wtemp3 0084                    wtemp4 0086                    wtemp5 0088  
                  wtemp6 007F          __end_of_sprintf 01EB           __CFG_MCLRE$OFF 0000  
        __initialization 0030             __end_of_main 011D            main@dev_befor 004A  
                 ??_main 0044           __CFG_PLLEN$OFF 0000                   ?_inter 0070  
                 _CCPR1H 0292                   _CCPR1L 0291                   _P1CSEL 08F2  
                 _P1DSEL 08F3                   _ANSELA 018C                   _ANSELB 018D  
                 _ANSELC 018E                   i1l1325 02C0                   i1l1319 02B3  
                 i1l1293 02E0                   i1l1297 02E6                   i1l1393 0018  
                 i1l1389 0012                   i1l1399 0022                   _OSCCON 0099  
                 _TMR2ON 00E2                   _SSP1IE 048B                   _SSP1IF 008B  
         __CFG_PWRTE$OFF 0000                   ___bmul 02DE                   ___wmul 02C2  
              ??___lwdiv 0024                ??___lwmod 002C                   _henkan 030D  
                 _r_data 0078                   _target 0061                   main@mv 0054  
                 _sousin 01EB                ??_sprintf 0032  __end_of__initialization 0043  
    ___bmul@multiplicand 0070           __pcstackCOMMON 0070             __pidataBANK0 0323  
          __end_of_inter 002E           main@diff_befor 004C                  ??_inter 0075  
             __pbssBANK0 0056               __pmaintext 0046                  ?___bmul 0070  
                ?___wmul 0020               __pintentry 0004                  ?_henkan 003D  
                _CCP1CON 0293                  _CCPTMRS 029E                  ?_sousin 003F  
     __size_of_slave_reg 0009       __size_of_slaveread 0027                  _SSP1BUF 0211  
                _RXDTSEL 08EF                  _TXCKSEL 08EA          __size_of___bmul 0011  
        __size_of___wmul 001C                  ___lwdiv 0239                  ___lwmod 026E  
        __size_of_henkan 000D          __CFG_STVREN$OFF 0000                  __ptext1 01EB  
                __ptext2 030D                  __ptext3 011D                  __ptext4 026E  
                __ptext5 0239                  __ptext6 031A                  __ptext7 02C2  
                __ptext9 029B          __size_of_sousin 004E                  _dpowers 0300  
              _IOCAFbits 0393                  main@dmv 004E                  _sprintf 011D  
   end_of_initialization 0043        __end_of_slave_reg 0323        __end_of_slaveread 02C2  
           __pstringtext 0300                  sousin@i 0042         __CFG_FOSC$INTOSC 0000  
         __end_of___bmul 02EF           __end_of___wmul 02DE           __end_of_henkan 031A  
         __end_of_sousin 0239      start_initialization 0030                 ??___bmul 0071  
               ??___wmul 0024                 ??_henkan 003F              __pdataBANK0 0061  
               ??_sousin 0041              __pbssCOMMON 0078                ___latbits 0002  
          __pcstackBANK0 0020              sprintf@flag 0037              sprintf@prec 0038  
       ___lwdiv@dividend 0022                 ?___lwdiv 0020                 ?___lwmod 0028  
            sousin@sdata 003F         ___lwdiv@quotient 0025                 ?_sprintf 002E  
         __size_of_inter 002A           ___wmul@product 0024                _slave_reg 031A  
              _slaveread 029B                 _SSP1CON1 0215                 _PSTR1CON 0296  
               _SSP1STAT 0214        ___wmul@multiplier 0020               ?_slave_reg 0070  
             ?_slaveread 0070         __size_of___lwdiv 0035         __size_of___lwmod 002D  
             sprintf@val 0039          ___lwdiv@divisor 0020          ___lwdiv@counter 0027  
               __ptext10 02DE         __size_of_sprintf 00CE            __size_of_main 00D7  
           _SSP1STATbits 0214                 intlevel1 0000                sprintf@ap 0036  
              sprintf@sp 003B         ___lwmod@dividend 002A        __CFG_CLKOUTEN$OFF 0000  
            ??_slave_reg 0020              ??_slaveread 0074               _OPTION_REG 0095  
               sprintf@c 003C                 sprintf@f 002E          ___lwmod@divisor 0028  
        ___lwmod@counter 002D  
