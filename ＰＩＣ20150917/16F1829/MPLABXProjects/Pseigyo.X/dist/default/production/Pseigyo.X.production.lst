

Microchip Technology PIC LITE Macro Assembler V1.34 build -361300703 
                                                                                               Tue Aug 04 15:02:47 2015

Microchip Technology Omniscient Code Generator (Lite mode) build 201502162209
     1                           	processor	16F1829
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataCOMMON,global,class=CODE,delta=2
     5                           	psect	idataBANK0,global,class=CODE,delta=2
     6                           	psect	stringtext,global,reloc=256,class=STRCODE,delta=2
     7                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	cinit,global,class=CODE,merge=1,delta=2
     9                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
    10                           	psect	dataCOMMON,global,class=COMMON,space=1,delta=1
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    13                           	psect	clrtext,global,class=CODE,delta=2
    14                           	psect	inittext,global,class=CODE,delta=2
    15                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    16                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    17                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    18                           	psect	text1,local,class=CODE,merge=1,delta=2
    19                           	psect	text2,local,class=CODE,merge=1,delta=2
    20                           	psect	text3,local,class=CODE,merge=1,delta=2
    21                           	psect	text4,local,class=CODE,merge=1,delta=2
    22                           	psect	text5,local,class=CODE,merge=1,delta=2
    23                           	psect	text6,local,class=CODE,merge=1,delta=2
    24                           	psect	text7,local,class=CODE,merge=1,delta=2
    25                           	psect	text8,local,class=CODE,merge=1,delta=2
    26                           	psect	intentry,global,class=CODE,delta=2
    27                           	psect	text10,local,class=CODE,merge=1,delta=2
    28                           	psect	text11,local,class=CODE,merge=1,delta=2
    29                           	dabs	1,0x7E,2
    30  0000                     	;# 
    31  0001                     	;# 
    32  0002                     	;# 
    33  0003                     	;# 
    34  0004                     	;# 
    35  0005                     	;# 
    36  0006                     	;# 
    37  0007                     	;# 
    38  0008                     	;# 
    39  0009                     	;# 
    40  000A                     	;# 
    41  000B                     	;# 
    42  000C                     	;# 
    43  000D                     	;# 
    44  000E                     	;# 
    45  0011                     	;# 
    46  0012                     	;# 
    47  0013                     	;# 
    48  0014                     	;# 
    49  0015                     	;# 
    50  0016                     	;# 
    51  0016                     	;# 
    52  0017                     	;# 
    53  0018                     	;# 
    54  0019                     	;# 
    55  001A                     	;# 
    56  001B                     	;# 
    57  001C                     	;# 
    58  001E                     	;# 
    59  001F                     	;# 
    60  008C                     	;# 
    61  008D                     	;# 
    62  008E                     	;# 
    63  0091                     	;# 
    64  0092                     	;# 
    65  0093                     	;# 
    66  0094                     	;# 
    67  0095                     	;# 
    68  0096                     	;# 
    69  0097                     	;# 
    70  0098                     	;# 
    71  0099                     	;# 
    72  009A                     	;# 
    73  009B                     	;# 
    74  009B                     	;# 
    75  009C                     	;# 
    76  009D                     	;# 
    77  009E                     	;# 
    78  010C                     	;# 
    79  010D                     	;# 
    80  010E                     	;# 
    81  0111                     	;# 
    82  0112                     	;# 
    83  0113                     	;# 
    84  0114                     	;# 
    85  0115                     	;# 
    86  0116                     	;# 
    87  0117                     	;# 
    88  0118                     	;# 
    89  0119                     	;# 
    90  011A                     	;# 
    91  011B                     	;# 
    92  011D                     	;# 
    93  011E                     	;# 
    94  018C                     	;# 
    95  018D                     	;# 
    96  018E                     	;# 
    97  0191                     	;# 
    98  0191                     	;# 
    99  0192                     	;# 
   100  0193                     	;# 
   101  0193                     	;# 
   102  0193                     	;# 
   103  0194                     	;# 
   104  0195                     	;# 
   105  0196                     	;# 
   106  0199                     	;# 
   107  019A                     	;# 
   108  019B                     	;# 
   109  019B                     	;# 
   110  019C                     	;# 
   111  019D                     	;# 
   112  019E                     	;# 
   113  019F                     	;# 
   114  020C                     	;# 
   115  020D                     	;# 
   116  020E                     	;# 
   117  0211                     	;# 
   118  0211                     	;# 
   119  0212                     	;# 
   120  0212                     	;# 
   121  0213                     	;# 
   122  0213                     	;# 
   123  0214                     	;# 
   124  0214                     	;# 
   125  0215                     	;# 
   126  0215                     	;# 
   127  0215                     	;# 
   128  0216                     	;# 
   129  0216                     	;# 
   130  0217                     	;# 
   131  0217                     	;# 
   132  0219                     	;# 
   133  021A                     	;# 
   134  021B                     	;# 
   135  021C                     	;# 
   136  021D                     	;# 
   137  021E                     	;# 
   138  021F                     	;# 
   139  0291                     	;# 
   140  0291                     	;# 
   141  0292                     	;# 
   142  0293                     	;# 
   143  0294                     	;# 
   144  0295                     	;# 
   145  0295                     	;# 
   146  0296                     	;# 
   147  0298                     	;# 
   148  0298                     	;# 
   149  0299                     	;# 
   150  029A                     	;# 
   151  029B                     	;# 
   152  029C                     	;# 
   153  029D                     	;# 
   154  029E                     	;# 
   155  0311                     	;# 
   156  0311                     	;# 
   157  0312                     	;# 
   158  0313                     	;# 
   159  0318                     	;# 
   160  0318                     	;# 
   161  0319                     	;# 
   162  031A                     	;# 
   163  038C                     	;# 
   164  038D                     	;# 
   165  038E                     	;# 
   166  0391                     	;# 
   167  0392                     	;# 
   168  0393                     	;# 
   169  0394                     	;# 
   170  0395                     	;# 
   171  0396                     	;# 
   172  039A                     	;# 
   173  039C                     	;# 
   174  039D                     	;# 
   175  039E                     	;# 
   176  039F                     	;# 
   177  0415                     	;# 
   178  0416                     	;# 
   179  0417                     	;# 
   180  041C                     	;# 
   181  041D                     	;# 
   182  041E                     	;# 
   183  0FE4                     	;# 
   184  0FE5                     	;# 
   185  0FE6                     	;# 
   186  0FE7                     	;# 
   187  0FE8                     	;# 
   188  0FE9                     	;# 
   189  0FEA                     	;# 
   190  0FEB                     	;# 
   191  0FED                     	;# 
   192  0FEE                     	;# 
   193  0FEF                     	;# 
   194  0000                     	;# 
   195  0001                     	;# 
   196  0002                     	;# 
   197  0003                     	;# 
   198  0004                     	;# 
   199  0005                     	;# 
   200  0006                     	;# 
   201  0007                     	;# 
   202  0008                     	;# 
   203  0009                     	;# 
   204  000A                     	;# 
   205  000B                     	;# 
   206  000C                     	;# 
   207  000D                     	;# 
   208  000E                     	;# 
   209  0011                     	;# 
   210  0012                     	;# 
   211  0013                     	;# 
   212  0014                     	;# 
   213  0015                     	;# 
   214  0016                     	;# 
   215  0016                     	;# 
   216  0017                     	;# 
   217  0018                     	;# 
   218  0019                     	;# 
   219  001A                     	;# 
   220  001B                     	;# 
   221  001C                     	;# 
   222  001E                     	;# 
   223  001F                     	;# 
   224  008C                     	;# 
   225  008D                     	;# 
   226  008E                     	;# 
   227  0091                     	;# 
   228  0092                     	;# 
   229  0093                     	;# 
   230  0094                     	;# 
   231  0095                     	;# 
   232  0096                     	;# 
   233  0097                     	;# 
   234  0098                     	;# 
   235  0099                     	;# 
   236  009A                     	;# 
   237  009B                     	;# 
   238  009B                     	;# 
   239  009C                     	;# 
   240  009D                     	;# 
   241  009E                     	;# 
   242  010C                     	;# 
   243  010D                     	;# 
   244  010E                     	;# 
   245  0111                     	;# 
   246  0112                     	;# 
   247  0113                     	;# 
   248  0114                     	;# 
   249  0115                     	;# 
   250  0116                     	;# 
   251  0117                     	;# 
   252  0118                     	;# 
   253  0119                     	;# 
   254  011A                     	;# 
   255  011B                     	;# 
   256  011D                     	;# 
   257  011E                     	;# 
   258  018C                     	;# 
   259  018D                     	;# 
   260  018E                     	;# 
   261  0191                     	;# 
   262  0191                     	;# 
   263  0192                     	;# 
   264  0193                     	;# 
   265  0193                     	;# 
   266  0193                     	;# 
   267  0194                     	;# 
   268  0195                     	;# 
   269  0196                     	;# 
   270  0199                     	;# 
   271  019A                     	;# 
   272  019B                     	;# 
   273  019B                     	;# 
   274  019C                     	;# 
   275  019D                     	;# 
   276  019E                     	;# 
   277  019F                     	;# 
   278  020C                     	;# 
   279  020D                     	;# 
   280  020E                     	;# 
   281  0211                     	;# 
   282  0211                     	;# 
   283  0212                     	;# 
   284  0212                     	;# 
   285  0213                     	;# 
   286  0213                     	;# 
   287  0214                     	;# 
   288  0214                     	;# 
   289  0215                     	;# 
   290  0215                     	;# 
   291  0215                     	;# 
   292  0216                     	;# 
   293  0216                     	;# 
   294  0217                     	;# 
   295  0217                     	;# 
   296  0219                     	;# 
   297  021A                     	;# 
   298  021B                     	;# 
   299  021C                     	;# 
   300  021D                     	;# 
   301  021E                     	;# 
   302  021F                     	;# 
   303  0291                     	;# 
   304  0291                     	;# 
   305  0292                     	;# 
   306  0293                     	;# 
   307  0294                     	;# 
   308  0295                     	;# 
   309  0295                     	;# 
   310  0296                     	;# 
   311  0298                     	;# 
   312  0298                     	;# 
   313  0299                     	;# 
   314  029A                     	;# 
   315  029B                     	;# 
   316  029C                     	;# 
   317  029D                     	;# 
   318  029E                     	;# 
   319  0311                     	;# 
   320  0311                     	;# 
   321  0312                     	;# 
   322  0313                     	;# 
   323  0318                     	;# 
   324  0318                     	;# 
   325  0319                     	;# 
   326  031A                     	;# 
   327  038C                     	;# 
   328  038D                     	;# 
   329  038E                     	;# 
   330  0391                     	;# 
   331  0392                     	;# 
   332  0393                     	;# 
   333  0394                     	;# 
   334  0395                     	;# 
   335  0396                     	;# 
   336  039A                     	;# 
   337  039C                     	;# 
   338  039D                     	;# 
   339  039E                     	;# 
   340  039F                     	;# 
   341  0415                     	;# 
   342  0416                     	;# 
   343  0417                     	;# 
   344  041C                     	;# 
   345  041D                     	;# 
   346  041E                     	;# 
   347  0FE4                     	;# 
   348  0FE5                     	;# 
   349  0FE6                     	;# 
   350  0FE7                     	;# 
   351  0FE8                     	;# 
   352  0FE9                     	;# 
   353  0FEA                     	;# 
   354  0FEB                     	;# 
   355  0FED                     	;# 
   356  0FEE                     	;# 
   357  0FEF                     	;# 
   358  0000                     	;# 
   359  0001                     	;# 
   360  0002                     	;# 
   361  0003                     	;# 
   362  0004                     	;# 
   363  0005                     	;# 
   364  0006                     	;# 
   365  0007                     	;# 
   366  0008                     	;# 
   367  0009                     	;# 
   368  000A                     	;# 
   369  000B                     	;# 
   370  000C                     	;# 
   371  000D                     	;# 
   372  000E                     	;# 
   373  0011                     	;# 
   374  0012                     	;# 
   375  0013                     	;# 
   376  0014                     	;# 
   377  0015                     	;# 
   378  0016                     	;# 
   379  0016                     	;# 
   380  0017                     	;# 
   381  0018                     	;# 
   382  0019                     	;# 
   383  001A                     	;# 
   384  001B                     	;# 
   385  001C                     	;# 
   386  001E                     	;# 
   387  001F                     	;# 
   388  008C                     	;# 
   389  008D                     	;# 
   390  008E                     	;# 
   391  0091                     	;# 
   392  0092                     	;# 
   393  0093                     	;# 
   394  0094                     	;# 
   395  0095                     	;# 
   396  0096                     	;# 
   397  0097                     	;# 
   398  0098                     	;# 
   399  0099                     	;# 
   400  009A                     	;# 
   401  009B                     	;# 
   402  009B                     	;# 
   403  009C                     	;# 
   404  009D                     	;# 
   405  009E                     	;# 
   406  010C                     	;# 
   407  010D                     	;# 
   408  010E                     	;# 
   409  0111                     	;# 
   410  0112                     	;# 
   411  0113                     	;# 
   412  0114                     	;# 
   413  0115                     	;# 
   414  0116                     	;# 
   415  0117                     	;# 
   416  0118                     	;# 
   417  0119                     	;# 
   418  011A                     	;# 
   419  011B                     	;# 
   420  011D                     	;# 
   421  011E                     	;# 
   422  018C                     	;# 
   423  018D                     	;# 
   424  018E                     	;# 
   425  0191                     	;# 
   426  0191                     	;# 
   427  0192                     	;# 
   428  0193                     	;# 
   429  0193                     	;# 
   430  0193                     	;# 
   431  0194                     	;# 
   432  0195                     	;# 
   433  0196                     	;# 
   434  0199                     	;# 
   435  019A                     	;# 
   436  019B                     	;# 
   437  019B                     	;# 
   438  019C                     	;# 
   439  019D                     	;# 
   440  019E                     	;# 
   441  019F                     	;# 
   442  020C                     	;# 
   443  020D                     	;# 
   444  020E                     	;# 
   445  0211                     	;# 
   446  0211                     	;# 
   447  0212                     	;# 
   448  0212                     	;# 
   449  0213                     	;# 
   450  0213                     	;# 
   451  0214                     	;# 
   452  0214                     	;# 
   453  0215                     	;# 
   454  0215                     	;# 
   455  0215                     	;# 
   456  0216                     	;# 
   457  0216                     	;# 
   458  0217                     	;# 
   459  0217                     	;# 
   460  0219                     	;# 
   461  021A                     	;# 
   462  021B                     	;# 
   463  021C                     	;# 
   464  021D                     	;# 
   465  021E                     	;# 
   466  021F                     	;# 
   467  0291                     	;# 
   468  0291                     	;# 
   469  0292                     	;# 
   470  0293                     	;# 
   471  0294                     	;# 
   472  0295                     	;# 
   473  0295                     	;# 
   474  0296                     	;# 
   475  0298                     	;# 
   476  0298                     	;# 
   477  0299                     	;# 
   478  029A                     	;# 
   479  029B                     	;# 
   480  029C                     	;# 
   481  029D                     	;# 
   482  029E                     	;# 
   483  0311                     	;# 
   484  0311                     	;# 
   485  0312                     	;# 
   486  0313                     	;# 
   487  0318                     	;# 
   488  0318                     	;# 
   489  0319                     	;# 
   490  031A                     	;# 
   491  038C                     	;# 
   492  038D                     	;# 
   493  038E                     	;# 
   494  0391                     	;# 
   495  0392                     	;# 
   496  0393                     	;# 
   497  0394                     	;# 
   498  0395                     	;# 
   499  0396                     	;# 
   500  039A                     	;# 
   501  039C                     	;# 
   502  039D                     	;# 
   503  039E                     	;# 
   504  039F                     	;# 
   505  0415                     	;# 
   506  0416                     	;# 
   507  0417                     	;# 
   508  041C                     	;# 
   509  041D                     	;# 
   510  041E                     	;# 
   511  0FE4                     	;# 
   512  0FE5                     	;# 
   513  0FE6                     	;# 
   514  0FE7                     	;# 
   515  0FE8                     	;# 
   516  0FE9                     	;# 
   517  0FEA                     	;# 
   518  0FEB                     	;# 
   519  0FED                     	;# 
   520  0FEE                     	;# 
   521  0FEF                     	;# 
   522                           
   523                           	psect	idataCOMMON
   524  0435                     __pidataCOMMON:	
   525                           
   526                           ;initializer for _min_rad
   527                           ;main.c: 8: int time = 0;
   528                           ;main.c: 9: int target = (127*3)/2;
   529                           ;main.c: 10: int count = 0;
   530                           ;main.c: 11: int max_ope = 124;
   531                           ;main.c: 12: int p_band = 5;
   532                           ;main.c: 13: int kp;
   533                           ;main.c: 14: int dev;
   534  0435  3452               	retlw	82
   535  0436  3438               	retlw	56
   536  0437  343F               	retlw	63
   537                           
   538                           	psect	idataBANK0
   539  0423                     __pidataBANK0:	
   540                           
   541                           ;initializer for _max_ope
   542  0423  347C               	retlw	124
   543  0424  3400               	retlw	0
   544                           
   545                           ;initializer for _p_band
   546  0425  3405               	retlw	5
   547  0426  3400               	retlw	0
   548                           
   549                           ;initializer for _target
   550  0427  34BE               	retlw	190
   551  0428  3400               	retlw	0
   552                           
   553                           	psect	stringtext
   554  0400                     __pstringtext:	
   555  0400                     _dpowers:	
   556  0400  3401               	retlw	1
   557  0401  3400               	retlw	0
   558  0402  340A               	retlw	10
   559  0403  3400               	retlw	0
   560  0404  3464               	retlw	100
   561  0405  3400               	retlw	0
   562  0406  34E8               	retlw	232
   563  0407  3403               	retlw	3
   564  0408  3410               	retlw	16
   565  0409  3427               	retlw	39
   566  040A                     __end_of_dpowers:	
   567  040A                     STR_1:	
   568  040A  3425               	retlw	37	;'%'
   569  040B  3464               	retlw	100	;'d'
   570  040C  3400               	retlw	0
   571                           
   572                           ; #config settings
   573  0000                     
   574                           	psect	nvBANK0
   575  0059                     __pnvBANK0:	
   576  0059                     _kp:	
   577  0059                     	ds	2
   578  000C                     _PORTA	set	12
   579  000D                     _PORTB	set	13
   580  000E                     _PORTC	set	14
   581  001B                     _PR2	set	27
   582  001C                     _T2CON	set	28
   583  0015                     _TMR0	set	21
   584  001A                     _TMR2	set	26
   585  005F                     _GIE	set	95
   586  005B                     _IOCIE	set	91
   587  005E                     _PEIE	set	94
   588  0060                     _RA0	set	96
   589  0061                     _RA1	set	97
   590  0062                     _RA2	set	98
   591  0063                     _RA3	set	99
   592  0064                     _RA4	set	100
   593  0065                     _RA5	set	101
   594  006D                     _RB5	set	109
   595  006F                     _RB7	set	111
   596  0070                     _RC0	set	112
   597  0071                     _RC1	set	113
   598  0072                     _RC2	set	114
   599  0073                     _RC3	set	115
   600  0074                     _RC4	set	116
   601  0075                     _RC5	set	117
   602  008B                     _SSP1IF	set	139
   603  005D                     _T0IE	set	93
   604  005A                     _T0IF	set	90
   605  00E2                     _TMR2ON	set	226
   606  008C                     _TXIF	set	140
   607  0095                     _OPTION_REG	set	149
   608  0099                     _OSCCON	set	153
   609  008C                     _TRISA	set	140
   610  008D                     _TRISB	set	141
   611  008E                     _TRISC	set	142
   612  048B                     _SSP1IE	set	1163
   613  08F2                     _P1CSEL	set	2290
   614  08F3                     _P1DSEL	set	2291
   615  08EF                     _RXDTSEL	set	2287
   616  08EA                     _TXCKSEL	set	2282
   617  019B                     _SPBRG	set	411
   618  018C                     _ANSELA	set	396
   619  018D                     _ANSELB	set	397
   620  018E                     _ANSELC	set	398
   621  019D                     _RCSTA	set	413
   622  019A                     _TXREG	set	410
   623  019E                     _TXSTA	set	414
   624  0CF1                     _TRMT	set	3313
   625  0215                     _SSP1CON1	set	533
   626  0214                     _SSP1STAT	set	532
   627  0214                     _SSP1STATbits	set	532
   628  020C                     _WPUA	set	524
   629  0211                     _SSP1BUF	set	529
   630  0293                     _CCP1CON	set	659
   631  0292                     _CCPR1H	set	658
   632  0291                     _CCPR1L	set	657
   633  029E                     _CCPTMRS	set	670
   634  0296                     _PSTR1CON	set	662
   635  0393                     _IOCAF	set	915
   636  0393                     _IOCAFbits	set	915
   637  0391                     _IOCAP	set	913
   638                           
   639                           	psect	cinit
   640  0030                     start_initialization:	
   641  0030                     __initialization:	
   642                           
   643                           ; Clear objects allocated to COMMON
   644  0030  01FB               	clrf	__pbssCOMMON& (0+127)
   645                           
   646                           ; Clear objects allocated to BANK0
   647  0031  3046               	movlw	low __pbssBANK0
   648  0032  0084               	movwf	4
   649  0033  3000               	movlw	high __pbssBANK0
   650  0034  0085               	movwf	5
   651  0035  300D               	movlw	13
   652  0036  3184  2429  3180   	fcall	clear_ram0
   653                           
   654                           ; Initialize objects allocated to COMMON
   655  0039  3035               	movlw	low __pidataCOMMON
   656  003A  0084               	movwf	4
   657  003B  3084               	movlw	(high __pidataCOMMON)| (0+128)
   658  003C  0085               	movwf	5
   659  003D  3078               	movlw	low __pdataCOMMON
   660  003E  0086               	movwf	6
   661  003F  3000               	movlw	high __pdataCOMMON
   662  0040  0087               	movwf	7
   663  0041  3003               	movlw	3
   664  0042  3184  242F  3180   	fcall	init_ram
   665                           
   666                           ; Initialize objects allocated to BANK0
   667  0045  3023               	movlw	low __pidataBANK0
   668  0046  0084               	movwf	4
   669  0047  3084               	movlw	(high __pidataBANK0)| (0+128)
   670  0048  0085               	movwf	5
   671  0049  3053               	movlw	low __pdataBANK0
   672  004A  0086               	movwf	6
   673  004B  3000               	movlw	high __pdataBANK0
   674  004C  0087               	movwf	7
   675  004D  3006               	movlw	6
   676  004E  3184  242F         	fcall	init_ram
   677  0050                     end_of_initialization:	
   678                           ;End of C runtime variable initialization code
   679                           
   680  0050                     __end_of__initialization:	
   681  0050  0020               	movlb	0
   682  0051  3181  2921         	ljmp	_main	;jump to C main() function
   683                           
   684                           	psect	bssCOMMON
   685  007B                     __pbssCOMMON:	
   686  007B                     _r_data:	
   687  007B                     	ds	1
   688                           
   689                           	psect	dataCOMMON
   690  0078                     __pdataCOMMON:	
   691  0078                     _min_rad:	
   692  0078                     	ds	3
   693                           
   694                           	psect	bssBANK0
   695  0046                     __pbssBANK0:	
   696  0046                     _count:	
   697  0046                     	ds	2
   698  0048                     _dev:	
   699  0048                     	ds	2
   700  004A                     _time:	
   701  004A                     	ds	2
   702  004C                     _str:	
   703  004C                     	ds	7
   704                           
   705                           	psect	dataBANK0
   706  0053                     __pdataBANK0:	
   707  0053                     _max_ope:	
   708  0053                     	ds	2
   709  0055                     _p_band:	
   710  0055                     	ds	2
   711  0057                     _target:	
   712  0057                     	ds	2
   713                           
   714                           	psect	clrtext
   715  0429                     clear_ram0:	
   716                           ;	Called with FSR0 containing the base address, and
   717                           ;	WREG with the size to clear
   718                           
   719  0429  0064               	clrwdt	;clear the watchdog before getting into this loop
   720  042A                     clrloop0:	
   721  042A  0180               	clrf	0	;clear RAM location pointed to by FSR
   722  042B  3101               	addfsr 0,1
   723  042C  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
   724  042D  2C2A               	goto	clrloop0	;have we reached the end yet?
   725  042E  3400               	retlw	0	;all done for this memory range, return
   726                           
   727                           	psect	inittext
   728  042F                     init_ram:	
   729  042F  00FE               	movwf	126
   730  0430                     initloop:	
   731  0430  0012               	moviw fsr0++
   732  0431  001E               	movwi fsr1++
   733  0432  0BFE               	decfsz	126,f
   734  0433  2C30               	goto	initloop
   735  0434  3400               	retlw	0
   736                           
   737                           	psect	cstackCOMMON
   738  0070                     __pcstackCOMMON:	
   739  0070                     ?_slave_reg:	
   740  0070                     ?_inter:	
   741                           ; 0 bytes @ 0x0
   742                           
   743  0070                     ?_main:	
   744                           ; 0 bytes @ 0x0
   745                           
   746  0070                     ?_slaveread:	
   747                           ; 0 bytes @ 0x0
   748                           
   749  0070                     ?i1___bmul:	
   750                           ; 1 bytes @ 0x0
   751                           
   752  0070                     i1___bmul@multiplicand:	
   753                           ; 1 bytes @ 0x0
   754                           
   755                           
   756                           ; 1 bytes @ 0x0
   757  0070                     	ds	1
   758  0071                     ??i1___bmul:	
   759                           
   760                           ; 0 bytes @ 0x1
   761  0071                     	ds	1
   762  0072                     i1___bmul@product:	
   763                           
   764                           ; 1 bytes @ 0x2
   765  0072                     	ds	1
   766  0073                     i1___bmul@multiplier:	
   767                           
   768                           ; 1 bytes @ 0x3
   769  0073                     	ds	1
   770  0074                     ??_slaveread:	
   771                           
   772                           ; 0 bytes @ 0x4
   773  0074                     	ds	1
   774  0075                     ??_inter:	
   775                           
   776                           ; 0 bytes @ 0x5
   777  0075                     	ds	3
   778                           
   779                           	psect	cstackBANK0
   780  0020                     __pcstackBANK0:	
   781  0020                     ??_slave_reg:	
   782  0020                     ?___bmul:	
   783                           ; 0 bytes @ 0x0
   784                           
   785  0020                     ?___awdiv:	
   786                           ; 1 bytes @ 0x0
   787                           
   788  0020                     ?___lwdiv:	
   789                           ; 2 bytes @ 0x0
   790                           
   791  0020                     ___bmul@multiplicand:	
   792                           ; 2 bytes @ 0x0
   793                           
   794  0020                     ___awdiv@divisor:	
   795                           ; 1 bytes @ 0x0
   796                           
   797  0020                     ___lwdiv@divisor:	
   798                           ; 2 bytes @ 0x0
   799                           
   800                           
   801                           ; 2 bytes @ 0x0
   802  0020                     	ds	1
   803  0021                     ??___bmul:	
   804                           
   805                           ; 0 bytes @ 0x1
   806  0021                     	ds	1
   807  0022                     ___bmul@product:	
   808  0022                     ___awdiv@dividend:	
   809                           ; 1 bytes @ 0x2
   810                           
   811  0022                     ___lwdiv@dividend:	
   812                           ; 2 bytes @ 0x2
   813                           
   814                           
   815                           ; 2 bytes @ 0x2
   816  0022                     	ds	1
   817  0023                     ___bmul@multiplier:	
   818                           
   819                           ; 1 bytes @ 0x3
   820  0023                     	ds	1
   821  0024                     ??___awdiv:	
   822  0024                     ??___lwdiv:	
   823                           ; 0 bytes @ 0x4
   824                           
   825                           
   826                           ; 0 bytes @ 0x4
   827  0024                     	ds	1
   828  0025                     ___awdiv@counter:	
   829  0025                     ___lwdiv@quotient:	
   830                           ; 1 bytes @ 0x5
   831                           
   832                           
   833                           ; 2 bytes @ 0x5
   834  0025                     	ds	1
   835  0026                     ___awdiv@sign:	
   836                           
   837                           ; 1 bytes @ 0x6
   838  0026                     	ds	1
   839  0027                     ___lwdiv@counter:	
   840  0027                     ___awdiv@quotient:	
   841                           ; 1 bytes @ 0x7
   842                           
   843                           
   844                           ; 2 bytes @ 0x7
   845  0027                     	ds	1
   846  0028                     ?___lwmod:	
   847  0028                     ___lwmod@divisor:	
   848                           ; 2 bytes @ 0x8
   849                           
   850                           
   851                           ; 2 bytes @ 0x8
   852  0028                     	ds	2
   853  002A                     ___lwmod@dividend:	
   854                           
   855                           ; 2 bytes @ 0xA
   856  002A                     	ds	2
   857  002C                     ??___lwmod:	
   858                           
   859                           ; 0 bytes @ 0xC
   860  002C                     	ds	1
   861  002D                     ___lwmod@counter:	
   862                           
   863                           ; 1 bytes @ 0xD
   864  002D                     	ds	1
   865  002E                     ?_sprintf:	
   866  002E                     sprintf@f:	
   867                           ; 2 bytes @ 0xE
   868                           
   869                           
   870                           ; 2 bytes @ 0xE
   871  002E                     	ds	4
   872  0032                     ??_sprintf:	
   873                           
   874                           ; 0 bytes @ 0x12
   875  0032                     	ds	4
   876  0036                     sprintf@ap:	
   877                           
   878                           ; 1 bytes @ 0x16
   879  0036                     	ds	1
   880  0037                     sprintf@flag:	
   881                           
   882                           ; 1 bytes @ 0x17
   883  0037                     	ds	1
   884  0038                     sprintf@prec:	
   885                           
   886                           ; 1 bytes @ 0x18
   887  0038                     	ds	1
   888  0039                     sprintf@val:	
   889                           
   890                           ; 2 bytes @ 0x19
   891  0039                     	ds	2
   892  003B                     sprintf@sp:	
   893                           
   894                           ; 1 bytes @ 0x1B
   895  003B                     	ds	1
   896  003C                     sprintf@c:	
   897                           
   898                           ; 1 bytes @ 0x1C
   899  003C                     	ds	1
   900  003D                     ?_henkan:	
   901  003D                     henkan@sdata:	
   902                           ; 0 bytes @ 0x1D
   903                           
   904                           
   905                           ; 2 bytes @ 0x1D
   906  003D                     	ds	2
   907  003F                     ?_sousin:	
   908  003F                     ??_henkan:	
   909                           ; 0 bytes @ 0x1F
   910                           
   911  003F                     sousin@sdata:	
   912                           ; 0 bytes @ 0x1F
   913                           
   914                           
   915                           ; 2 bytes @ 0x1F
   916  003F                     	ds	2
   917  0041                     ??_sousin:	
   918                           
   919                           ; 0 bytes @ 0x21
   920  0041                     	ds	1
   921  0042                     sousin@i:	
   922                           
   923                           ; 2 bytes @ 0x22
   924  0042                     	ds	2
   925  0044                     ??_main:	
   926                           
   927                           ; 0 bytes @ 0x24
   928  0044                     	ds	2
   929                           
   930                           	psect	maintext
   931  0121                     __pmaintext:	
   932 ;;
   933 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   934 ;;
   935 ;; *************** function _main *****************
   936 ;; Defined at:
   937 ;;		line 39 in file "main.c"
   938 ;; Parameters:    Size  Location     Type
   939 ;;		None
   940 ;; Auto vars:     Size  Location     Type
   941 ;;		None
   942 ;; Return value:  Size  Location     Type
   943 ;;		None               void
   944 ;; Registers used:
   945 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
   946 ;; Tracked objects:
   947 ;;		On entry : B1F/0
   948 ;;		On exit  : 0/0
   949 ;;		Unchanged: 0/0
   950 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
   951 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   952 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   953 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
   954 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
   955 ;;Total ram usage:        2 bytes
   956 ;; Hardware stack levels required when called:    7
   957 ;; This function calls:
   958 ;;		___awdiv
   959 ;;		___bmul
   960 ;;		_slave_reg
   961 ;;		_sousin
   962 ;; This function is called by:
   963 ;;		Startup code after reset
   964 ;; This function uses a non-reentrant model
   965 ;;
   966                           
   967                           
   968                           ;psect for function _main
   969  0121                     _main:	
   970                           
   971                           ;main.c: 41: kp = max_ope / p_band;
   972                           
   973                           ;incstack = 0
   974                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
   975  0121  0020               	movlb	0	; select bank0
   976  0122  0856               	movf	_p_band+1,w
   977  0123  00A1               	movwf	___awdiv@divisor+1
   978  0124  0855               	movf	_p_band,w
   979  0125  00A0               	movwf	___awdiv@divisor
   980  0126  0854               	movf	_max_ope+1,w
   981  0127  00A3               	movwf	___awdiv@dividend+1
   982  0128  0853               	movf	_max_ope,w
   983  0129  00A2               	movwf	___awdiv@dividend
   984  012A  3181  21C2  3181   	fcall	___awdiv
   985  012D  0020               	movlb	0	; select bank0
   986  012E  0821               	movf	?___awdiv+1,w
   987  012F  00DA               	movwf	_kp+1
   988  0130  0820               	movf	?___awdiv,w
   989  0131  00D9               	movwf	_kp
   990                           
   991                           ;main.c: 43: OSCCON = 0x72;
   992  0132  3072               	movlw	114
   993  0133  0021               	movlb	1	; select bank1
   994  0134  0099               	movwf	25	;volatile
   995                           
   996                           ;main.c: 44: TRISA = 0x30;
   997  0135  3030               	movlw	48
   998  0136  008C               	movwf	12	;volatile
   999                           
  1000                           ;main.c: 45: TRISB = 0x70;
  1001  0137  3070               	movlw	112
  1002  0138  008D               	movwf	13	;volatile
  1003                           
  1004                           ;main.c: 46: TRISC = 0x40;
  1005  0139  3040               	movlw	64
  1006  013A  008E               	movwf	14	;volatile
  1007                           
  1008                           ;main.c: 47: PORTA = 0x00;
  1009  013B  0020               	movlb	0	; select bank0
  1010  013C  018C               	clrf	12	;volatile
  1011                           
  1012                           ;main.c: 48: PORTB = 0x00;
  1013  013D  018D               	clrf	13	;volatile
  1014                           
  1015                           ;main.c: 49: PORTC = 0x00;
  1016  013E  018E               	clrf	14	;volatile
  1017                           
  1018                           ;main.c: 50: ANSELA = 0x00;
  1019  013F  0023               	movlb	3	; select bank3
  1020  0140  018C               	clrf	12	;volatile
  1021                           
  1022                           ;main.c: 51: ANSELB = 0x00;
  1023  0141  018D               	clrf	13	;volatile
  1024                           
  1025                           ;main.c: 52: ANSELC = 0x00;
  1026  0142  018E               	clrf	14	;volatile
  1027                           
  1028                           ;main.c: 53: WPUA = 0x30;
  1029  0143  3030               	movlw	48
  1030  0144  0024               	movlb	4	; select bank4
  1031  0145  008C               	movwf	12	;volatile
  1032                           
  1033                           ;main.c: 56: CCPTMRS = 0x00;
  1034  0146  0025               	movlb	5	; select bank5
  1035  0147  019E               	clrf	30	;volatile
  1036                           
  1037                           ;main.c: 57: CCP1CON = 0xCC;
  1038  0148  30CC               	movlw	204
  1039  0149  0093               	movwf	19	;volatile
  1040                           
  1041                           ;main.c: 58: PSTR1CON = 0x0A;
  1042  014A  300A               	movlw	10
  1043  014B  0096               	movwf	22	;volatile
  1044                           
  1045                           ;main.c: 59: CCPR1L = 0;
  1046  014C  0191               	clrf	17	;volatile
  1047                           
  1048                           ;main.c: 60: P1CSEL = 0;
  1049  014D  0022               	movlb	2	; select bank2
  1050  014E  111E               	bcf	30,2	;volatile
  1051                           
  1052                           ;main.c: 61: P1DSEL = 0;
  1053  014F  119E               	bcf	30,3	;volatile
  1054                           
  1055                           ;main.c: 62: T2CON = 0x00;
  1056  0150  0020               	movlb	0	; select bank0
  1057  0151  019C               	clrf	28	;volatile
  1058                           
  1059                           ;main.c: 63: PR2 = max_ope;
  1060  0152  0853               	movf	_max_ope,w
  1061  0153  009B               	movwf	27	;volatile
  1062                           
  1063                           ;main.c: 64: CCPR1L = 0;
  1064  0154  0025               	movlb	5	; select bank5
  1065  0155  0191               	clrf	17	;volatile
  1066                           
  1067                           ;main.c: 65: CCPR1H = 0;
  1068  0156  0192               	clrf	18	;volatile
  1069                           
  1070                           ;main.c: 66: TMR2 = 0;
  1071  0157  0020               	movlb	0	; select bank0
  1072  0158  019A               	clrf	26	;volatile
  1073                           
  1074                           ;main.c: 67: TMR2ON = 1;
  1075  0159  151C               	bsf	28,2	;volatile
  1076                           
  1077                           ;main.c: 70: RXDTSEL = 0;
  1078  015A  0022               	movlb	2	; select bank2
  1079  015B  139D               	bcf	29,7	;volatile
  1080                           
  1081                           ;main.c: 71: TXCKSEL = 0;
  1082  015C  111D               	bcf	29,2	;volatile
  1083                           
  1084                           ;main.c: 72: TXSTA = 0b00100100;
  1085  015D  3024               	movlw	36
  1086  015E  0023               	movlb	3	; select bank3
  1087  015F  009E               	movwf	30	;volatile
  1088                           
  1089                           ;main.c: 73: RCSTA = 0b10010000;
  1090  0160  3090               	movlw	144
  1091  0161  009D               	movwf	29	;volatile
  1092                           
  1093                           ;main.c: 74: SPBRG = 51;
  1094  0162  3000               	movlw	0
  1095  0163  009C               	movwf	28	;volatile
  1096  0164  3033               	movlw	51
  1097  0165  009B               	movwf	27	;volatile
  1098                           
  1099                           ;main.c: 77: slave_reg();
  1100  0166  3184  241A  3181   	fcall	_slave_reg
  1101                           
  1102                           ;main.c: 80: OPTION_REG = 0x01;
  1103  0169  3001               	movlw	1
  1104  016A  0021               	movlb	1	; select bank1
  1105  016B  0095               	movwf	21	;volatile
  1106                           
  1107                           ;main.c: 82: TMR0 = 156;
  1108  016C  309C               	movlw	156
  1109  016D  0020               	movlb	0	; select bank0
  1110  016E  0095               	movwf	21	;volatile
  1111                           
  1112                           ;main.c: 83: T0IF = 0;
  1113  016F  110B               	bcf	11,2	;volatile
  1114                           
  1115                           ;main.c: 84: T0IE = 1;
  1116  0170  168B               	bsf	11,5	;volatile
  1117                           
  1118                           ;main.c: 86: IOCAP = 0x10;
  1119  0171  3010               	movlw	16
  1120  0172  0027               	movlb	7	; select bank7
  1121  0173  0091               	movwf	17	;volatile
  1122                           
  1123                           ;main.c: 87: IOCAF = 0;
  1124  0174  0193               	clrf	19	;volatile
  1125                           
  1126                           ;main.c: 88: IOCIE = 1;
  1127  0175  158B               	bsf	11,3	;volatile
  1128                           
  1129                           ;main.c: 90: PEIE = 1;
  1130  0176  170B               	bsf	11,6	;volatile
  1131                           
  1132                           ;main.c: 91: GIE = 1;
  1133  0177  178B               	bsf	11,7	;volatile
  1134  0178                     l1572:	
  1135                           ;main.c: 95: while(1){
  1136                           
  1137                           
  1138                           ;main.c: 97: if(time == 500){
  1139  0178  30F4               	movlw	244
  1140  0179  0020               	movlb	0	; select bank0
  1141  017A  064A               	xorwf	_time,w
  1142  017B  1D03               	skipz
  1143  017C  29A2               	goto	l1582
  1144  017D  034B               	decf	_time+1,w
  1145  017E  1D03               	btfss	3,2
  1146  017F  29A2               	goto	l1582
  1147                           
  1148                           ;main.c: 98: dev = target-count;
  1149  0180  0946               	comf	_count,w
  1150  0181  00C4               	movwf	??_main
  1151  0182  0947               	comf	_count+1,w
  1152  0183  00C5               	movwf	??_main+1
  1153  0184  0AC4               	incf	??_main,f
  1154  0185  1903               	skipnz
  1155  0186  0AC5               	incf	??_main+1,f
  1156  0187  0857               	movf	_target,w
  1157  0188  0744               	addwf	??_main,w
  1158  0189  00C8               	movwf	_dev
  1159  018A  0858               	movf	_target+1,w
  1160  018B  3D45               	addwfc	??_main+1,w
  1161  018C  00C9               	movwf	_dev+1
  1162                           
  1163                           ;main.c: 99: sousin(target-count);
  1164  018D  0946               	comf	_count,w
  1165  018E  00C4               	movwf	??_main
  1166  018F  0947               	comf	_count+1,w
  1167  0190  00C5               	movwf	??_main+1
  1168  0191  0AC4               	incf	??_main,f
  1169  0192  1903               	skipnz
  1170  0193  0AC5               	incf	??_main+1,f
  1171  0194  0857               	movf	_target,w
  1172  0195  0744               	addwf	??_main,w
  1173  0196  00BF               	movwf	sousin@sdata
  1174  0197  0858               	movf	_target+1,w
  1175  0198  3D45               	addwfc	??_main+1,w
  1176  0199  00C0               	movwf	sousin@sdata+1
  1177  019A  3182  2214  3181   	fcall	_sousin
  1178                           
  1179                           ;main.c: 100: time = 0;
  1180  019D  0020               	movlb	0	; select bank0
  1181  019E  01CA               	clrf	_time
  1182  019F  01CB               	clrf	_time+1
  1183                           
  1184                           ;main.c: 101: count = 0;
  1185  01A0  01C6               	clrf	_count
  1186  01A1  01C7               	clrf	_count+1
  1187  01A2                     l1582:	
  1188                           
  1189                           ;main.c: 102: }
  1190                           ;main.c: 105: if(dev >= p_band){
  1191  01A2  0849               	movf	_dev+1,w
  1192  01A3  3A80               	xorlw	128
  1193  01A4  00C4               	movwf	??_main
  1194  01A5  0856               	movf	_p_band+1,w
  1195  01A6  3A80               	xorlw	128
  1196  01A7  0244               	subwf	??_main,w
  1197  01A8  1D03               	skipz
  1198  01A9  29AC               	goto	u1315
  1199  01AA  0855               	movf	_p_band,w
  1200  01AB  0248               	subwf	_dev,w
  1201  01AC                     u1315:	
  1202  01AC  1C03               	skipc
  1203  01AD  29B1               	goto	l114
  1204                           
  1205                           ;main.c: 106: CCPR1L = max_ope;
  1206  01AE  0020               	movlb	0	; select bank0
  1207  01AF  0853               	movf	_max_ope,w
  1208  01B0  29BC               	goto	L1
  1209  01B1                     l114:	
  1210                           ;main.c: 107: }else if(dev >= 0){
  1211                           
  1212  01B1  0020               	movlb	0	; select bank0
  1213  01B2  1BC9               	btfsc	_dev+1,7
  1214  01B3  29BF               	goto	l1588
  1215                           
  1216                           ;main.c: 108: CCPR1L = kp * dev;
  1217  01B4  0848               	movf	_dev,w
  1218  01B5  00C4               	movwf	??_main
  1219  01B6  0844               	movf	??_main,w
  1220  01B7  00A0               	movwf	___bmul@multiplicand
  1221  01B8  0859               	movf	_kp,w
  1222  01B9  3182  22E0  3181   	fcall	___bmul
  1223  01BC                     L1:	
  1224  01BC  0025               	movlb	5	; select bank5
  1225  01BD  0091               	movwf	17	;volatile
  1226                           
  1227                           ;main.c: 109: }else{
  1228  01BE  2978               	goto	l1572
  1229  01BF                     l1588:	
  1230                           
  1231                           ;main.c: 110: CCPR1L = 0;
  1232  01BF  0025               	movlb	5	; select bank5
  1233  01C0  0191               	clrf	17	;volatile
  1234  01C1  2978               	goto	l1572
  1235  01C2                     __end_of_main:	
  1236                           
  1237                           	psect	text1
  1238  0214                     __ptext1:	
  1239 ;; *************** function _sousin *****************
  1240 ;; Defined at:
  1241 ;;		line 13 in file "usart.c"
  1242 ;; Parameters:    Size  Location     Type
  1243 ;;  sdata           2   31[BANK0 ] int 
  1244 ;; Auto vars:     Size  Location     Type
  1245 ;;  i               2   34[BANK0 ] int 
  1246 ;; Return value:  Size  Location     Type
  1247 ;;		None               void
  1248 ;; Registers used:
  1249 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1250 ;; Tracked objects:
  1251 ;;		On entry : 0/0
  1252 ;;		On exit  : 0/0
  1253 ;;		Unchanged: 0/0
  1254 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1255 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1256 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1257 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1258 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1259 ;;Total ram usage:        5 bytes
  1260 ;; Hardware stack levels used:    1
  1261 ;; Hardware stack levels required when called:    6
  1262 ;; This function calls:
  1263 ;;		_henkan
  1264 ;; This function is called by:
  1265 ;;		_main
  1266 ;; This function uses a non-reentrant model
  1267 ;;
  1268                           
  1269                           
  1270                           ;psect for function _sousin
  1271  0214                     _sousin:	
  1272                           
  1273                           ;usart.c: 15: int i = 0;
  1274                           
  1275                           ;incstack = 0
  1276                           ; Regs used in _sousin: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1277  0214  0020               	movlb	0	; select bank0
  1278  0215  01C2               	clrf	sousin@i
  1279  0216  01C3               	clrf	sousin@i+1
  1280                           
  1281                           ;usart.c: 17: henkan(sdata);
  1282  0217  0840               	movf	sousin@sdata+1,w
  1283  0218  00BE               	movwf	henkan@sdata+1
  1284  0219  083F               	movf	sousin@sdata,w
  1285  021A  00BD               	movwf	henkan@sdata
  1286  021B  3184  240D  3182   	fcall	_henkan
  1287                           
  1288                           ;usart.c: 19: for(i=0;i<7;i++){
  1289  021E  0020               	movlb	0	; select bank0
  1290  021F  01C2               	clrf	sousin@i
  1291  0220  01C3               	clrf	sousin@i+1
  1292  0221  0843               	movf	sousin@i+1,w
  1293  0222  3A80               	xorlw	128
  1294  0223  00C1               	movwf	??_sousin
  1295  0224  3080               	movlw	128
  1296  0225  0241               	subwf	??_sousin,w
  1297  0226  1D03               	skipz
  1298  0227  2A2A               	goto	u1075
  1299  0228  3007               	movlw	7
  1300  0229  0242               	subwf	sousin@i,w
  1301  022A                     u1075:	
  1302  022A  1803               	btfsc	3,0
  1303  022B  2A4B               	goto	l280
  1304  022C                     l275:	
  1305                           ;usart.c: 20: while(TXIF==0 && TRMT==0);
  1306                           
  1307  022C  0020               	movlb	0	; select bank0
  1308  022D  1A11               	btfsc	17,4	;volatile
  1309  022E  2A32               	goto	l1400
  1310  022F  0023               	movlb	3	; select bank3
  1311  0230  1C9E               	btfss	30,1	;volatile
  1312  0231  2A2C               	goto	l275
  1313  0232                     l1400:	
  1314                           
  1315                           ;usart.c: 21: TXREG = str[i];
  1316  0232  0020               	movlb	0	; select bank0
  1317  0233  0842               	movf	sousin@i,w
  1318  0234  3E4C               	addlw	(low (_str| 0))& (0+255)
  1319  0235  0086               	movwf	6
  1320  0236  0187               	clrf	7
  1321  0237  0801               	movf	1,w
  1322  0238  0023               	movlb	3	; select bank3
  1323  0239  009A               	movwf	26	;volatile
  1324                           
  1325                           ;usart.c: 22: TXIF = 0;
  1326  023A  0020               	movlb	0	; select bank0
  1327  023B  1211               	bcf	17,4	;volatile
  1328  023C  3001               	movlw	1
  1329  023D  07C2               	addwf	sousin@i,f
  1330  023E  3000               	movlw	0
  1331  023F  3DC3               	addwfc	sousin@i+1,f
  1332  0240  0843               	movf	sousin@i+1,w
  1333  0241  3A80               	xorlw	128
  1334  0242  00C1               	movwf	??_sousin
  1335  0243  3080               	movlw	128
  1336  0244  0241               	subwf	??_sousin,w
  1337  0245  1D03               	skipz
  1338  0246  2A49               	goto	u1105
  1339  0247  3007               	movlw	7
  1340  0248  0242               	subwf	sousin@i,w
  1341  0249                     u1105:	
  1342  0249  1C03               	skipc
  1343  024A  2A2C               	goto	l275
  1344  024B                     l280:	
  1345                           ;usart.c: 23: }
  1346                           ;usart.c: 24: while(TXIF==0 && TRMT==0);
  1347                           
  1348  024B  0020               	movlb	0	; select bank0
  1349  024C  1A11               	btfsc	17,4	;volatile
  1350  024D  2A51               	goto	l1410
  1351  024E  0023               	movlb	3	; select bank3
  1352  024F  1C9E               	btfss	30,1	;volatile
  1353  0250  2A4B               	goto	l280
  1354  0251                     l1410:	
  1355                           
  1356                           ;usart.c: 25: TXREG = '\n';
  1357  0251  300A               	movlw	10
  1358  0252  0023               	movlb	3	; select bank3
  1359  0253  009A               	movwf	26	;volatile
  1360                           
  1361                           ;usart.c: 26: TXIF = 0;
  1362  0254  0020               	movlb	0	; select bank0
  1363  0255  1211               	bcf	17,4	;volatile
  1364  0256                     l285:	
  1365                           ;usart.c: 27: while(TXIF==0 && TRMT==0);
  1366                           
  1367  0256  0020               	movlb	0	; select bank0
  1368  0257  1A11               	btfsc	17,4	;volatile
  1369  0258  2A5C               	goto	l1416
  1370  0259  0023               	movlb	3	; select bank3
  1371  025A  1C9E               	btfss	30,1	;volatile
  1372  025B  2A56               	goto	l285
  1373  025C                     l1416:	
  1374                           
  1375                           ;usart.c: 28: TXREG = '\r';
  1376  025C  300D               	movlw	13
  1377  025D  0023               	movlb	3	; select bank3
  1378  025E  009A               	movwf	26	;volatile
  1379                           
  1380                           ;usart.c: 29: TXIF = 0;
  1381  025F  0020               	movlb	0	; select bank0
  1382  0260  1211               	bcf	17,4	;volatile
  1383  0261  0008               	return
  1384  0262                     __end_of_sousin:	
  1385                           
  1386                           	psect	text2
  1387  040D                     __ptext2:	
  1388 ;; *************** function _henkan *****************
  1389 ;; Defined at:
  1390 ;;		line 6 in file "usart.c"
  1391 ;; Parameters:    Size  Location     Type
  1392 ;;  sdata           2   29[BANK0 ] int 
  1393 ;; Auto vars:     Size  Location     Type
  1394 ;;		None
  1395 ;; Return value:  Size  Location     Type
  1396 ;;		None               void
  1397 ;; Registers used:
  1398 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1399 ;; Tracked objects:
  1400 ;;		On entry : 0/0
  1401 ;;		On exit  : 0/0
  1402 ;;		Unchanged: 0/0
  1403 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1404 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1405 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1406 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1407 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1408 ;;Total ram usage:        2 bytes
  1409 ;; Hardware stack levels used:    1
  1410 ;; Hardware stack levels required when called:    5
  1411 ;; This function calls:
  1412 ;;		_sprintf
  1413 ;; This function is called by:
  1414 ;;		_sousin
  1415 ;; This function uses a non-reentrant model
  1416 ;;
  1417                           
  1418                           
  1419                           ;psect for function _henkan
  1420  040D                     _henkan:	
  1421                           
  1422                           ;usart.c: 8: sprintf(str,"%d",sdata);
  1423                           
  1424                           ;incstack = 0
  1425                           ; Regs used in _henkan: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1426  040D  300A               	movlw	low (STR_1| (0+32768))
  1427  040E  0020               	movlb	0	; select bank0
  1428  040F  00AE               	movwf	sprintf@f
  1429  0410  3084               	movlw	high (STR_1| (0+32768))
  1430  0411  00AF               	movwf	sprintf@f+1
  1431  0412  083E               	movf	henkan@sdata+1,w
  1432  0413  00B1               	movwf	?_sprintf+3
  1433  0414  083D               	movf	henkan@sdata,w
  1434  0415  00B0               	movwf	?_sprintf+2
  1435  0416  304C               	movlw	(low (_str| 0))& (0+255)
  1436  0417  3180  2053         	fcall	_sprintf
  1437  0419  0008               	return
  1438  041A                     __end_of_henkan:	
  1439                           
  1440                           	psect	text3
  1441  0053                     __ptext3:	
  1442 ;; *************** function _sprintf *****************
  1443 ;; Defined at:
  1444 ;;		line 492 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\doprnt.c"
  1445 ;; Parameters:    Size  Location     Type
  1446 ;;  sp              1    wreg     PTR unsigned char 
  1447 ;;		 -> str(7), 
  1448 ;;  f               2   14[BANK0 ] PTR const unsigned char 
  1449 ;;		 -> STR_1(3), 
  1450 ;; Auto vars:     Size  Location     Type
  1451 ;;  sp              1   27[BANK0 ] PTR unsigned char 
  1452 ;;		 -> str(7), 
  1453 ;;  tmpval          4    0        struct .
  1454 ;;  val             2   25[BANK0 ] unsigned int 
  1455 ;;  cp              2    0        PTR const unsigned char 
  1456 ;;  len             2    0        unsigned int 
  1457 ;;  c               1   28[BANK0 ] char 
  1458 ;;  prec            1   24[BANK0 ] char 
  1459 ;;  flag            1   23[BANK0 ] unsigned char 
  1460 ;;  ap              1   22[BANK0 ] PTR void [1]
  1461 ;;		 -> ?_sprintf(2), 
  1462 ;; Return value:  Size  Location     Type
  1463 ;;                  2   14[BANK0 ] int 
  1464 ;; Registers used:
  1465 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1466 ;; Tracked objects:
  1467 ;;		On entry : 0/0
  1468 ;;		On exit  : 0/0
  1469 ;;		Unchanged: 0/0
  1470 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1471 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1472 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1473 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1474 ;;      Totals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1475 ;;Total ram usage:       15 bytes
  1476 ;; Hardware stack levels used:    1
  1477 ;; Hardware stack levels required when called:    4
  1478 ;; This function calls:
  1479 ;;		___lwdiv
  1480 ;;		___lwmod
  1481 ;; This function is called by:
  1482 ;;		_henkan
  1483 ;; This function uses a non-reentrant model
  1484 ;;
  1485                           
  1486                           
  1487                           ;psect for function _sprintf
  1488  0053                     _sprintf:	
  1489                           
  1490                           ;incstack = 0
  1491                           ; Regs used in _sprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1492                           ;sprintf@sp stored from wreg
  1493  0053  0020               	movlb	0	; select bank0
  1494  0054  00BB               	movwf	sprintf@sp
  1495                           
  1496                           ;doprnt.c: 494: va_list ap;
  1497                           ;doprnt.c: 499: signed char c;
  1498                           ;doprnt.c: 506: signed char prec;
  1499                           ;doprnt.c: 508: unsigned char flag;
  1500                           ;doprnt.c: 523: union {
  1501                           ;doprnt.c: 524: unsigned long vd;
  1502                           ;doprnt.c: 525: double integ;
  1503                           ;doprnt.c: 526: } tmpval;
  1504                           ;doprnt.c: 528: unsigned int val;
  1505                           ;doprnt.c: 529: unsigned len;
  1506                           ;doprnt.c: 530: const char * cp;
  1507                           ;doprnt.c: 533: *ap = __va_start();
  1508  0055  3030               	movlw	(low ((?_sprintf| 0+2)))& (0+255)
  1509  0056  00B2               	movwf	??_sprintf
  1510  0057  0832               	movf	??_sprintf,w
  1511  0058  00B6               	movwf	sprintf@ap
  1512  0059                     l1340:	
  1513                           ;doprnt.c: 536: while(c = *f++) {
  1514                           
  1515  0059  082F               	movf	sprintf@f+1,w
  1516  005A  00B3               	movwf	??_sprintf+1
  1517  005B  082E               	movf	sprintf@f,w
  1518  005C  00B2               	movwf	??_sprintf
  1519  005D  0AAE               	incf	sprintf@f,f
  1520  005E  1903               	skipnz
  1521  005F  0AAF               	incf	sprintf@f+1,f
  1522  0060  0832               	movf	??_sprintf,w
  1523  0061  0084               	movwf	4
  1524  0062  0833               	movf	??_sprintf+1,w
  1525  0063  0085               	movwf	5
  1526  0064  0800               	movf	0,w	;code access
  1527  0065  00B4               	movwf	??_sprintf+2
  1528  0066  0834               	movf	??_sprintf+2,w
  1529  0067  00BC               	movwf	sprintf@c
  1530  0068  083C               	movf	sprintf@c,w
  1531  0069  1903               	btfsc	3,2
  1532  006A  291C               	goto	l1342
  1533                           
  1534                           ;doprnt.c: 538: if(c != '%')
  1535  006B  3025               	movlw	37
  1536  006C  063C               	xorwf	sprintf@c,w
  1537  006D  1903               	btfsc	3,2
  1538  006E  287B               	goto	l1296
  1539                           
  1540                           ;doprnt.c: 540: {
  1541                           ;doprnt.c: 541: ((*sp++ = (c)));
  1542  006F  083C               	movf	sprintf@c,w
  1543  0070  00B2               	movwf	??_sprintf
  1544  0071  083B               	movf	sprintf@sp,w
  1545  0072  0086               	movwf	6
  1546  0073  0187               	clrf	7
  1547  0074  0832               	movf	??_sprintf,w
  1548  0075  0081               	movwf	1
  1549  0076  3001               	movlw	1
  1550  0077  00B2               	movwf	??_sprintf
  1551  0078  0832               	movf	??_sprintf,w
  1552  0079  07BB               	addwf	sprintf@sp,f
  1553                           
  1554                           ;doprnt.c: 542: continue;
  1555  007A  2859               	goto	l1340
  1556  007B                     l1296:	
  1557                           
  1558                           ;doprnt.c: 543: }
  1559                           ;doprnt.c: 548: flag = 0;
  1560  007B  01B7               	clrf	sprintf@flag
  1561                           
  1562                           ;doprnt.c: 822: }
  1563                           
  1564                           ;doprnt.c: 813: continue;
  1565                           
  1566                           ;doprnt.c: 802: default:
  1567                           
  1568                           ;doprnt.c: 698: case 'i':
  1569                           ;doprnt.c: 699: break;
  1570                           
  1571                           ;doprnt.c: 697: case 'd':
  1572                           
  1573                           ;doprnt.c: 638: goto alldone;
  1574                           
  1575                           ;doprnt.c: 637: case 0:
  1576                           
  1577                           ;doprnt.c: 635: switch(c = *f++) {
  1578  007C  082F               	movf	sprintf@f+1,w
  1579  007D  00B3               	movwf	??_sprintf+1
  1580  007E  082E               	movf	sprintf@f,w
  1581  007F  00B2               	movwf	??_sprintf
  1582  0080  0AAE               	incf	sprintf@f,f
  1583  0081  1903               	skipnz
  1584  0082  0AAF               	incf	sprintf@f+1,f
  1585  0083  0832               	movf	??_sprintf,w
  1586  0084  0084               	movwf	4
  1587  0085  0833               	movf	??_sprintf+1,w
  1588  0086  0085               	movwf	5
  1589  0087  0800               	movf	0,w	;code access
  1590  0088  00BC               	movwf	sprintf@c
  1591                           
  1592                           ; Switch size 1, requested type "space"
  1593                           ; Number of cases is 3, Range of values is 0 to 105
  1594                           ; switch strategies available:
  1595                           ; Name         Instructions Cycles
  1596                           ; simple_byte           10     6 (average)
  1597                           ; direct_byte          218     6 (fixed)
  1598                           ; jumptable            260     6 (fixed)
  1599                           ;	Chosen strategy is simple_byte
  1600  0089  3A00               	xorlw	0	; case 0
  1601  008A  1903               	skipnz
  1602  008B  291C               	goto	l1342
  1603  008C  3A64               	xorlw	100	; case 100
  1604  008D  1903               	skipnz
  1605  008E  2893               	goto	l1302
  1606  008F  3A0D               	xorlw	13	; case 105
  1607  0090  1903               	skipnz
  1608  0091  2893               	goto	l1302
  1609  0092  2859               	goto	l1340
  1610  0093                     l1302:	
  1611                           
  1612                           ;doprnt.c: 1253: {
  1613                           ;doprnt.c: 1259: val = (int)(*(int *)__va_arg((*(int **)ap), (int)0));
  1614  0093  0836               	movf	sprintf@ap,w
  1615  0094  0086               	movwf	6
  1616  0095  0187               	clrf	7
  1617  0096  3F40               	moviw [0]fsr1
  1618  0097  00B9               	movwf	sprintf@val
  1619  0098  3F41               	moviw [1]fsr1
  1620  0099  00BA               	movwf	sprintf@val+1
  1621  009A  3002               	movlw	2
  1622  009B  00B2               	movwf	??_sprintf
  1623  009C  0832               	movf	??_sprintf,w
  1624  009D  07B6               	addwf	sprintf@ap,f
  1625                           
  1626                           ;doprnt.c: 1261: if((int)val < 0) {
  1627  009E  1FBA               	btfss	sprintf@val+1,7
  1628  009F  28A9               	goto	l1312
  1629                           
  1630                           ;doprnt.c: 1262: flag |= 0x03;
  1631  00A0  3003               	movlw	3
  1632  00A1  00B2               	movwf	??_sprintf
  1633  00A2  0832               	movf	??_sprintf,w
  1634  00A3  04B7               	iorwf	sprintf@flag,f
  1635                           
  1636                           ;doprnt.c: 1263: val = -val;
  1637  00A4  09B9               	comf	sprintf@val,f
  1638  00A5  09BA               	comf	sprintf@val+1,f
  1639  00A6  0AB9               	incf	sprintf@val,f
  1640  00A7  1903               	skipnz
  1641  00A8  0ABA               	incf	sprintf@val+1,f
  1642  00A9                     l1312:	
  1643                           
  1644                           ;doprnt.c: 1264: }
  1645                           ;doprnt.c: 1266: }
  1646                           ;doprnt.c: 1305: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  1647  00A9  01BC               	clrf	sprintf@c
  1648  00AA  0ABC               	incf	sprintf@c,f
  1649  00AB  3005               	movlw	5
  1650  00AC  063C               	xorwf	sprintf@c,w
  1651  00AD  1903               	btfsc	3,2
  1652  00AE  28CE               	goto	l1324
  1653  00AF                     l1318:	
  1654                           
  1655                           ;doprnt.c: 1306: if(val < dpowers[c])
  1656  00AF  083C               	movf	sprintf@c,w
  1657  00B0  00B2               	movwf	??_sprintf
  1658  00B1  01B3               	clrf	??_sprintf+1
  1659  00B2  35B2               	lslf	??_sprintf,f
  1660  00B3  0DB3               	rlf	??_sprintf+1,f
  1661  00B4  3000               	movlw	low (_dpowers| (0+32768))
  1662  00B5  0732               	addwf	??_sprintf,w
  1663  00B6  0084               	movwf	4
  1664  00B7  3084               	movlw	high (_dpowers| (0+32768))
  1665  00B8  3D33               	addwfc	??_sprintf+1,w
  1666  00B9  0085               	movwf	5
  1667  00BA  3F00               	moviw [0]fsr0
  1668  00BB  00B4               	movwf	??_sprintf+2
  1669  00BC  3F01               	moviw [1]fsr0
  1670  00BD  00B5               	movwf	??_sprintf+3
  1671  00BE  0835               	movf	??_sprintf+3,w
  1672  00BF  023A               	subwf	sprintf@val+1,w
  1673  00C0  1D03               	skipz
  1674  00C1  28C4               	goto	u975
  1675  00C2  0834               	movf	??_sprintf+2,w
  1676  00C3  0239               	subwf	sprintf@val,w
  1677  00C4                     u975:	
  1678  00C4  1C03               	btfss	3,0
  1679  00C5  28CE               	goto	l1324
  1680                           
  1681                           ;doprnt.c: 1307: break;
  1682  00C6  3001               	movlw	1
  1683  00C7  00B2               	movwf	??_sprintf
  1684  00C8  0832               	movf	??_sprintf,w
  1685  00C9  07BC               	addwf	sprintf@c,f
  1686  00CA  3005               	movlw	5
  1687  00CB  063C               	xorwf	sprintf@c,w
  1688  00CC  1D03               	btfss	3,2
  1689  00CD  28AF               	goto	l1318
  1690  00CE                     l1324:	
  1691                           
  1692                           ;doprnt.c: 1422: {
  1693                           ;doprnt.c: 1438: if(flag & 0x03)
  1694  00CE  0837               	movf	sprintf@flag,w
  1695  00CF  3903               	andlw	3
  1696  00D0  1903               	btfsc	3,2
  1697  00D1  28DD               	goto	l1330
  1698                           
  1699                           ;doprnt.c: 1439: ((*sp++ = ('-')));
  1700  00D2  302D               	movlw	45
  1701  00D3  00B2               	movwf	??_sprintf
  1702  00D4  083B               	movf	sprintf@sp,w
  1703  00D5  0086               	movwf	6
  1704  00D6  0187               	clrf	7
  1705  00D7  0832               	movf	??_sprintf,w
  1706  00D8  0081               	movwf	1
  1707  00D9  3001               	movlw	1
  1708  00DA  00B2               	movwf	??_sprintf
  1709  00DB  0832               	movf	??_sprintf,w
  1710  00DC  07BB               	addwf	sprintf@sp,f
  1711  00DD                     l1330:	
  1712                           
  1713                           ;doprnt.c: 1469: }
  1714                           ;doprnt.c: 1472: prec = c;
  1715  00DD  083C               	movf	sprintf@c,w
  1716  00DE  00B2               	movwf	??_sprintf
  1717  00DF  0832               	movf	??_sprintf,w
  1718  00E0  00B8               	movwf	sprintf@prec
  1719  00E1                     l1338:	
  1720                           ;doprnt.c: 1474: while(prec--) {
  1721                           
  1722  00E1  30FF               	movlw	255
  1723  00E2  00B2               	movwf	??_sprintf
  1724  00E3  0832               	movf	??_sprintf,w
  1725  00E4  07B8               	addwf	sprintf@prec,f
  1726  00E5  0A38               	incf	sprintf@prec,w
  1727  00E6  1903               	btfsc	3,2
  1728  00E7  2859               	goto	l1340
  1729                           
  1730                           ;doprnt.c: 1478: {
  1731                           ;doprnt.c: 1489: c = (val / dpowers[prec]) % 10 + '0';
  1732  00E8  300A               	movlw	10
  1733  00E9  00A8               	movwf	___lwmod@divisor
  1734  00EA  3000               	movlw	0
  1735  00EB  00A9               	movwf	___lwmod@divisor+1
  1736  00EC  0838               	movf	sprintf@prec,w
  1737  00ED  00B2               	movwf	??_sprintf
  1738  00EE  01B3               	clrf	??_sprintf+1
  1739  00EF  35B2               	lslf	??_sprintf,f
  1740  00F0  0DB3               	rlf	??_sprintf+1,f
  1741  00F1  3000               	movlw	low (_dpowers| (0+32768))
  1742  00F2  0732               	addwf	??_sprintf,w
  1743  00F3  0084               	movwf	4
  1744  00F4  3084               	movlw	high (_dpowers| (0+32768))
  1745  00F5  3D33               	addwfc	??_sprintf+1,w
  1746  00F6  0085               	movwf	5
  1747  00F7  3F00               	moviw [0]fsr0
  1748  00F8  00A0               	movwf	___lwdiv@divisor
  1749  00F9  3F01               	moviw [1]fsr0
  1750  00FA  00A1               	movwf	___lwdiv@divisor+1
  1751  00FB  083A               	movf	sprintf@val+1,w
  1752  00FC  00A3               	movwf	___lwdiv@dividend+1
  1753  00FD  0839               	movf	sprintf@val,w
  1754  00FE  00A2               	movwf	___lwdiv@dividend
  1755  00FF  3182  2262  3180   	fcall	___lwdiv
  1756  0102  0020               	movlb	0	; select bank0
  1757  0103  0821               	movf	?___lwdiv+1,w
  1758  0104  00AB               	movwf	___lwmod@dividend+1
  1759  0105  0820               	movf	?___lwdiv,w
  1760  0106  00AA               	movwf	___lwmod@dividend
  1761  0107  3182  2297  3180   	fcall	___lwmod
  1762  010A  0020               	movlb	0	; select bank0
  1763  010B  0828               	movf	?___lwmod,w
  1764  010C  3E30               	addlw	48
  1765  010D  00B4               	movwf	??_sprintf+2
  1766  010E  0834               	movf	??_sprintf+2,w
  1767  010F  00BC               	movwf	sprintf@c
  1768                           
  1769                           ;doprnt.c: 1523: }
  1770                           ;doprnt.c: 1524: ((*sp++ = (c)));
  1771  0110  083C               	movf	sprintf@c,w
  1772  0111  00B2               	movwf	??_sprintf
  1773  0112  083B               	movf	sprintf@sp,w
  1774  0113  0086               	movwf	6
  1775  0114  0187               	clrf	7
  1776  0115  0832               	movf	??_sprintf,w
  1777  0116  0081               	movwf	1
  1778  0117  3001               	movlw	1
  1779  0118  00B2               	movwf	??_sprintf
  1780  0119  0832               	movf	??_sprintf,w
  1781  011A  07BB               	addwf	sprintf@sp,f
  1782  011B  28E1               	goto	l1338
  1783  011C                     l1342:	
  1784                           ;doprnt.c: 1525: }
  1785                           ;doprnt.c: 1533: }
  1786                           ;doprnt.c: 1535: alldone:
  1787                           
  1788                           
  1789                           ;doprnt.c: 1538: *sp = 0;
  1790  011C  083B               	movf	sprintf@sp,w
  1791  011D  0086               	movwf	6
  1792  011E  0187               	clrf	7
  1793  011F  0181               	clrf	1
  1794  0120  0008               	return
  1795  0121                     __end_of_sprintf:	
  1796                           ;doprnt.c: 1540: return 0;
  1797                           ;	Return value of _sprintf is never used
  1798                           
  1799                           
  1800                           	psect	text4
  1801  0297                     __ptext4:	
  1802 ;; *************** function ___lwmod *****************
  1803 ;; Defined at:
  1804 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\lwmod.c"
  1805 ;; Parameters:    Size  Location     Type
  1806 ;;  divisor         2    8[BANK0 ] unsigned int 
  1807 ;;  dividend        2   10[BANK0 ] unsigned int 
  1808 ;; Auto vars:     Size  Location     Type
  1809 ;;  counter         1   13[BANK0 ] unsigned char 
  1810 ;; Return value:  Size  Location     Type
  1811 ;;                  2    8[BANK0 ] unsigned int 
  1812 ;; Registers used:
  1813 ;;		wreg, status,2, status,0
  1814 ;; Tracked objects:
  1815 ;;		On entry : 0/0
  1816 ;;		On exit  : 0/0
  1817 ;;		Unchanged: 0/0
  1818 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1819 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1820 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1821 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1822 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1823 ;;Total ram usage:        6 bytes
  1824 ;; Hardware stack levels used:    1
  1825 ;; Hardware stack levels required when called:    3
  1826 ;; This function calls:
  1827 ;;		Nothing
  1828 ;; This function is called by:
  1829 ;;		_sprintf
  1830 ;; This function uses a non-reentrant model
  1831 ;;
  1832                           
  1833                           
  1834                           ;psect for function ___lwmod
  1835  0297                     ___lwmod:	
  1836                           
  1837                           ;incstack = 0
  1838                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  1839  0297  0020               	movlb	0	; select bank0
  1840  0298  0828               	movf	___lwmod@divisor,w
  1841  0299  0429               	iorwf	___lwmod@divisor+1,w
  1842  029A  1903               	btfsc	3,2
  1843  029B  2ABF               	goto	l1284
  1844  029C  01AD               	clrf	___lwmod@counter
  1845  029D  0AAD               	incf	___lwmod@counter,f
  1846  029E                     l1274:	
  1847  029E  1BA9               	btfsc	___lwmod@divisor+1,7
  1848  029F  2AAA               	goto	l1276
  1849  02A0  3001               	movlw	1
  1850  02A1                     u895:	
  1851  02A1  35A8               	lslf	___lwmod@divisor,f
  1852  02A2  0DA9               	rlf	___lwmod@divisor+1,f
  1853  02A3  0B89               	decfsz	9,f
  1854  02A4  2AA1               	goto	u895
  1855  02A5  3001               	movlw	1
  1856  02A6  00AC               	movwf	??___lwmod
  1857  02A7  082C               	movf	??___lwmod,w
  1858  02A8  07AD               	addwf	___lwmod@counter,f
  1859  02A9  2A9E               	goto	l1274
  1860  02AA                     l1276:	
  1861  02AA  0829               	movf	___lwmod@divisor+1,w
  1862  02AB  022B               	subwf	___lwmod@dividend+1,w
  1863  02AC  1D03               	skipz
  1864  02AD  2AB0               	goto	u915
  1865  02AE  0828               	movf	___lwmod@divisor,w
  1866  02AF  022A               	subwf	___lwmod@dividend,w
  1867  02B0                     u915:	
  1868  02B0  1C03               	skipc
  1869  02B1  2AB6               	goto	l1280
  1870  02B2  0828               	movf	___lwmod@divisor,w
  1871  02B3  02AA               	subwf	___lwmod@dividend,f
  1872  02B4  0829               	movf	___lwmod@divisor+1,w
  1873  02B5  3BAB               	subwfb	___lwmod@dividend+1,f
  1874  02B6                     l1280:	
  1875  02B6  3001               	movlw	1
  1876  02B7                     u925:	
  1877  02B7  36A9               	lsrf	___lwmod@divisor+1,f
  1878  02B8  0CA8               	rrf	___lwmod@divisor,f
  1879  02B9  0B89               	decfsz	9,f
  1880  02BA  2AB7               	goto	u925
  1881  02BB  3001               	movlw	1
  1882  02BC  02AD               	subwf	___lwmod@counter,f
  1883  02BD  1D03               	btfss	3,2
  1884  02BE  2AAA               	goto	l1276
  1885  02BF                     l1284:	
  1886  02BF  082B               	movf	___lwmod@dividend+1,w
  1887  02C0  00A9               	movwf	?___lwmod+1
  1888  02C1  082A               	movf	___lwmod@dividend,w
  1889  02C2  00A8               	movwf	?___lwmod
  1890  02C3  0008               	return
  1891  02C4                     __end_of___lwmod:	
  1892                           
  1893                           	psect	text5
  1894  0262                     __ptext5:	
  1895 ;; *************** function ___lwdiv *****************
  1896 ;; Defined at:
  1897 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\lwdiv.c"
  1898 ;; Parameters:    Size  Location     Type
  1899 ;;  divisor         2    0[BANK0 ] unsigned int 
  1900 ;;  dividend        2    2[BANK0 ] unsigned int 
  1901 ;; Auto vars:     Size  Location     Type
  1902 ;;  quotient        2    5[BANK0 ] unsigned int 
  1903 ;;  counter         1    7[BANK0 ] unsigned char 
  1904 ;; Return value:  Size  Location     Type
  1905 ;;                  2    0[BANK0 ] unsigned int 
  1906 ;; Registers used:
  1907 ;;		wreg, status,2, status,0
  1908 ;; Tracked objects:
  1909 ;;		On entry : 0/0
  1910 ;;		On exit  : 0/0
  1911 ;;		Unchanged: 0/0
  1912 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1913 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1914 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1915 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1916 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1917 ;;Total ram usage:        8 bytes
  1918 ;; Hardware stack levels used:    1
  1919 ;; Hardware stack levels required when called:    3
  1920 ;; This function calls:
  1921 ;;		Nothing
  1922 ;; This function is called by:
  1923 ;;		_sprintf
  1924 ;; This function uses a non-reentrant model
  1925 ;;
  1926                           
  1927                           
  1928                           ;psect for function ___lwdiv
  1929  0262                     ___lwdiv:	
  1930                           
  1931                           ;incstack = 0
  1932                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  1933  0262  0020               	movlb	0	; select bank0
  1934  0263  01A5               	clrf	___lwdiv@quotient
  1935  0264  01A6               	clrf	___lwdiv@quotient+1
  1936  0265  0820               	movf	___lwdiv@divisor,w
  1937  0266  0421               	iorwf	___lwdiv@divisor+1,w
  1938  0267  1903               	btfsc	3,2
  1939  0268  2A92               	goto	l1262
  1940  0269  01A7               	clrf	___lwdiv@counter
  1941  026A  0AA7               	incf	___lwdiv@counter,f
  1942  026B                     l1250:	
  1943  026B  1BA1               	btfsc	___lwdiv@divisor+1,7
  1944  026C  2A77               	goto	l1252
  1945  026D  3001               	movlw	1
  1946  026E                     u825:	
  1947  026E  35A0               	lslf	___lwdiv@divisor,f
  1948  026F  0DA1               	rlf	___lwdiv@divisor+1,f
  1949  0270  0B89               	decfsz	9,f
  1950  0271  2A6E               	goto	u825
  1951  0272  3001               	movlw	1
  1952  0273  00A4               	movwf	??___lwdiv
  1953  0274  0824               	movf	??___lwdiv,w
  1954  0275  07A7               	addwf	___lwdiv@counter,f
  1955  0276  2A6B               	goto	l1250
  1956  0277                     l1252:	
  1957  0277  3001               	movlw	1
  1958  0278                     u845:	
  1959  0278  35A5               	lslf	___lwdiv@quotient,f
  1960  0279  0DA6               	rlf	___lwdiv@quotient+1,f
  1961  027A  0B89               	decfsz	9,f
  1962  027B  2A78               	goto	u845
  1963  027C  0821               	movf	___lwdiv@divisor+1,w
  1964  027D  0223               	subwf	___lwdiv@dividend+1,w
  1965  027E  1D03               	skipz
  1966  027F  2A82               	goto	u855
  1967  0280  0820               	movf	___lwdiv@divisor,w
  1968  0281  0222               	subwf	___lwdiv@dividend,w
  1969  0282                     u855:	
  1970  0282  1C03               	skipc
  1971  0283  2A89               	goto	l1258
  1972  0284  0820               	movf	___lwdiv@divisor,w
  1973  0285  02A2               	subwf	___lwdiv@dividend,f
  1974  0286  0821               	movf	___lwdiv@divisor+1,w
  1975  0287  3BA3               	subwfb	___lwdiv@dividend+1,f
  1976  0288  1425               	bsf	___lwdiv@quotient,0
  1977  0289                     l1258:	
  1978  0289  3001               	movlw	1
  1979  028A                     u865:	
  1980  028A  36A1               	lsrf	___lwdiv@divisor+1,f
  1981  028B  0CA0               	rrf	___lwdiv@divisor,f
  1982  028C  0B89               	decfsz	9,f
  1983  028D  2A8A               	goto	u865
  1984  028E  3001               	movlw	1
  1985  028F  02A7               	subwf	___lwdiv@counter,f
  1986  0290  1D03               	btfss	3,2
  1987  0291  2A77               	goto	l1252
  1988  0292                     l1262:	
  1989  0292  0826               	movf	___lwdiv@quotient+1,w
  1990  0293  00A1               	movwf	?___lwdiv+1
  1991  0294  0825               	movf	___lwdiv@quotient,w
  1992  0295  00A0               	movwf	?___lwdiv
  1993  0296  0008               	return
  1994  0297                     __end_of___lwdiv:	
  1995                           
  1996                           	psect	text6
  1997  041A                     __ptext6:	
  1998 ;; *************** function _slave_reg *****************
  1999 ;; Defined at:
  2000 ;;		line 15 in file "spi.c"
  2001 ;; Parameters:    Size  Location     Type
  2002 ;;		None
  2003 ;; Auto vars:     Size  Location     Type
  2004 ;;		None
  2005 ;; Return value:  Size  Location     Type
  2006 ;;		None               void
  2007 ;; Registers used:
  2008 ;;		wreg, status,2
  2009 ;; Tracked objects:
  2010 ;;		On entry : 0/0
  2011 ;;		On exit  : 0/0
  2012 ;;		Unchanged: 0/0
  2013 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2014 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2015 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2016 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2017 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2018 ;;Total ram usage:        0 bytes
  2019 ;; Hardware stack levels used:    1
  2020 ;; Hardware stack levels required when called:    3
  2021 ;; This function calls:
  2022 ;;		Nothing
  2023 ;; This function is called by:
  2024 ;;		_main
  2025 ;; This function uses a non-reentrant model
  2026 ;;
  2027                           
  2028                           
  2029                           ;psect for function _slave_reg
  2030  041A                     _slave_reg:	
  2031                           
  2032                           ;spi.c: 29: SSP1CON1 = 0b00100100;
  2033                           
  2034                           ;incstack = 0
  2035                           ; Regs used in _slave_reg: [wreg+status,2]
  2036  041A  3024               	movlw	36
  2037  041B  0024               	movlb	4	; select bank4
  2038  041C  0095               	movwf	21	;volatile
  2039                           
  2040                           ;spi.c: 30: SSP1STAT = 0b00000000;
  2041  041D  0194               	clrf	20	;volatile
  2042                           
  2043                           ;spi.c: 33: SSP1IF = 0;
  2044  041E  0020               	movlb	0	; select bank0
  2045  041F  1191               	bcf	17,3	;volatile
  2046                           
  2047                           ;spi.c: 34: SSP1IE = 1;
  2048  0420  0021               	movlb	1	; select bank1
  2049  0421  1591               	bsf	17,3	;volatile
  2050  0422  0008               	return
  2051  0423                     __end_of_slave_reg:	
  2052                           
  2053                           	psect	text7
  2054  02E0                     __ptext7:	
  2055 ;; *************** function ___bmul *****************
  2056 ;; Defined at:
  2057 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\Umul8.c"
  2058 ;; Parameters:    Size  Location     Type
  2059 ;;  multiplier      1    wreg     unsigned char 
  2060 ;;  multiplicand    1    0[BANK0 ] unsigned char 
  2061 ;; Auto vars:     Size  Location     Type
  2062 ;;  multiplier      1    3[BANK0 ] unsigned char 
  2063 ;;  product         1    2[BANK0 ] unsigned char 
  2064 ;; Return value:  Size  Location     Type
  2065 ;;                  1    wreg      unsigned char 
  2066 ;; Registers used:
  2067 ;;		wreg, status,2, status,0
  2068 ;; Tracked objects:
  2069 ;;		On entry : 0/0
  2070 ;;		On exit  : 0/0
  2071 ;;		Unchanged: 0/0
  2072 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2073 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2074 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2075 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2076 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2077 ;;Total ram usage:        4 bytes
  2078 ;; Hardware stack levels used:    1
  2079 ;; Hardware stack levels required when called:    3
  2080 ;; This function calls:
  2081 ;;		Nothing
  2082 ;; This function is called by:
  2083 ;;		_main
  2084 ;; This function uses a non-reentrant model
  2085 ;;
  2086                           
  2087                           
  2088                           ;psect for function ___bmul
  2089  02E0                     ___bmul:	
  2090                           
  2091                           ;incstack = 0
  2092                           ; Regs used in ___bmul: [wreg+status,2+status,0]
  2093                           ;___bmul@multiplier stored from wreg
  2094  02E0  0020               	movlb	0	; select bank0
  2095  02E1  00A3               	movwf	___bmul@multiplier
  2096  02E2  01A2               	clrf	___bmul@product
  2097  02E3                     l1422:	
  2098  02E3  1C23               	btfss	___bmul@multiplier,0
  2099  02E4  2AE9               	goto	l1426
  2100  02E5  0820               	movf	___bmul@multiplicand,w
  2101  02E6  00A1               	movwf	??___bmul
  2102  02E7  0821               	movf	??___bmul,w
  2103  02E8  07A2               	addwf	___bmul@product,f
  2104  02E9                     l1426:	
  2105  02E9  1003               	clrc
  2106  02EA  0DA0               	rlf	___bmul@multiplicand,f
  2107  02EB  1003               	clrc
  2108  02EC  0CA3               	rrf	___bmul@multiplier,f
  2109  02ED  0823               	movf	___bmul@multiplier,w
  2110  02EE  1D03               	btfss	3,2
  2111  02EF  2AE3               	goto	l1422
  2112  02F0  0822               	movf	___bmul@product,w
  2113  02F1  0008               	return
  2114  02F2                     __end_of___bmul:	
  2115                           
  2116                           	psect	text8
  2117  01C2                     __ptext8:	
  2118 ;; *************** function ___awdiv *****************
  2119 ;; Defined at:
  2120 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\awdiv.c"
  2121 ;; Parameters:    Size  Location     Type
  2122 ;;  divisor         2    0[BANK0 ] int 
  2123 ;;  dividend        2    2[BANK0 ] int 
  2124 ;; Auto vars:     Size  Location     Type
  2125 ;;  quotient        2    7[BANK0 ] int 
  2126 ;;  sign            1    6[BANK0 ] unsigned char 
  2127 ;;  counter         1    5[BANK0 ] unsigned char 
  2128 ;; Return value:  Size  Location     Type
  2129 ;;                  2    0[BANK0 ] int 
  2130 ;; Registers used:
  2131 ;;		wreg, status,2, status,0
  2132 ;; Tracked objects:
  2133 ;;		On entry : 0/0
  2134 ;;		On exit  : 0/0
  2135 ;;		Unchanged: 0/0
  2136 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2137 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2138 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2139 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2140 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2141 ;;Total ram usage:        9 bytes
  2142 ;; Hardware stack levels used:    1
  2143 ;; Hardware stack levels required when called:    3
  2144 ;; This function calls:
  2145 ;;		Nothing
  2146 ;; This function is called by:
  2147 ;;		_main
  2148 ;; This function uses a non-reentrant model
  2149 ;;
  2150                           
  2151                           
  2152                           ;psect for function ___awdiv
  2153  01C2                     ___awdiv:	
  2154                           
  2155                           ;incstack = 0
  2156                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  2157  01C2  0020               	movlb	0	; select bank0
  2158  01C3  01A6               	clrf	___awdiv@sign
  2159  01C4  1FA1               	btfss	___awdiv@divisor+1,7
  2160  01C5  29CD               	goto	l1442
  2161  01C6  09A0               	comf	___awdiv@divisor,f
  2162  01C7  09A1               	comf	___awdiv@divisor+1,f
  2163  01C8  0AA0               	incf	___awdiv@divisor,f
  2164  01C9  1903               	skipnz
  2165  01CA  0AA1               	incf	___awdiv@divisor+1,f
  2166  01CB  01A6               	clrf	___awdiv@sign
  2167  01CC  0AA6               	incf	___awdiv@sign,f
  2168  01CD                     l1442:	
  2169  01CD  1FA3               	btfss	___awdiv@dividend+1,7
  2170  01CE  29D8               	goto	l1448
  2171  01CF  09A2               	comf	___awdiv@dividend,f
  2172  01D0  09A3               	comf	___awdiv@dividend+1,f
  2173  01D1  0AA2               	incf	___awdiv@dividend,f
  2174  01D2  1903               	skipnz
  2175  01D3  0AA3               	incf	___awdiv@dividend+1,f
  2176  01D4  3001               	movlw	1
  2177  01D5  00A4               	movwf	??___awdiv
  2178  01D6  0824               	movf	??___awdiv,w
  2179  01D7  06A6               	xorwf	___awdiv@sign,f
  2180  01D8                     l1448:	
  2181  01D8  01A7               	clrf	___awdiv@quotient
  2182  01D9  01A8               	clrf	___awdiv@quotient+1
  2183  01DA  0820               	movf	___awdiv@divisor,w
  2184  01DB  0421               	iorwf	___awdiv@divisor+1,w
  2185  01DC  1903               	btfsc	3,2
  2186  01DD  2A07               	goto	l1470
  2187  01DE  01A5               	clrf	___awdiv@counter
  2188  01DF  0AA5               	incf	___awdiv@counter,f
  2189  01E0                     l1458:	
  2190  01E0  1BA1               	btfsc	___awdiv@divisor+1,7
  2191  01E1  29EC               	goto	l1460
  2192  01E2  3001               	movlw	1
  2193  01E3                     u1205:	
  2194  01E3  35A0               	lslf	___awdiv@divisor,f
  2195  01E4  0DA1               	rlf	___awdiv@divisor+1,f
  2196  01E5  0B89               	decfsz	9,f
  2197  01E6  29E3               	goto	u1205
  2198  01E7  3001               	movlw	1
  2199  01E8  00A4               	movwf	??___awdiv
  2200  01E9  0824               	movf	??___awdiv,w
  2201  01EA  07A5               	addwf	___awdiv@counter,f
  2202  01EB  29E0               	goto	l1458
  2203  01EC                     l1460:	
  2204  01EC  3001               	movlw	1
  2205  01ED                     u1225:	
  2206  01ED  35A7               	lslf	___awdiv@quotient,f
  2207  01EE  0DA8               	rlf	___awdiv@quotient+1,f
  2208  01EF  0B89               	decfsz	9,f
  2209  01F0  29ED               	goto	u1225
  2210  01F1  0821               	movf	___awdiv@divisor+1,w
  2211  01F2  0223               	subwf	___awdiv@dividend+1,w
  2212  01F3  1D03               	skipz
  2213  01F4  29F7               	goto	u1235
  2214  01F5  0820               	movf	___awdiv@divisor,w
  2215  01F6  0222               	subwf	___awdiv@dividend,w
  2216  01F7                     u1235:	
  2217  01F7  1C03               	skipc
  2218  01F8  29FE               	goto	l1466
  2219  01F9  0820               	movf	___awdiv@divisor,w
  2220  01FA  02A2               	subwf	___awdiv@dividend,f
  2221  01FB  0821               	movf	___awdiv@divisor+1,w
  2222  01FC  3BA3               	subwfb	___awdiv@dividend+1,f
  2223  01FD  1427               	bsf	___awdiv@quotient,0
  2224  01FE                     l1466:	
  2225  01FE  3001               	movlw	1
  2226  01FF                     u1245:	
  2227  01FF  36A1               	lsrf	___awdiv@divisor+1,f
  2228  0200  0CA0               	rrf	___awdiv@divisor,f
  2229  0201  0B89               	decfsz	9,f
  2230  0202  29FF               	goto	u1245
  2231  0203  3001               	movlw	1
  2232  0204  02A5               	subwf	___awdiv@counter,f
  2233  0205  1D03               	btfss	3,2
  2234  0206  29EC               	goto	l1460
  2235  0207                     l1470:	
  2236  0207  0826               	movf	___awdiv@sign,w
  2237  0208  1903               	btfsc	3,2
  2238  0209  2A0F               	goto	l1474
  2239  020A  09A7               	comf	___awdiv@quotient,f
  2240  020B  09A8               	comf	___awdiv@quotient+1,f
  2241  020C  0AA7               	incf	___awdiv@quotient,f
  2242  020D  1903               	skipnz
  2243  020E  0AA8               	incf	___awdiv@quotient+1,f
  2244  020F                     l1474:	
  2245  020F  0828               	movf	___awdiv@quotient+1,w
  2246  0210  00A1               	movwf	?___awdiv+1
  2247  0211  0827               	movf	___awdiv@quotient,w
  2248  0212  00A0               	movwf	?___awdiv
  2249  0213  0008               	return
  2250  0214                     __end_of___awdiv:	
  2251                           
  2252                           	psect	intentry
  2253  0004                     __pintentry:	
  2254 ;; *************** function _inter *****************
  2255 ;; Defined at:
  2256 ;;		line 19 in file "main.c"
  2257 ;; Parameters:    Size  Location     Type
  2258 ;;		None
  2259 ;; Auto vars:     Size  Location     Type
  2260 ;;		None
  2261 ;; Return value:  Size  Location     Type
  2262 ;;		None               void
  2263 ;; Registers used:
  2264 ;;		wreg, status,2, status,0, pclath, cstack
  2265 ;; Tracked objects:
  2266 ;;		On entry : 0/0
  2267 ;;		On exit  : 0/0
  2268 ;;		Unchanged: 0/0
  2269 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2270 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2271 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2272 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2273 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2274 ;;Total ram usage:        3 bytes
  2275 ;; Hardware stack levels used:    1
  2276 ;; Hardware stack levels required when called:    2
  2277 ;; This function calls:
  2278 ;;		_slaveread
  2279 ;; This function is called by:
  2280 ;;		Interrupt level 1
  2281 ;; This function uses a non-reentrant model
  2282 ;;
  2283                           
  2284  0004                     _inter:	
  2285                           
  2286                           ;incstack = 0
  2287                           ; Regs used in _inter: [wreg+status,2+status,0+pclath+cstack]
  2288  0004  3180               	pagesel	$
  2289  0005  0020               	movlb	0	; select bank0
  2290  0006  087F               	movf	127,w
  2291  0007  00F7               	movwf	??_inter+2
  2292                           
  2293                           ;main.c: 21: if(IOCAFbits.IOCAF4 == 1){
  2294  0008  0027               	movlb	7	; select bank7
  2295  0009  1E13               	btfss	19,4	;volatile
  2296  000A  2818               	goto	i1l1488
  2297                           
  2298                           ;main.c: 22: if(RA5 == 1){
  2299  000B  0020               	movlb	0	; select bank0
  2300  000C  1E8C               	btfss	12,5	;volatile
  2301  000D  2812               	goto	i1l1484
  2302                           
  2303                           ;main.c: 23: count++;
  2304  000E  3001               	movlw	1
  2305  000F  07C6               	addwf	_count,f
  2306  0010  3000               	movlw	0
  2307  0011  2815               	goto	L2
  2308  0012                     i1l1484:	
  2309                           ;main.c: 24: }else{
  2310                           
  2311                           
  2312                           ;main.c: 25: count--;
  2313  0012  30FF               	movlw	255
  2314  0013  07C6               	addwf	_count,f
  2315  0014  30FF               	movlw	255
  2316  0015                     L2:	
  2317  0015  3DC7               	addwfc	_count+1,f
  2318                           
  2319                           ;main.c: 26: }
  2320                           ;main.c: 27: IOCAFbits.IOCAF4 = 0;
  2321  0016  0027               	movlb	7	; select bank7
  2322  0017  1213               	bcf	19,4	;volatile
  2323  0018                     i1l1488:	
  2324                           
  2325                           ;main.c: 28: }
  2326                           ;main.c: 30: if(T0IF == 1){
  2327  0018  1D0B               	btfss	11,2	;volatile
  2328  0019  2822               	goto	i1l1494
  2329                           
  2330                           ;main.c: 31: TMR0 = 156;
  2331  001A  309C               	movlw	156
  2332  001B  0020               	movlb	0	; select bank0
  2333  001C  0095               	movwf	21	;volatile
  2334                           
  2335                           ;main.c: 32: time++;
  2336  001D  3001               	movlw	1
  2337  001E  07CA               	addwf	_time,f
  2338  001F  3000               	movlw	0
  2339  0020  3DCB               	addwfc	_time+1,f
  2340                           
  2341                           ;main.c: 33: T0IF = 0;
  2342  0021  110B               	bcf	11,2	;volatile
  2343  0022                     i1l1494:	
  2344                           
  2345                           ;main.c: 34: }
  2346                           ;main.c: 36: target = slaveread();
  2347  0022  3182  22C4         	fcall	_slaveread
  2348  0024  00F5               	movwf	??_inter
  2349  0025  01F6               	clrf	??_inter+1
  2350  0026  0875               	movf	??_inter,w
  2351  0027  0020               	movlb	0	; select bank0
  2352  0028  00D7               	movwf	_target
  2353  0029  0876               	movf	??_inter+1,w
  2354  002A  00D8               	movwf	_target+1
  2355  002B  0877               	movf	??_inter+2,w
  2356  002C  00FF               	movwf	127
  2357  002D  0009               	retfie
  2358  002E                     __end_of_inter:	
  2359                           
  2360                           	psect	text10
  2361  02C4                     __ptext10:	
  2362 ;; *************** function _slaveread *****************
  2363 ;; Defined at:
  2364 ;;		line 43 in file "spi.c"
  2365 ;; Parameters:    Size  Location     Type
  2366 ;;		None
  2367 ;; Auto vars:     Size  Location     Type
  2368 ;;		None
  2369 ;; Return value:  Size  Location     Type
  2370 ;;                  1    wreg      unsigned char 
  2371 ;; Registers used:
  2372 ;;		wreg, status,2, status,0, pclath, cstack
  2373 ;; Tracked objects:
  2374 ;;		On entry : 0/0
  2375 ;;		On exit  : 0/0
  2376 ;;		Unchanged: 0/0
  2377 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2378 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2379 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2380 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2381 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2382 ;;Total ram usage:        1 bytes
  2383 ;; Hardware stack levels used:    1
  2384 ;; Hardware stack levels required when called:    1
  2385 ;; This function calls:
  2386 ;;		i1___bmul
  2387 ;; This function is called by:
  2388 ;;		_inter
  2389 ;; This function uses a non-reentrant model
  2390 ;;
  2391                           
  2392                           
  2393                           ;psect for function _slaveread
  2394  02C4                     _slaveread:	
  2395                           
  2396                           ;spi.c: 46: if((SSP1IF == 1) && (SSP1STATbits.BF != 0)){
  2397                           
  2398                           ;incstack = 0
  2399                           ; Regs used in _slaveread: [wreg+status,2+status,0+pclath+cstack]
  2400  02C4  0020               	movlb	0	; select bank0
  2401  02C5  1D91               	btfss	17,3	;volatile
  2402  02C6  2ADE               	goto	i1l1376
  2403  02C7  0024               	movlb	4	; select bank4
  2404  02C8  1C14               	btfss	20,0	;volatile
  2405  02C9  2ADE               	goto	i1l1376
  2406                           
  2407                           ;spi.c: 47: SSP1IF = 0;
  2408  02CA  0020               	movlb	0	; select bank0
  2409  02CB  1191               	bcf	17,3	;volatile
  2410                           
  2411                           ;spi.c: 49: if(SSP1BUF & 0x80 == 0x80){
  2412  02CC  0024               	movlb	4	; select bank4
  2413  02CD  1C11               	btfss	17,0	;volatile
  2414  02CE  2AD1               	goto	i1l1370
  2415                           
  2416                           ;spi.c: 50: CCP1CON = 0x4C;
  2417  02CF  304C               	movlw	76
  2418  02D0  2AD2               	goto	L3
  2419  02D1                     i1l1370:	
  2420                           ;spi.c: 51: }else{
  2421                           
  2422                           
  2423                           ;spi.c: 52: CCP1CON = 0xCC;
  2424  02D1  30CC               	movlw	204
  2425  02D2                     L3:	
  2426  02D2  0025               	movlb	5	; select bank5
  2427  02D3  0093               	movwf	19	;volatile
  2428                           
  2429                           ;spi.c: 53: }
  2430                           ;spi.c: 55: return ((SSP1BUF & 0x7F) * 3);
  2431  02D4  3003               	movlw	3
  2432  02D5  00F4               	movwf	??_slaveread
  2433  02D6  0874               	movf	??_slaveread,w
  2434  02D7  00F0               	movwf	i1___bmul@multiplicand
  2435  02D8  0024               	movlb	4	; select bank4
  2436  02D9  0811               	movf	17,w	;volatile
  2437  02DA  397F               	andlw	127
  2438  02DB  3182  22F2         	fcall	i1___bmul
  2439  02DD  0008               	return
  2440  02DE                     i1l1376:	
  2441                           
  2442                           ;spi.c: 56: }
  2443                           ;spi.c: 58: return 0;
  2444  02DE  3000               	movlw	0
  2445  02DF  0008               	return
  2446  02E0                     __end_of_slaveread:	
  2447                           
  2448                           	psect	text11
  2449  02F2                     __ptext11:	
  2450 ;; *************** function i1___bmul *****************
  2451 ;; Defined at:
  2452 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\Umul8.c"
  2453 ;; Parameters:    Size  Location     Type
  2454 ;;  multiplier      1    wreg     unsigned char 
  2455 ;;  multiplicand    1    0[COMMON] unsigned char 
  2456 ;; Auto vars:     Size  Location     Type
  2457 ;;  multiplier      1    3[COMMON] unsigned char 
  2458 ;;  __bmul          1    2[COMMON] unsigned char 
  2459 ;; Return value:  Size  Location     Type
  2460 ;;                  1    wreg      unsigned char 
  2461 ;; Registers used:
  2462 ;;		wreg, status,2, status,0
  2463 ;; Tracked objects:
  2464 ;;		On entry : 0/0
  2465 ;;		On exit  : 0/0
  2466 ;;		Unchanged: 0/0
  2467 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2468 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2469 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2470 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2471 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2472 ;;Total ram usage:        4 bytes
  2473 ;; Hardware stack levels used:    1
  2474 ;; This function calls:
  2475 ;;		Nothing
  2476 ;; This function is called by:
  2477 ;;		_slaveread
  2478 ;; This function uses a non-reentrant model
  2479 ;;
  2480                           
  2481                           
  2482                           ;psect for function i1___bmul
  2483  02F2                     i1___bmul:	
  2484                           
  2485                           ;incstack = 0
  2486                           ; Regs used in i1___bmul: [wreg+status,2+status,0]
  2487                           ;i1___bmul@multiplier stored from wreg
  2488  02F2  00F3               	movwf	i1___bmul@multiplier
  2489  02F3  01F2               	clrf	i1___bmul@product
  2490  02F4                     i1l1350:	
  2491  02F4  1C73               	btfss	i1___bmul@multiplier,0
  2492  02F5  2AFA               	goto	i1l1354
  2493  02F6  0870               	movf	i1___bmul@multiplicand,w
  2494  02F7  00F1               	movwf	??i1___bmul
  2495  02F8  0871               	movf	??i1___bmul,w
  2496  02F9  07F2               	addwf	i1___bmul@product,f
  2497  02FA                     i1l1354:	
  2498  02FA  1003               	clrc
  2499  02FB  0DF0               	rlf	i1___bmul@multiplicand,f
  2500  02FC  1003               	clrc
  2501  02FD  0CF3               	rrf	i1___bmul@multiplier,f
  2502  02FE  0873               	movf	i1___bmul@multiplier,w
  2503  02FF  1D03               	btfss	3,2
  2504  0300  2AF4               	goto	i1l1350
  2505  0301  0872               	movf	i1___bmul@product,w
  2506  0302  0008               	return
  2507  0303                     __end_ofi1___bmul:	
  2508  007E                     btemp	set	126	;btemp
  2509  007E                     wtemp	set	126
  2510  007E                     wtemp0	set	126
  2511  0080                     wtemp1	set	128
  2512  0082                     wtemp2	set	130
  2513  0084                     wtemp3	set	132
  2514  0086                     wtemp4	set	134
  2515  0088                     wtemp5	set	136
  2516  007F                     wtemp6	set	127
  2517  007E                     ttemp	set	126
  2518  007E                     ttemp0	set	126
  2519  0081                     ttemp1	set	129
  2520  0084                     ttemp2	set	132
  2521  0087                     ttemp3	set	135
  2522  007F                     ttemp4	set	127
  2523  007E                     ltemp	set	126
  2524  007E                     ltemp0	set	126
  2525  0082                     ltemp1	set	130
  2526  0086                     ltemp2	set	134
  2527  0080                     ltemp3	set	128


Data Sizes:
    Strings     3
    Constant    10
    Data        9
    BSS         14
    Persistent  2
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      8      12
    BANK0            80     38      59
    BANK1            80      0       0
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_1(CODE[3]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 7
		 -> str(BANK0[7]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _inter in COMMON

    _inter->_slaveread
    _slaveread->i1___bmul

Critical Paths under _main in BANK0

    _main->_sousin
    _sousin->_henkan
    _henkan->_sprintf
    _sprintf->___lwmod
    ___lwmod->___lwdiv

Critical Paths under _inter in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _inter in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _inter in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _inter in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _inter in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _inter in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _inter in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _inter in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _inter in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _inter in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _inter in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _inter in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _inter in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0    1887
                                             36 BANK0      2     2      0
                            ___awdiv
                             ___bmul
                          _slave_reg
                             _sousin
 ---------------------------------------------------------------------------------
 (1) _sousin                                               5     3      2    1309
                                             31 BANK0      5     3      2
                             _henkan
 ---------------------------------------------------------------------------------
 (2) _henkan                                               2     0      2    1165
                                             29 BANK0      2     0      2
                            _sprintf
 ---------------------------------------------------------------------------------
 (3) _sprintf                                             23    19      4    1090
                                             14 BANK0     15    11      4
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (4) ___lwmod                                              6     2      4     265
                                              8 BANK0      6     2      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (4) ___lwdiv                                              8     4      4     268
                                              0 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (1) _slave_reg                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) ___bmul                                               4     3      1     172
                                              0 BANK0      4     3      1
 ---------------------------------------------------------------------------------
 (1) ___awdiv                                              9     5      4     406
                                              0 BANK0      9     5      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _inter                                                3     3      0     118
                                              5 COMMON     3     3      0
                          _slaveread
 ---------------------------------------------------------------------------------
 (6) _slaveread                                            1     1      0     118
                                              4 COMMON     1     1      0
                           i1___bmul
 ---------------------------------------------------------------------------------
 (7) i1___bmul                                             4     3      1     118
                                              0 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   ___awdiv
   ___bmul
   _slave_reg
   _sousin
     _henkan
       _sprintf
         ___lwdiv
         ___lwmod
           ___lwdiv (ARG)

 _inter (ROOT)
   _slaveread
     i1___bmul

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      8       C       2       85.7%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     26      3B       5       73.8%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0      47      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0      47      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.34 build -361300703 
Symbol Table                                                                                   Tue Aug 04 15:02:47 2015

         ___bmul@product 0022              __CFG_CP$OFF 0000             ___awdiv@sign 0026  
                     _kp 0059                      l114 01B1                      l280 024B  
                    l275 022C                      l285 0256                      _GIE 005F  
                    _RA0 0060                      _RA1 0061                      _RA2 0062  
                    _RA3 0063                      _RC0 0070                      _RA4 0064  
                    _RC1 0071                      _RA5 0065                      _RC2 0072  
                    _RC3 0073                      _RB5 006D                      _RC4 0074  
                    _RC5 0075                      _RB7 006F                      _PR2 001B  
           __CFG_CPD$OFF 0000                      u825 026E                      u915 02B0  
                    u845 0278                      u925 02B7                      u855 0282  
                    u865 028A                      u895 02A1                      u975 00C4  
                    _dev 0048              henkan@sdata 003D                      _str 004C  
           __CFG_BORV$LO 0000                      wreg 0009             __CFG_LVP$OFF 0000  
                   l1302 0093                     l1312 00A9                     l1400 0232  
                   l1250 026B                     l1330 00DD                     l1410 0251  
                   l1252 0277                     l1324 00CE                     l1340 0059  
                   l1422 02E3                     l1262 0292                     l1318 00AF  
                   l1342 011C                     l1280 02B6                     l1416 025C  
                   l1442 01CD                     l1426 02E9                     l1258 0289  
                   l1274 029E                     l1338 00E1                     l1460 01EC  
                   l1276 02AA                     l1284 02BF                     l1470 0207  
                   l1448 01D8                     l1296 007B                     l1474 020F  
                   l1466 01FE                     l1458 01E0                     l1572 0178  
                   l1582 01A2                     l1588 01BF                     STR_1 040A  
                   _T0IE 005D                     _T0IF 005A                     u1105 0249  
                   u1205 01E3                     u1225 01ED                     u1235 01F7  
                   u1075 022A                     u1315 01AC                     u1245 01FF  
                   _PEIE 005E                     _TMR0 0015                     _TMR2 001A  
                   _TRMT 0CF1                     _TXIF 008C                     _WPUA 020C  
           __CFG_WRT$OFF 0000                     _main 0121                     _time 004A  
                   fsr0h 0005                     fsr1h 0007                     fsr0l 0004  
                   indf0 0000                     indf1 0001                     fsr1l 0006  
                   btemp 007E                     ltemp 007E                     start 002E  
                   ttemp 007E                     wtemp 007E            __CFG_IESO$OFF 0000  
      ___bmul@multiplier 0023                    ?_main 0070          __end_of___awdiv 0214  
          __CFG_WDTE$OFF 0000          ___awdiv@divisor 0020                    _T2CON 001C  
                  _IOCAF 0393                    _IOCAP 0391                    _IOCIE 005B  
        __end_of___lwdiv 0297          __end_of___lwmod 02C4          ___awdiv@counter 0025  
                  _RCSTA 019D                    _SPBRG 019B                    _PORTA 000C  
                  _PORTB 000D                    _PORTC 000E                    _TRISA 008C  
                  _TRISB 008D                    _TRISC 008E                    _TXREG 019A  
                  _TXSTA 019E           __CFG_FCMEN$OFF 0000          __end_of_dpowers 040A  
                  _count 0046                    _inter 0004         __end_ofi1___bmul 0303  
         __CFG_BOREN$OFF 0000                    ltemp0 007E                    ltemp1 0082  
                  ltemp2 0086                    ltemp3 0080                    ttemp0 007E  
                  ttemp1 0081                    ttemp2 0084                    ttemp3 0087  
                  ttemp4 007F                    status 0003                    wtemp0 007E  
                  wtemp1 0080                    wtemp2 0082                    wtemp3 0084  
                  wtemp4 0086                    wtemp5 0088                    wtemp6 007F  
        __end_of_sprintf 0121           __CFG_MCLRE$OFF 0000          __initialization 0030  
           __end_of_main 01C2                   ??_main 0044           __CFG_PLLEN$OFF 0000  
                 ?_inter 0070                   _CCPR1H 0292                   _CCPR1L 0291  
       ___awdiv@dividend 0022                   _P1CSEL 08F2                   _P1DSEL 08F3  
                 _ANSELA 018C                   _ANSELB 018D                   _ANSELC 018E  
                 i1l1350 02F4                   i1l1354 02FA                   i1l1370 02D1  
                 i1l1376 02DE                   i1l1484 0012                   i1l1494 0022  
                 i1l1488 0018                   _OSCCON 0099                   _TMR2ON 00E2  
                 _SSP1IE 048B                   _SSP1IF 008B           __CFG_PWRTE$OFF 0000  
                 ___bmul 02E0                ??___awdiv 0024                ??___lwdiv 0024  
              ??___lwmod 002C                   _henkan 040D                   _p_band 0055  
                 _r_data 007B         ___awdiv@quotient 0027                   _target 0057  
                 _sousin 0214             __pdataCOMMON 0078                ??_sprintf 0032  
__end_of__initialization 0050      ___bmul@multiplicand 0020           __pcstackCOMMON 0070  
           __pidataBANK0 0423            __end_of_inter 002E                ?i1___bmul 0070  
       i1___bmul@product 0072                  ??_inter 0075               __pbssBANK0 0046  
             __pmaintext 0121                  ?___bmul 0020               __pintentry 0004  
                ?_henkan 003D                  _CCP1CON 0293                  _CCPTMRS 029E  
             ??i1___bmul 0071                  ?_sousin 003F       __size_of_slave_reg 0009  
     __size_of_slaveread 001C                  _SSP1BUF 0211                  _RXDTSEL 08EF  
                _TXCKSEL 08EA          __size_of___bmul 0012                  ___awdiv 01C2  
                ___lwdiv 0262                  ___lwmod 0297          __size_of_henkan 000D  
        __CFG_STVREN$OFF 0000                  __ptext1 0214                  __ptext2 040D  
                __ptext3 0053                  __ptext4 0297                  __ptext5 0262  
                __ptext6 041A                  __ptext7 02E0                  __ptext8 01C2  
        __size_of_sousin 004E                  _dpowers 0400                  _max_ope 0053  
                _min_rad 0078                _IOCAFbits 0393      i1___bmul@multiplier 0073  
                _sprintf 0053                  clrloop0 042A     end_of_initialization 0050  
                init_ram 042F                  initloop 0430        __end_of_slave_reg 0423  
      __end_of_slaveread 02E0             __pstringtext 0400                  sousin@i 0042  
       __CFG_FOSC$INTOSC 0000           __end_of___bmul 02F2            __pidataCOMMON 0435  
         __end_of_henkan 041A           __end_of_sousin 0262        __size_ofi1___bmul 0011  
    start_initialization 0030                 ??___bmul 0021                 ??_henkan 003F  
            __pdataBANK0 0053                 ??_sousin 0041              __pbssCOMMON 007B  
              ___latbits 0002            __pcstackBANK0 0020              sprintf@flag 0037  
            sprintf@prec 0038                __pnvBANK0 0059         ___lwdiv@dividend 0022  
               ?___awdiv 0020                 ?___lwdiv 0020                 ?___lwmod 0028  
            sousin@sdata 003F         ___lwdiv@quotient 0025                 ?_sprintf 002E  
         __size_of_inter 002A                clear_ram0 0429    i1___bmul@multiplicand 0070  
              _slave_reg 041A                _slaveread 02C4                 _SSP1CON1 0215  
               _PSTR1CON 0296                 _SSP1STAT 0214                 i1___bmul 02F2  
             ?_slave_reg 0070               ?_slaveread 0070         __size_of___awdiv 0052  
       __size_of___lwdiv 0035         __size_of___lwmod 002D               sprintf@val 0039  
        ___lwdiv@divisor 0020          ___lwdiv@counter 0027                 __ptext10 02C4  
               __ptext11 02F2         __size_of_sprintf 00CE            __size_of_main 00A1  
           _SSP1STATbits 0214                 intlevel1 0000                sprintf@ap 0036  
              sprintf@sp 003B         ___lwmod@dividend 002A        __CFG_CLKOUTEN$OFF 0000  
            ??_slave_reg 0020              ??_slaveread 0074               _OPTION_REG 0095  
               sprintf@c 003C                 sprintf@f 002E          ___lwmod@divisor 0028  
        ___lwmod@counter 002D  
