

Microchip Technology PIC LITE Macro Assembler V1.34 build -361300703 
                                                                                               Mon Oct 12 16:16:53 2015

Microchip Technology Omniscient Code Generator (Lite mode) build 201502162209
     1                           	processor	16F1827
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	text0,local,class=CODE,merge=1,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     8                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    10                           	psect	text1,local,class=CODE,merge=1,delta=2
    11                           	psect	text2,local,class=CODE,merge=1,delta=2
    12                           	psect	text3,local,class=CODE,merge=1,delta=2
    13                           	psect	text4,local,class=CODE,merge=1,delta=2
    14                           	psect	intentry,global,class=CODE,delta=2
    15                           	psect	text6,local,class=CODE,merge=1,delta=2
    16                           	psect	text7,local,class=CODE,merge=1,delta=2
    17                           	psect	text8,local,class=CODE,merge=1,delta=2
    18                           	dabs	1,0x7E,2
    19  0000                     	;# 
    20  0001                     	;# 
    21  0002                     	;# 
    22  0003                     	;# 
    23  0004                     	;# 
    24  0005                     	;# 
    25  0006                     	;# 
    26  0007                     	;# 
    27  0008                     	;# 
    28  0009                     	;# 
    29  000A                     	;# 
    30  000B                     	;# 
    31  000C                     	;# 
    32  000D                     	;# 
    33  0011                     	;# 
    34  0012                     	;# 
    35  0013                     	;# 
    36  0014                     	;# 
    37  0015                     	;# 
    38  0016                     	;# 
    39  0016                     	;# 
    40  0017                     	;# 
    41  0018                     	;# 
    42  0019                     	;# 
    43  001A                     	;# 
    44  001B                     	;# 
    45  001C                     	;# 
    46  001E                     	;# 
    47  001F                     	;# 
    48  008C                     	;# 
    49  008D                     	;# 
    50  0091                     	;# 
    51  0092                     	;# 
    52  0093                     	;# 
    53  0094                     	;# 
    54  0095                     	;# 
    55  0096                     	;# 
    56  0097                     	;# 
    57  0098                     	;# 
    58  0099                     	;# 
    59  009A                     	;# 
    60  009B                     	;# 
    61  009B                     	;# 
    62  009C                     	;# 
    63  009D                     	;# 
    64  009E                     	;# 
    65  010C                     	;# 
    66  010D                     	;# 
    67  0111                     	;# 
    68  0112                     	;# 
    69  0113                     	;# 
    70  0114                     	;# 
    71  0115                     	;# 
    72  0116                     	;# 
    73  0117                     	;# 
    74  0118                     	;# 
    75  0119                     	;# 
    76  011A                     	;# 
    77  011B                     	;# 
    78  011D                     	;# 
    79  011E                     	;# 
    80  018C                     	;# 
    81  018D                     	;# 
    82  0191                     	;# 
    83  0191                     	;# 
    84  0192                     	;# 
    85  0193                     	;# 
    86  0193                     	;# 
    87  0193                     	;# 
    88  0194                     	;# 
    89  0195                     	;# 
    90  0196                     	;# 
    91  0199                     	;# 
    92  019A                     	;# 
    93  019B                     	;# 
    94  019B                     	;# 
    95  019B                     	;# 
    96  019B                     	;# 
    97  019C                     	;# 
    98  019C                     	;# 
    99  019D                     	;# 
   100  019E                     	;# 
   101  019F                     	;# 
   102  020C                     	;# 
   103  020D                     	;# 
   104  0211                     	;# 
   105  0211                     	;# 
   106  0212                     	;# 
   107  0212                     	;# 
   108  0213                     	;# 
   109  0213                     	;# 
   110  0214                     	;# 
   111  0214                     	;# 
   112  0215                     	;# 
   113  0215                     	;# 
   114  0215                     	;# 
   115  0216                     	;# 
   116  0216                     	;# 
   117  0217                     	;# 
   118  0217                     	;# 
   119  0219                     	;# 
   120  021A                     	;# 
   121  021B                     	;# 
   122  021C                     	;# 
   123  021D                     	;# 
   124  021E                     	;# 
   125  021F                     	;# 
   126  0291                     	;# 
   127  0291                     	;# 
   128  0292                     	;# 
   129  0293                     	;# 
   130  0294                     	;# 
   131  0295                     	;# 
   132  0295                     	;# 
   133  0296                     	;# 
   134  0298                     	;# 
   135  0298                     	;# 
   136  0299                     	;# 
   137  029A                     	;# 
   138  029B                     	;# 
   139  029C                     	;# 
   140  029C                     	;# 
   141  029D                     	;# 
   142  029E                     	;# 
   143  029E                     	;# 
   144  0311                     	;# 
   145  0311                     	;# 
   146  0312                     	;# 
   147  0313                     	;# 
   148  0318                     	;# 
   149  0318                     	;# 
   150  0319                     	;# 
   151  031A                     	;# 
   152  0394                     	;# 
   153  0395                     	;# 
   154  0396                     	;# 
   155  039A                     	;# 
   156  039C                     	;# 
   157  039D                     	;# 
   158  039E                     	;# 
   159  039F                     	;# 
   160  0415                     	;# 
   161  0416                     	;# 
   162  0417                     	;# 
   163  041C                     	;# 
   164  041D                     	;# 
   165  041E                     	;# 
   166  0FE4                     	;# 
   167  0FE5                     	;# 
   168  0FE6                     	;# 
   169  0FE7                     	;# 
   170  0FE8                     	;# 
   171  0FE9                     	;# 
   172  0FEA                     	;# 
   173  0FEB                     	;# 
   174  0FED                     	;# 
   175  0FEE                     	;# 
   176  0FEF                     	;# 
   177  0000                     	;# 
   178  0001                     	;# 
   179  0002                     	;# 
   180  0003                     	;# 
   181  0004                     	;# 
   182  0005                     	;# 
   183  0006                     	;# 
   184  0007                     	;# 
   185  0008                     	;# 
   186  0009                     	;# 
   187  000A                     	;# 
   188  000B                     	;# 
   189  000C                     	;# 
   190  000D                     	;# 
   191  0011                     	;# 
   192  0012                     	;# 
   193  0013                     	;# 
   194  0014                     	;# 
   195  0015                     	;# 
   196  0016                     	;# 
   197  0016                     	;# 
   198  0017                     	;# 
   199  0018                     	;# 
   200  0019                     	;# 
   201  001A                     	;# 
   202  001B                     	;# 
   203  001C                     	;# 
   204  001E                     	;# 
   205  001F                     	;# 
   206  008C                     	;# 
   207  008D                     	;# 
   208  0091                     	;# 
   209  0092                     	;# 
   210  0093                     	;# 
   211  0094                     	;# 
   212  0095                     	;# 
   213  0096                     	;# 
   214  0097                     	;# 
   215  0098                     	;# 
   216  0099                     	;# 
   217  009A                     	;# 
   218  009B                     	;# 
   219  009B                     	;# 
   220  009C                     	;# 
   221  009D                     	;# 
   222  009E                     	;# 
   223  010C                     	;# 
   224  010D                     	;# 
   225  0111                     	;# 
   226  0112                     	;# 
   227  0113                     	;# 
   228  0114                     	;# 
   229  0115                     	;# 
   230  0116                     	;# 
   231  0117                     	;# 
   232  0118                     	;# 
   233  0119                     	;# 
   234  011A                     	;# 
   235  011B                     	;# 
   236  011D                     	;# 
   237  011E                     	;# 
   238  018C                     	;# 
   239  018D                     	;# 
   240  0191                     	;# 
   241  0191                     	;# 
   242  0192                     	;# 
   243  0193                     	;# 
   244  0193                     	;# 
   245  0193                     	;# 
   246  0194                     	;# 
   247  0195                     	;# 
   248  0196                     	;# 
   249  0199                     	;# 
   250  019A                     	;# 
   251  019B                     	;# 
   252  019B                     	;# 
   253  019B                     	;# 
   254  019B                     	;# 
   255  019C                     	;# 
   256  019C                     	;# 
   257  019D                     	;# 
   258  019E                     	;# 
   259  019F                     	;# 
   260  020C                     	;# 
   261  020D                     	;# 
   262  0211                     	;# 
   263  0211                     	;# 
   264  0212                     	;# 
   265  0212                     	;# 
   266  0213                     	;# 
   267  0213                     	;# 
   268  0214                     	;# 
   269  0214                     	;# 
   270  0215                     	;# 
   271  0215                     	;# 
   272  0215                     	;# 
   273  0216                     	;# 
   274  0216                     	;# 
   275  0217                     	;# 
   276  0217                     	;# 
   277  0219                     	;# 
   278  021A                     	;# 
   279  021B                     	;# 
   280  021C                     	;# 
   281  021D                     	;# 
   282  021E                     	;# 
   283  021F                     	;# 
   284  0291                     	;# 
   285  0291                     	;# 
   286  0292                     	;# 
   287  0293                     	;# 
   288  0294                     	;# 
   289  0295                     	;# 
   290  0295                     	;# 
   291  0296                     	;# 
   292  0298                     	;# 
   293  0298                     	;# 
   294  0299                     	;# 
   295  029A                     	;# 
   296  029B                     	;# 
   297  029C                     	;# 
   298  029C                     	;# 
   299  029D                     	;# 
   300  029E                     	;# 
   301  029E                     	;# 
   302  0311                     	;# 
   303  0311                     	;# 
   304  0312                     	;# 
   305  0313                     	;# 
   306  0318                     	;# 
   307  0318                     	;# 
   308  0319                     	;# 
   309  031A                     	;# 
   310  0394                     	;# 
   311  0395                     	;# 
   312  0396                     	;# 
   313  039A                     	;# 
   314  039C                     	;# 
   315  039D                     	;# 
   316  039E                     	;# 
   317  039F                     	;# 
   318  0415                     	;# 
   319  0416                     	;# 
   320  0417                     	;# 
   321  041C                     	;# 
   322  041D                     	;# 
   323  041E                     	;# 
   324  0FE4                     	;# 
   325  0FE5                     	;# 
   326  0FE6                     	;# 
   327  0FE7                     	;# 
   328  0FE8                     	;# 
   329  0FE9                     	;# 
   330  0FEA                     	;# 
   331  0FEB                     	;# 
   332  0FED                     	;# 
   333  0FEE                     	;# 
   334  0FEF                     	;# 
   335  0000                     	;# 
   336  0001                     	;# 
   337  0002                     	;# 
   338  0003                     	;# 
   339  0004                     	;# 
   340  0005                     	;# 
   341  0006                     	;# 
   342  0007                     	;# 
   343  0008                     	;# 
   344  0009                     	;# 
   345  000A                     	;# 
   346  000B                     	;# 
   347  000C                     	;# 
   348  000D                     	;# 
   349  0011                     	;# 
   350  0012                     	;# 
   351  0013                     	;# 
   352  0014                     	;# 
   353  0015                     	;# 
   354  0016                     	;# 
   355  0016                     	;# 
   356  0017                     	;# 
   357  0018                     	;# 
   358  0019                     	;# 
   359  001A                     	;# 
   360  001B                     	;# 
   361  001C                     	;# 
   362  001E                     	;# 
   363  001F                     	;# 
   364  008C                     	;# 
   365  008D                     	;# 
   366  0091                     	;# 
   367  0092                     	;# 
   368  0093                     	;# 
   369  0094                     	;# 
   370  0095                     	;# 
   371  0096                     	;# 
   372  0097                     	;# 
   373  0098                     	;# 
   374  0099                     	;# 
   375  009A                     	;# 
   376  009B                     	;# 
   377  009B                     	;# 
   378  009C                     	;# 
   379  009D                     	;# 
   380  009E                     	;# 
   381  010C                     	;# 
   382  010D                     	;# 
   383  0111                     	;# 
   384  0112                     	;# 
   385  0113                     	;# 
   386  0114                     	;# 
   387  0115                     	;# 
   388  0116                     	;# 
   389  0117                     	;# 
   390  0118                     	;# 
   391  0119                     	;# 
   392  011A                     	;# 
   393  011B                     	;# 
   394  011D                     	;# 
   395  011E                     	;# 
   396  018C                     	;# 
   397  018D                     	;# 
   398  0191                     	;# 
   399  0191                     	;# 
   400  0192                     	;# 
   401  0193                     	;# 
   402  0193                     	;# 
   403  0193                     	;# 
   404  0194                     	;# 
   405  0195                     	;# 
   406  0196                     	;# 
   407  0199                     	;# 
   408  019A                     	;# 
   409  019B                     	;# 
   410  019B                     	;# 
   411  019B                     	;# 
   412  019B                     	;# 
   413  019C                     	;# 
   414  019C                     	;# 
   415  019D                     	;# 
   416  019E                     	;# 
   417  019F                     	;# 
   418  020C                     	;# 
   419  020D                     	;# 
   420  0211                     	;# 
   421  0211                     	;# 
   422  0212                     	;# 
   423  0212                     	;# 
   424  0213                     	;# 
   425  0213                     	;# 
   426  0214                     	;# 
   427  0214                     	;# 
   428  0215                     	;# 
   429  0215                     	;# 
   430  0215                     	;# 
   431  0216                     	;# 
   432  0216                     	;# 
   433  0217                     	;# 
   434  0217                     	;# 
   435  0219                     	;# 
   436  021A                     	;# 
   437  021B                     	;# 
   438  021C                     	;# 
   439  021D                     	;# 
   440  021E                     	;# 
   441  021F                     	;# 
   442  0291                     	;# 
   443  0291                     	;# 
   444  0292                     	;# 
   445  0293                     	;# 
   446  0294                     	;# 
   447  0295                     	;# 
   448  0295                     	;# 
   449  0296                     	;# 
   450  0298                     	;# 
   451  0298                     	;# 
   452  0299                     	;# 
   453  029A                     	;# 
   454  029B                     	;# 
   455  029C                     	;# 
   456  029C                     	;# 
   457  029D                     	;# 
   458  029E                     	;# 
   459  029E                     	;# 
   460  0311                     	;# 
   461  0311                     	;# 
   462  0312                     	;# 
   463  0313                     	;# 
   464  0318                     	;# 
   465  0318                     	;# 
   466  0319                     	;# 
   467  031A                     	;# 
   468  0394                     	;# 
   469  0395                     	;# 
   470  0396                     	;# 
   471  039A                     	;# 
   472  039C                     	;# 
   473  039D                     	;# 
   474  039E                     	;# 
   475  039F                     	;# 
   476  0415                     	;# 
   477  0416                     	;# 
   478  0417                     	;# 
   479  041C                     	;# 
   480  041D                     	;# 
   481  041E                     	;# 
   482  0FE4                     	;# 
   483  0FE5                     	;# 
   484  0FE6                     	;# 
   485  0FE7                     	;# 
   486  0FE8                     	;# 
   487  0FE9                     	;# 
   488  0FEA                     	;# 
   489  0FEB                     	;# 
   490  0FED                     	;# 
   491  0FEE                     	;# 
   492  0FEF                     	;# 
   493  000C                     _PORTA	set	12
   494  000D                     _PORTB	set	13
   495  005F                     _GIE	set	95
   496  005B                     _IOCIE	set	91
   497  0058                     _IOCIF	set	88
   498  005E                     _PEIE	set	94
   499  0060                     _RA0	set	96
   500  0061                     _RA1	set	97
   501  0062                     _RA2	set	98
   502  0063                     _RA3	set	99
   503  0064                     _RA4	set	100
   504  0067                     _RA7	set	103
   505  0068                     _RB0	set	104
   506  006B                     _RB3	set	107
   507  006E                     _RB6	set	110
   508  006F                     _RB7	set	111
   509  008B                     _SSP1IF	set	139
   510  00A0                     _SSP2IF	set	160
   511  0095                     _OPTION_REG	set	149
   512  0099                     _OSCCON	set	153
   513  008C                     _TRISA	set	140
   514  008D                     _TRISB	set	141
   515  048B                     _SSP1IE	set	1163
   516  04A0                     _SSP2IE	set	1184
   517  08EE                     _SDO1SEL	set	2286
   518  08ED                     _SS1SEL	set	2285
   519  018C                     _ANSELA	set	396
   520  018D                     _ANSELB	set	397
   521  0211                     _SSP1BUF	set	529
   522  0215                     _SSP1CON1	set	533
   523  0214                     _SSP1STAT	set	532
   524  0214                     _SSP1STATbits	set	532
   525  0219                     _SSP2BUF	set	537
   526  021D                     _SSP2CON1	set	541
   527  021C                     _SSP2STAT	set	540
   528  021C                     _SSP2STATbits	set	540
   529  020D                     _WPUB	set	525
   530  0396                     _IOCBF	set	918
   531  0396                     _IOCBFbits	set	918
   532  0395                     _IOCBN	set	917
   533  0394                     _IOCBP	set	916
   534                           
   535                           	psect	text0
   536  0000                     __ptext0:	
   537                           ; #config settings
   538                           
   539                           
   540                           ;psect for function _master_send
   541  0000                     
   542                           	psect	cinit
   543  007A                     start_initialization:	
   544  007A                     __initialization:	
   545                           
   546                           ; Clear objects allocated to COMMON
   547  007A  01F7               	clrf	__pbssCOMMON& (0+127)
   548  007B  01F8               	clrf	(__pbssCOMMON+1)& (0+127)
   549  007C  01F9               	clrf	(__pbssCOMMON+2)& (0+127)
   550  007D                     end_of_initialization:	
   551                           ;End of C runtime variable initialization code
   552                           
   553  007D                     __end_of__initialization:	
   554  007D  0020               	movlb	0
   555  007E  3181  2942         	ljmp	_main	;jump to C main() function
   556                           
   557                           	psect	bssCOMMON
   558  0077                     __pbssCOMMON:	
   559  0077                     _turn_flag:	
   560  0077                     	ds	2
   561  0079                     _r_data:	
   562  0079                     	ds	1
   563                           
   564                           	psect	cstackCOMMON
   565  0070                     __pcstackCOMMON:	
   566  0070                     ?_master_send:	
   567  0070                     ?_shot:	
   568                           ; 0 bytes @ 0x0
   569                           
   570  0070                     ?_pic_reg:	
   571                           ; 0 bytes @ 0x0
   572                           
   573  0070                     ?_slave_reg:	
   574                           ; 0 bytes @ 0x0
   575                           
   576  0070                     ?_master_reg:	
   577                           ; 0 bytes @ 0x0
   578                           
   579  0070                     ?_inter:	
   580                           ; 0 bytes @ 0x0
   581                           
   582  0070                     ?_main:	
   583                           ; 0 bytes @ 0x0
   584                           
   585  0070                     ?i1_shot:	
   586                           ; 0 bytes @ 0x0
   587                           
   588  0070                     ??i1_shot:	
   589                           ; 0 bytes @ 0x0
   590                           
   591  0070                     ?_slave_read:	
   592                           ; 0 bytes @ 0x0
   593                           
   594  0070                     master_send@obj:	
   595                           ; 2 bytes @ 0x0
   596                           
   597                           
   598                           ; 2 bytes @ 0x0
   599  0070                     	ds	2
   600  0072                     ??_slave_read:	
   601  0072                     master_send@s_data:	
   602                           ; 0 bytes @ 0x2
   603                           
   604                           
   605                           ; 1 bytes @ 0x2
   606  0072                     	ds	1
   607  0073                     ??_master_send:	
   608  0073                     ??_inter:	
   609                           ; 0 bytes @ 0x3
   610                           
   611                           
   612                           ; 0 bytes @ 0x3
   613  0073                     	ds	4
   614                           
   615                           	psect	cstackBANK0
   616  0000                     __pcstackBANK0:	
   617  0000                     ??_shot:	
   618  0000                     ??_pic_reg:	
   619                           ; 0 bytes @ 0x0
   620                           
   621  0000                     ??_slave_reg:	
   622                           ; 0 bytes @ 0x0
   623                           
   624  0000                     ??_master_reg:	
   625                           ; 0 bytes @ 0x0
   626                           
   627  0000                     ??_main:	
   628                           ; 0 bytes @ 0x0
   629                           
   630                           
   631                           	psect	maintext
   632  0142                     __pmaintext:	
   633                           ; 0 bytes @ 0x0
   634 ;;
   635 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   636 ;;
   637 ;; *************** function _main *****************
   638 ;; Defined at:
   639 ;;		line 85 in file "main.c"
   640 ;; Parameters:    Size  Location     Type
   641 ;;		None
   642 ;; Auto vars:     Size  Location     Type
   643 ;;		None
   644 ;; Return value:  Size  Location     Type
   645 ;;		None               void
   646 ;; Registers used:
   647 ;;		wreg, status,2, status,0, pclath, cstack
   648 ;; Tracked objects:
   649 ;;		On entry : B1F/0
   650 ;;		On exit  : 0/0
   651 ;;		Unchanged: 0/0
   652 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
   653 ;;      Params:         0       0       0       0       0       0
   654 ;;      Locals:         0       0       0       0       0       0
   655 ;;      Temps:          0       0       0       0       0       0
   656 ;;      Totals:         0       0       0       0       0       0
   657 ;;Total ram usage:        0 bytes
   658 ;; Hardware stack levels required when called:    3
   659 ;; This function calls:
   660 ;;		_master_reg
   661 ;;		_pic_reg
   662 ;;		_shot
   663 ;;		_slave_reg
   664 ;; This function is called by:
   665 ;;		Startup code after reset
   666 ;; This function uses a non-reentrant model
   667 ;;
   668                           
   669                           
   670                           ;psect for function _main
   671  0142                     _main:	
   672                           
   673                           ;main.c: 88: pic_reg();
   674                           
   675                           ;incstack = 0
   676                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   677  0142  3181  2115  3181   	fcall	_pic_reg
   678                           
   679                           ;main.c: 89: slave_reg();
   680  0145  3181  2156  3181   	fcall	_slave_reg
   681                           
   682                           ;main.c: 90: master_reg();
   683  0148  3181  216B  3181   	fcall	_master_reg
   684                           
   685                           ;main.c: 92: PEIE = 1;
   686  014B  170B               	bsf	11,6	;volatile
   687                           
   688                           ;main.c: 93: GIE = 1;
   689  014C  178B               	bsf	11,7	;volatile
   690  014D                     l1036:	
   691                           ;main.c: 95: while(1){
   692                           
   693                           
   694                           ;main.c: 97: if(RA3 == 0){
   695  014D  0020               	movlb	0	; select bank0
   696  014E  198C               	btfsc	12,3	;volatile
   697  014F  294D               	goto	l1036
   698                           
   699                           ;main.c: 99: SSP1IE = 0;
   700  0150  0021               	movlb	1	; select bank1
   701  0151  1191               	bcf	17,3	;volatile
   702                           
   703                           ;main.c: 100: shot();
   704  0152  3181  2162  3181   	fcall	_shot
   705  0155  294D               	goto	l1036
   706  0156                     __end_of_main:	
   707                           
   708                           	psect	text1
   709  0156                     __ptext1:	
   710 ;; *************** function _slave_reg *****************
   711 ;; Defined at:
   712 ;;		line 15 in file "spi.c"
   713 ;; Parameters:    Size  Location     Type
   714 ;;		None
   715 ;; Auto vars:     Size  Location     Type
   716 ;;		None
   717 ;; Return value:  Size  Location     Type
   718 ;;		None               void
   719 ;; Registers used:
   720 ;;		wreg, status,2
   721 ;; Tracked objects:
   722 ;;		On entry : 0/0
   723 ;;		On exit  : 0/0
   724 ;;		Unchanged: 0/0
   725 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
   726 ;;      Params:         0       0       0       0       0       0
   727 ;;      Locals:         0       0       0       0       0       0
   728 ;;      Temps:          0       0       0       0       0       0
   729 ;;      Totals:         0       0       0       0       0       0
   730 ;;Total ram usage:        0 bytes
   731 ;; Hardware stack levels used:    1
   732 ;; Hardware stack levels required when called:    2
   733 ;; This function calls:
   734 ;;		Nothing
   735 ;; This function is called by:
   736 ;;		_main
   737 ;; This function uses a non-reentrant model
   738 ;;
   739                           
   740                           
   741                           ;psect for function _slave_reg
   742  0156                     _slave_reg:	
   743                           
   744                           ;spi.c: 26: SSP1CON1 = 0b00100100;
   745                           
   746                           ;incstack = 0
   747                           ; Regs used in _slave_reg: [wreg+status,2]
   748  0156  3024               	movlw	36
   749  0157  0024               	movlb	4	; select bank4
   750  0158  0095               	movwf	21	;volatile
   751                           
   752                           ;spi.c: 27: SSP1STAT = 0b00000000;
   753  0159  0194               	clrf	20	;volatile
   754                           
   755                           ;spi.c: 28: SDO1SEL = 1;
   756  015A  0022               	movlb	2	; select bank2
   757  015B  171D               	bsf	29,6	;volatile
   758                           
   759                           ;spi.c: 29: SS1SEL = 1;
   760  015C  169D               	bsf	29,5	;volatile
   761                           
   762                           ;spi.c: 32: SSP1IF = 0;
   763  015D  0020               	movlb	0	; select bank0
   764  015E  1191               	bcf	17,3	;volatile
   765                           
   766                           ;spi.c: 33: SSP1IE = 1;
   767  015F  0021               	movlb	1	; select bank1
   768  0160  1591               	bsf	17,3	;volatile
   769  0161  0008               	return
   770  0162                     __end_of_slave_reg:	
   771                           
   772                           	psect	text2
   773  0162                     __ptext2:	
   774 ;; *************** function _shot *****************
   775 ;; Defined at:
   776 ;;		line 106 in file "main.c"
   777 ;; Parameters:    Size  Location     Type
   778 ;;		None
   779 ;; Auto vars:     Size  Location     Type
   780 ;;		None
   781 ;; Return value:  Size  Location     Type
   782 ;;		None               void
   783 ;; Registers used:
   784 ;;		wreg, status,2
   785 ;; Tracked objects:
   786 ;;		On entry : 0/0
   787 ;;		On exit  : 0/0
   788 ;;		Unchanged: 0/0
   789 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
   790 ;;      Params:         0       0       0       0       0       0
   791 ;;      Locals:         0       0       0       0       0       0
   792 ;;      Temps:          0       0       0       0       0       0
   793 ;;      Totals:         0       0       0       0       0       0
   794 ;;Total ram usage:        0 bytes
   795 ;; Hardware stack levels used:    1
   796 ;; Hardware stack levels required when called:    2
   797 ;; This function calls:
   798 ;;		Nothing
   799 ;; This function is called by:
   800 ;;		_main
   801 ;; This function uses a non-reentrant model
   802 ;;
   803                           
   804                           
   805                           ;psect for function _shot
   806  0162                     _shot:	
   807                           
   808                           ;main.c: 108: RB0 = 1;
   809                           
   810                           ;incstack = 0
   811                           ; Regs used in _shot: [wreg+status,2]
   812  0162  0020               	movlb	0	; select bank0
   813  0163  140D               	bsf	13,0	;volatile
   814                           
   815                           ;main.c: 110: IOCBF = 0;
   816  0164  0027               	movlb	7	; select bank7
   817  0165  0196               	clrf	22	;volatile
   818                           
   819                           ;main.c: 111: IOCIF = 0;
   820  0166  100B               	bcf	11,0	;volatile
   821                           
   822                           ;main.c: 112: IOCBN = 0x80;
   823  0167  3080               	movlw	128
   824  0168  0095               	movwf	21	;volatile
   825                           
   826                           ;main.c: 113: IOCIE = 1;
   827  0169  158B               	bsf	11,3	;volatile
   828  016A  0008               	return
   829  016B                     __end_of_shot:	
   830                           
   831                           	psect	text3
   832  0115                     __ptext3:	
   833 ;; *************** function _pic_reg *****************
   834 ;; Defined at:
   835 ;;		line 3 in file "pic16f1827_config.c"
   836 ;; Parameters:    Size  Location     Type
   837 ;;		None
   838 ;; Auto vars:     Size  Location     Type
   839 ;;		None
   840 ;; Return value:  Size  Location     Type
   841 ;;		None               void
   842 ;; Registers used:
   843 ;;		wreg, status,2
   844 ;; Tracked objects:
   845 ;;		On entry : 0/0
   846 ;;		On exit  : 0/0
   847 ;;		Unchanged: 0/0
   848 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
   849 ;;      Params:         0       0       0       0       0       0
   850 ;;      Locals:         0       0       0       0       0       0
   851 ;;      Temps:          0       0       0       0       0       0
   852 ;;      Totals:         0       0       0       0       0       0
   853 ;;Total ram usage:        0 bytes
   854 ;; Hardware stack levels used:    1
   855 ;; Hardware stack levels required when called:    2
   856 ;; This function calls:
   857 ;;		Nothing
   858 ;; This function is called by:
   859 ;;		_main
   860 ;; This function uses a non-reentrant model
   861 ;;
   862                           
   863                           
   864                           ;psect for function _pic_reg
   865  0115                     _pic_reg:	
   866                           
   867                           ;pic16f1827_config.c: 6: OSCCON = 0x62;
   868                           
   869                           ;incstack = 0
   870                           ; Regs used in _pic_reg: [wreg+status,2]
   871  0115  3062               	movlw	98
   872  0116  0021               	movlb	1	; select bank1
   873  0117  0099               	movwf	25	;volatile
   874                           
   875                           ;pic16f1827_config.c: 7: TRISA = 0x28;
   876  0118  3028               	movlw	40
   877  0119  008C               	movwf	12	;volatile
   878                           
   879                           ;pic16f1827_config.c: 8: TRISB = 0xD6;
   880  011A  30D6               	movlw	214
   881  011B  008D               	movwf	13	;volatile
   882                           
   883                           ;pic16f1827_config.c: 9: PORTA = 0x02;
   884  011C  3002               	movlw	2
   885  011D  0020               	movlb	0	; select bank0
   886  011E  008C               	movwf	12	;volatile
   887                           
   888                           ;pic16f1827_config.c: 10: PORTB = 0x00;
   889  011F  018D               	clrf	13	;volatile
   890                           
   891                           ;pic16f1827_config.c: 11: ANSELA = 0x00;
   892  0120  0023               	movlb	3	; select bank3
   893  0121  018C               	clrf	12	;volatile
   894                           
   895                           ;pic16f1827_config.c: 12: ANSELB = 0x00;
   896  0122  018D               	clrf	13	;volatile
   897                           
   898                           ;pic16f1827_config.c: 14: OPTION_REG = 0b00000000;
   899  0123  0021               	movlb	1	; select bank1
   900  0124  0195               	clrf	21	;volatile
   901                           
   902                           ;pic16f1827_config.c: 15: WPUB = 0xC0;
   903  0125  30C0               	movlw	192
   904  0126  0024               	movlb	4	; select bank4
   905  0127  008D               	movwf	13	;volatile
   906                           
   907                           ;pic16f1827_config.c: 19: IOCBF = 0;
   908  0128  0027               	movlb	7	; select bank7
   909  0129  0196               	clrf	22	;volatile
   910                           
   911                           ;pic16f1827_config.c: 20: IOCIF = 0;
   912  012A  100B               	bcf	11,0	;volatile
   913                           
   914                           ;pic16f1827_config.c: 21: IOCIE = 0;
   915  012B  118B               	bcf	11,3	;volatile
   916  012C  0008               	return
   917  012D                     __end_of_pic_reg:	
   918                           
   919                           	psect	text4
   920  016B                     __ptext4:	
   921 ;; *************** function _master_reg *****************
   922 ;; Defined at:
   923 ;;		line 65 in file "spi.c"
   924 ;; Parameters:    Size  Location     Type
   925 ;;		None
   926 ;; Auto vars:     Size  Location     Type
   927 ;;		None
   928 ;; Return value:  Size  Location     Type
   929 ;;		None               void
   930 ;; Registers used:
   931 ;;		wreg, status,2
   932 ;; Tracked objects:
   933 ;;		On entry : 0/0
   934 ;;		On exit  : 0/0
   935 ;;		Unchanged: 0/0
   936 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
   937 ;;      Params:         0       0       0       0       0       0
   938 ;;      Locals:         0       0       0       0       0       0
   939 ;;      Temps:          0       0       0       0       0       0
   940 ;;      Totals:         0       0       0       0       0       0
   941 ;;Total ram usage:        0 bytes
   942 ;; Hardware stack levels used:    1
   943 ;; Hardware stack levels required when called:    2
   944 ;; This function calls:
   945 ;;		Nothing
   946 ;; This function is called by:
   947 ;;		_main
   948 ;; This function uses a non-reentrant model
   949 ;;
   950                           
   951                           
   952                           ;psect for function _master_reg
   953  016B                     _master_reg:	
   954                           
   955                           ;spi.c: 76: SSP2CON1 = 0b00100000;
   956                           
   957                           ;incstack = 0
   958                           ; Regs used in _master_reg: [wreg+status,2]
   959  016B  3020               	movlw	32
   960  016C  0024               	movlb	4	; select bank4
   961  016D  009D               	movwf	29	;volatile
   962                           
   963                           ;spi.c: 77: SSP2STAT = 0b00000000;
   964  016E  019C               	clrf	28	;volatile
   965                           
   966                           ;spi.c: 80: SSP2IF = 0;
   967  016F  0020               	movlb	0	; select bank0
   968  0170  1014               	bcf	20,0	;volatile
   969                           
   970                           ;spi.c: 81: SSP2IE = 1;
   971  0171  0021               	movlb	1	; select bank1
   972  0172  1414               	bsf	20,0	;volatile
   973  0173  0008               	return
   974  0174                     __end_of_master_reg:	
   975                           
   976                           	psect	intentry
   977  0004                     __pintentry:	
   978 ;; *************** function _inter *****************
   979 ;; Defined at:
   980 ;;		line 17 in file "main.c"
   981 ;; Parameters:    Size  Location     Type
   982 ;;		None
   983 ;; Auto vars:     Size  Location     Type
   984 ;;		None
   985 ;; Return value:  Size  Location     Type
   986 ;;		None               void
   987 ;; Registers used:
   988 ;;		wreg, status,2, status,0, pclath, cstack
   989 ;; Tracked objects:
   990 ;;		On entry : 0/0
   991 ;;		On exit  : 0/0
   992 ;;		Unchanged: 0/0
   993 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
   994 ;;      Params:         0       0       0       0       0       0
   995 ;;      Locals:         0       0       0       0       0       0
   996 ;;      Temps:          4       0       0       0       0       0
   997 ;;      Totals:         4       0       0       0       0       0
   998 ;;Total ram usage:        4 bytes
   999 ;; Hardware stack levels used:    1
  1000 ;; Hardware stack levels required when called:    1
  1001 ;; This function calls:
  1002 ;;		_master_send
  1003 ;;		_slave_read
  1004 ;;		i1_shot
  1005 ;; This function is called by:
  1006 ;;		Interrupt level 1
  1007 ;; This function uses a non-reentrant model
  1008 ;;
  1009                           
  1010  0004                     _inter:	
  1011                           
  1012                           ;incstack = 0
  1013                           ; Regs used in _inter: [wreg+status,2+status,0+pclath+cstack]
  1014  0004  3180               	pagesel	$
  1015  0005  0020               	movlb	0	; select bank0
  1016  0006  087F               	movf	127,w
  1017  0007  00F6               	movwf	??_inter+3
  1018                           
  1019                           ;main.c: 20: if(slave_read() == 0){
  1020  0008  3181  212D  3180   	fcall	_slave_read
  1021  000B  0870               	movf	?_slave_read,w
  1022  000C  0471               	iorwf	?_slave_read+1,w
  1023  000D  1D03               	btfss	3,2
  1024  000E  2828               	goto	i1l47
  1025                           
  1026                           ;main.c: 21: if(r_data == 0x02){
  1027  000F  3002               	movlw	2
  1028  0010  0679               	xorwf	_r_data,w
  1029  0011  1D03               	btfss	3,2
  1030  0012  2827               	goto	i1l48
  1031                           
  1032                           ;main.c: 23: SSP1IE = 0;
  1033  0013  0021               	movlb	1	; select bank1
  1034  0014  1191               	bcf	17,3	;volatile
  1035                           
  1036                           ;main.c: 25: master_send(1,0xFF);
  1037  0015  3001               	movlw	1
  1038  0016  00F0               	movwf	master_send@obj
  1039  0017  3000               	movlw	0
  1040  0018  00F1               	movwf	master_send@obj+1
  1041  0019  30FF               	movlw	255
  1042  001A  00F3               	movwf	??_inter
  1043  001B  0873               	movf	??_inter,w
  1044  001C  00F2               	movwf	master_send@s_data
  1045  001D  3180  2080  3180   	fcall	_master_send
  1046                           
  1047                           ;main.c: 27: IOCBF = 0;
  1048  0020  0027               	movlb	7	; select bank7
  1049  0021  0196               	clrf	22	;volatile
  1050                           
  1051                           ;main.c: 28: IOCIF = 0;
  1052  0022  100B               	bcf	11,0	;volatile
  1053                           
  1054                           ;main.c: 29: IOCBP = 0x40;
  1055  0023  3040               	movlw	64
  1056  0024  0094               	movwf	20	;volatile
  1057                           
  1058                           ;main.c: 30: IOCIE = 1;
  1059  0025  158B               	bsf	11,3	;volatile
  1060                           
  1061                           ;main.c: 32: }else{
  1062  0026  2828               	goto	i1l47
  1063  0027                     i1l48:	
  1064                           
  1065                           ;main.c: 34: __nop();
  1066  0027  0000               	nop
  1067  0028                     i1l47:	
  1068                           
  1069                           ;main.c: 36: }
  1070                           ;main.c: 37: }
  1071                           ;main.c: 39: if(IOCIF == 1){
  1072  0028  1C0B               	btfss	11,0	;volatile
  1073  0029  2874               	goto	i1l56
  1074                           
  1075                           ;main.c: 41: if(IOCBFbits.IOCBF7 == 1){
  1076  002A  0027               	movlb	7	; select bank7
  1077  002B  1F96               	btfss	22,7	;volatile
  1078  002C  2838               	goto	i1l960
  1079                           
  1080                           ;main.c: 42: RB0 = 0;
  1081  002D  0020               	movlb	0	; select bank0
  1082  002E  100D               	bcf	13,0	;volatile
  1083                           
  1084                           ;main.c: 44: IOCBF = 0;
  1085  002F  0027               	movlb	7	; select bank7
  1086  0030  0196               	clrf	22	;volatile
  1087                           
  1088                           ;main.c: 45: IOCIF = 0;
  1089  0031  100B               	bcf	11,0	;volatile
  1090                           
  1091                           ;main.c: 46: IOCBN = 0x00;
  1092  0032  0195               	clrf	21	;volatile
  1093                           
  1094                           ;main.c: 47: IOCIE = 0;
  1095  0033  118B               	bcf	11,3	;volatile
  1096                           
  1097                           ;main.c: 49: SSP1IF = 0;
  1098  0034  0020               	movlb	0	; select bank0
  1099  0035  1191               	bcf	17,3	;volatile
  1100                           
  1101                           ;main.c: 50: SSP1IE = 1;
  1102  0036  0021               	movlb	1	; select bank1
  1103  0037  1591               	bsf	17,3	;volatile
  1104  0038                     i1l960:	
  1105                           
  1106                           ;main.c: 52: }
  1107                           ;main.c: 55: if(IOCBFbits.IOCBF6 == 1){
  1108  0038  0027               	movlb	7	; select bank7
  1109  0039  1F16               	btfss	22,6	;volatile
  1110  003A  2874               	goto	i1l56
  1111                           
  1112                           ;main.c: 57: master_send(1,0x00);
  1113  003B  3001               	movlw	1
  1114  003C  00F0               	movwf	master_send@obj
  1115  003D  3000               	movlw	0
  1116  003E  00F1               	movwf	master_send@obj+1
  1117  003F  01F2               	clrf	master_send@s_data
  1118  0040  3180  2080  3180   	fcall	_master_send
  1119                           
  1120                           ;main.c: 59: if(turn_flag == 0){
  1121  0043  0877               	movf	_turn_flag,w
  1122  0044  0478               	iorwf	_turn_flag+1,w
  1123  0045  1D03               	btfss	3,2
  1124  0046  2867               	goto	i1l974
  1125                           
  1126                           ;main.c: 60: turn_flag = 1;
  1127  0047  3001               	movlw	1
  1128  0048  00F7               	movwf	_turn_flag
  1129  0049  3000               	movlw	0
  1130  004A  00F8               	movwf	_turn_flag+1
  1131                           
  1132                           ;main.c: 62: _delay((unsigned long)((1000)*(2000000/4000.0)));
  1133  004B  3003               	movlw	3
  1134  004C  00F5               	movwf	??_inter+2
  1135  004D  308A               	movlw	138
  1136  004E  00F4               	movwf	??_inter+1
  1137  004F  3056               	movlw	86
  1138  0050  00F3               	movwf	??_inter
  1139  0051                     u61_27:	
  1140  0051  0BF3               	decfsz	??_inter,f
  1141  0052  2851               	goto	u61_27
  1142  0053  0BF4               	decfsz	??_inter+1,f
  1143  0054  2851               	goto	u61_27
  1144  0055  0BF5               	decfsz	??_inter+2,f
  1145  0056  2851               	goto	u61_27
  1146  0057  3200               	nop2
  1147                           
  1148                           ;main.c: 63: master_send(1,0x7F);
  1149  0058  3001               	movlw	1
  1150  0059  00F0               	movwf	master_send@obj
  1151  005A  3000               	movlw	0
  1152  005B  00F1               	movwf	master_send@obj+1
  1153  005C  307F               	movlw	127
  1154  005D  00F3               	movwf	??_inter
  1155  005E  0873               	movf	??_inter,w
  1156  005F  00F2               	movwf	master_send@s_data
  1157  0060  3180  2080  3180   	fcall	_master_send
  1158                           
  1159                           ;main.c: 65: IOCBF = 0;
  1160  0063  0027               	movlb	7	; select bank7
  1161  0064  0196               	clrf	22	;volatile
  1162                           
  1163                           ;main.c: 66: IOCIF = 0;
  1164  0065  100B               	bcf	11,0	;volatile
  1165                           
  1166                           ;main.c: 68: }else if(turn_flag == 1){
  1167  0066  2874               	goto	i1l56
  1168  0067                     i1l974:	
  1169  0067  0377               	decf	_turn_flag,w
  1170  0068  0478               	iorwf	_turn_flag+1,w
  1171  0069  1D03               	btfss	3,2
  1172  006A  2874               	goto	i1l56
  1173                           
  1174                           ;main.c: 69: turn_flag = 0;
  1175  006B  01F7               	clrf	_turn_flag
  1176  006C  01F8               	clrf	_turn_flag+1
  1177                           
  1178                           ;main.c: 71: IOCBF = 0;
  1179  006D  0027               	movlb	7	; select bank7
  1180  006E  0196               	clrf	22	;volatile
  1181                           
  1182                           ;main.c: 72: IOCIF = 0;
  1183  006F  100B               	bcf	11,0	;volatile
  1184                           
  1185                           ;main.c: 73: IOCBP = 0x00;
  1186  0070  0194               	clrf	20	;volatile
  1187                           
  1188                           ;main.c: 74: IOCIE = 0;
  1189  0071  118B               	bcf	11,3	;volatile
  1190                           
  1191                           ;main.c: 76: shot();
  1192  0072  3181  2174         	fcall	i1_shot
  1193  0074                     i1l56:	
  1194  0074  0876               	movf	??_inter+3,w
  1195  0075  0020               	movlb	0	; select bank0
  1196  0076  00FF               	movwf	127
  1197  0077  0009               	retfie
  1198  0078                     __end_of_inter:	
  1199                           
  1200                           	psect	text6
  1201  0174                     __ptext6:	
  1202 ;; *************** function i1_shot *****************
  1203 ;; Defined at:
  1204 ;;		line 106 in file "main.c"
  1205 ;; Parameters:    Size  Location     Type
  1206 ;;		None
  1207 ;; Auto vars:     Size  Location     Type
  1208 ;;		None
  1209 ;; Return value:  Size  Location     Type
  1210 ;;		None               void
  1211 ;; Registers used:
  1212 ;;		wreg, status,2
  1213 ;; Tracked objects:
  1214 ;;		On entry : 0/0
  1215 ;;		On exit  : 0/0
  1216 ;;		Unchanged: 0/0
  1217 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1218 ;;      Params:         0       0       0       0       0       0
  1219 ;;      Locals:         0       0       0       0       0       0
  1220 ;;      Temps:          0       0       0       0       0       0
  1221 ;;      Totals:         0       0       0       0       0       0
  1222 ;;Total ram usage:        0 bytes
  1223 ;; Hardware stack levels used:    1
  1224 ;; This function calls:
  1225 ;;		Nothing
  1226 ;; This function is called by:
  1227 ;;		_inter
  1228 ;; This function uses a non-reentrant model
  1229 ;;
  1230                           
  1231                           
  1232                           ;psect for function i1_shot
  1233  0174                     i1_shot:	
  1234                           
  1235                           ;main.c: 108: RB0 = 1;
  1236                           
  1237                           ;incstack = 0
  1238                           ; Regs used in i1_shot: [wreg+status,2]
  1239  0174  0020               	movlb	0	; select bank0
  1240  0175  140D               	bsf	13,0	;volatile
  1241                           
  1242                           ;main.c: 110: IOCBF = 0;
  1243  0176  0027               	movlb	7	; select bank7
  1244  0177  0196               	clrf	22	;volatile
  1245                           
  1246                           ;main.c: 111: IOCIF = 0;
  1247  0178  100B               	bcf	11,0	;volatile
  1248                           
  1249                           ;main.c: 112: IOCBN = 0x80;
  1250  0179  3080               	movlw	128
  1251  017A  0095               	movwf	21	;volatile
  1252                           
  1253                           ;main.c: 113: IOCIE = 1;
  1254  017B  158B               	bsf	11,3	;volatile
  1255  017C  0008               	return
  1256  017D                     __end_ofi1_shot:	
  1257                           
  1258                           	psect	text7
  1259  012D                     __ptext7:	
  1260 ;; *************** function _slave_read *****************
  1261 ;; Defined at:
  1262 ;;		line 42 in file "spi.c"
  1263 ;; Parameters:    Size  Location     Type
  1264 ;;		None
  1265 ;; Auto vars:     Size  Location     Type
  1266 ;;		None
  1267 ;; Return value:  Size  Location     Type
  1268 ;;                  2    0[COMMON] int 
  1269 ;; Registers used:
  1270 ;;		wreg, status,2
  1271 ;; Tracked objects:
  1272 ;;		On entry : 0/0
  1273 ;;		On exit  : 0/0
  1274 ;;		Unchanged: 0/0
  1275 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1276 ;;      Params:         2       0       0       0       0       0
  1277 ;;      Locals:         0       0       0       0       0       0
  1278 ;;      Temps:          1       0       0       0       0       0
  1279 ;;      Totals:         3       0       0       0       0       0
  1280 ;;Total ram usage:        3 bytes
  1281 ;; Hardware stack levels used:    1
  1282 ;; This function calls:
  1283 ;;		Nothing
  1284 ;; This function is called by:
  1285 ;;		_inter
  1286 ;; This function uses a non-reentrant model
  1287 ;;
  1288                           
  1289                           
  1290                           ;psect for function _slave_read
  1291  012D                     _slave_read:	
  1292                           
  1293                           ;spi.c: 45: if((SSP1IF == 1) && (SSP1STATbits.BF != 0)){
  1294                           
  1295                           ;incstack = 0
  1296                           ; Regs used in _slave_read: [wreg+status,2]
  1297  012D  0020               	movlb	0	; select bank0
  1298  012E  1D91               	btfss	17,3	;volatile
  1299  012F  293D               	goto	i1l866
  1300  0130  0024               	movlb	4	; select bank4
  1301  0131  1C14               	btfss	20,0	;volatile
  1302  0132  293D               	goto	i1l866
  1303                           
  1304                           ;spi.c: 46: SSP1IF = 0;
  1305  0133  0020               	movlb	0	; select bank0
  1306  0134  1191               	bcf	17,3	;volatile
  1307                           
  1308                           ;spi.c: 47: r_data = SSP1BUF;
  1309  0135  0024               	movlb	4	; select bank4
  1310  0136  0811               	movf	17,w	;volatile
  1311  0137  00F2               	movwf	??_slave_read
  1312  0138  0872               	movf	??_slave_read,w
  1313  0139  00F9               	movwf	_r_data
  1314                           
  1315                           ;spi.c: 49: return 0;
  1316  013A  01F0               	clrf	?_slave_read
  1317  013B  01F1               	clrf	?_slave_read+1
  1318  013C  0008               	return
  1319  013D                     i1l866:	
  1320                           
  1321                           ;spi.c: 50: }
  1322                           ;spi.c: 52: return 1;
  1323  013D  3001               	movlw	1
  1324  013E  00F0               	movwf	?_slave_read
  1325  013F  3000               	movlw	0
  1326  0140  00F1               	movwf	?_slave_read+1
  1327  0141  0008               	return
  1328  0142                     __end_of_slave_read:	
  1329                           
  1330                           	psect	text8
  1331  0080                     __ptext8:	
  1332 ;; *************** function _master_send *****************
  1333 ;; Defined at:
  1334 ;;		line 91 in file "spi.c"
  1335 ;; Parameters:    Size  Location     Type
  1336 ;;  obj             2    0[COMMON] int 
  1337 ;;  s_data          1    2[COMMON] unsigned char 
  1338 ;; Auto vars:     Size  Location     Type
  1339 ;;		None
  1340 ;; Return value:  Size  Location     Type
  1341 ;;		None               void
  1342 ;; Registers used:
  1343 ;;		wreg, status,2, status,0
  1344 ;; Tracked objects:
  1345 ;;		On entry : 0/0
  1346 ;;		On exit  : 0/0
  1347 ;;		Unchanged: 0/0
  1348 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1349 ;;      Params:         3       0       0       0       0       0
  1350 ;;      Locals:         0       0       0       0       0       0
  1351 ;;      Temps:          0       0       0       0       0       0
  1352 ;;      Totals:         3       0       0       0       0       0
  1353 ;;Total ram usage:        3 bytes
  1354 ;; Hardware stack levels used:    1
  1355 ;; This function calls:
  1356 ;;		Nothing
  1357 ;; This function is called by:
  1358 ;;		_inter
  1359 ;; This function uses a non-reentrant model
  1360 ;;
  1361                           
  1362                           
  1363                           ;psect for function _master_send
  1364  0080                     _master_send:	
  1365                           
  1366                           ;spi.c: 93: if(obj == 0){
  1367                           
  1368                           ;incstack = 0
  1369                           ; Regs used in _master_send: [wreg+status,2+status,0]
  1370  0080  0870               	movf	master_send@obj,w
  1371  0081  0471               	iorwf	master_send@obj+1,w
  1372  0082  1D03               	btfss	3,2
  1373  0083  288E               	goto	i1l876
  1374                           
  1375                           ;spi.c: 94: RA0 = 0;
  1376  0084  0020               	movlb	0	; select bank0
  1377  0085  100C               	bcf	12,0	;volatile
  1378                           
  1379                           ;spi.c: 95: SSP2BUF = s_data;
  1380  0086  0872               	movf	master_send@s_data,w
  1381  0087  0024               	movlb	4	; select bank4
  1382  0088  0099               	movwf	25	;volatile
  1383  0089                     i1l157:	
  1384                           ;spi.c: 96: while(SSP2STATbits.BF == 0);
  1385                           
  1386  0089  1C1C               	btfss	28,0	;volatile
  1387  008A  2889               	goto	i1l157
  1388                           
  1389                           ;spi.c: 97: RA0 = 1;
  1390  008B  0020               	movlb	0	; select bank0
  1391  008C  140C               	bsf	12,0	;volatile
  1392                           
  1393                           ;spi.c: 98: return;
  1394  008D  0008               	return
  1395  008E                     i1l876:	
  1396                           
  1397                           ;spi.c: 99: }
  1398                           ;spi.c: 101: if(obj == 1){
  1399  008E  0370               	decf	master_send@obj,w
  1400  008F  0471               	iorwf	master_send@obj+1,w
  1401  0090  1D03               	btfss	3,2
  1402  0091  289D               	goto	i1l882
  1403                           
  1404                           ;spi.c: 102: RA1 = 0;
  1405  0092  0020               	movlb	0	; select bank0
  1406  0093  108C               	bcf	12,1	;volatile
  1407                           
  1408                           ;spi.c: 103: SSP2BUF = s_data;
  1409  0094  0872               	movf	master_send@s_data,w
  1410  0095  0024               	movlb	4	; select bank4
  1411  0096  0099               	movwf	25	;volatile
  1412  0097                     i1l162:	
  1413                           ;spi.c: 104: while(SSP2STATbits.BF == 0);
  1414                           
  1415  0097  1C1C               	btfss	28,0	;volatile
  1416  0098  2897               	goto	i1l162
  1417                           
  1418                           ;spi.c: 105: RA1 = 1;
  1419  0099  0020               	movlb	0	; select bank0
  1420  009A  148C               	bsf	12,1	;volatile
  1421                           
  1422                           ;spi.c: 106: SSP2IF = 0;
  1423  009B  1014               	bcf	20,0	;volatile
  1424                           
  1425                           ;spi.c: 107: return;
  1426  009C  0008               	return
  1427  009D                     i1l882:	
  1428                           
  1429                           ;spi.c: 108: }
  1430                           ;spi.c: 110: if(obj == 2){
  1431  009D  3002               	movlw	2
  1432  009E  0670               	xorwf	master_send@obj,w
  1433  009F  0471               	iorwf	master_send@obj+1,w
  1434  00A0  1D03               	btfss	3,2
  1435  00A1  28AC               	goto	i1l888
  1436                           
  1437                           ;spi.c: 111: RA2 = 0;
  1438  00A2  0020               	movlb	0	; select bank0
  1439  00A3  110C               	bcf	12,2	;volatile
  1440                           
  1441                           ;spi.c: 112: SSP2BUF = s_data;
  1442  00A4  0872               	movf	master_send@s_data,w
  1443  00A5  0024               	movlb	4	; select bank4
  1444  00A6  0099               	movwf	25	;volatile
  1445  00A7                     i1l166:	
  1446                           ;spi.c: 113: while(SSP2STATbits.BF == 0);
  1447                           
  1448  00A7  1C1C               	btfss	28,0	;volatile
  1449  00A8  28A7               	goto	i1l166
  1450                           
  1451                           ;spi.c: 114: RA2 = 1;
  1452  00A9  0020               	movlb	0	; select bank0
  1453  00AA  150C               	bsf	12,2	;volatile
  1454                           
  1455                           ;spi.c: 115: return;
  1456  00AB  0008               	return
  1457  00AC                     i1l888:	
  1458                           
  1459                           ;spi.c: 116: }
  1460                           ;spi.c: 118: if(obj == 3){
  1461  00AC  3003               	movlw	3
  1462  00AD  0670               	xorwf	master_send@obj,w
  1463  00AE  0471               	iorwf	master_send@obj+1,w
  1464  00AF  1D03               	btfss	3,2
  1465  00B0  28BB               	goto	i1l894
  1466                           
  1467                           ;spi.c: 119: RA3 = 0;
  1468  00B1  0020               	movlb	0	; select bank0
  1469  00B2  118C               	bcf	12,3	;volatile
  1470                           
  1471                           ;spi.c: 120: SSP2BUF = s_data;
  1472  00B3  0872               	movf	master_send@s_data,w
  1473  00B4  0024               	movlb	4	; select bank4
  1474  00B5  0099               	movwf	25	;volatile
  1475  00B6                     i1l170:	
  1476                           ;spi.c: 121: while(SSP2STATbits.BF == 0);
  1477                           
  1478  00B6  1C1C               	btfss	28,0	;volatile
  1479  00B7  28B6               	goto	i1l170
  1480                           
  1481                           ;spi.c: 122: RA3 = 1;
  1482  00B8  0020               	movlb	0	; select bank0
  1483  00B9  158C               	bsf	12,3	;volatile
  1484                           
  1485                           ;spi.c: 123: return;
  1486  00BA  0008               	return
  1487  00BB                     i1l894:	
  1488                           
  1489                           ;spi.c: 124: }
  1490                           ;spi.c: 126: if(obj == 4){
  1491  00BB  3004               	movlw	4
  1492  00BC  0670               	xorwf	master_send@obj,w
  1493  00BD  0471               	iorwf	master_send@obj+1,w
  1494  00BE  1D03               	btfss	3,2
  1495  00BF  28CA               	goto	i1l900
  1496                           
  1497                           ;spi.c: 127: RA4 = 0;
  1498  00C0  0020               	movlb	0	; select bank0
  1499  00C1  120C               	bcf	12,4	;volatile
  1500                           
  1501                           ;spi.c: 128: SSP2BUF = s_data;
  1502  00C2  0872               	movf	master_send@s_data,w
  1503  00C3  0024               	movlb	4	; select bank4
  1504  00C4  0099               	movwf	25	;volatile
  1505  00C5                     i1l174:	
  1506                           ;spi.c: 129: while(SSP2STATbits.BF == 0);
  1507                           
  1508  00C5  1C1C               	btfss	28,0	;volatile
  1509  00C6  28C5               	goto	i1l174
  1510                           
  1511                           ;spi.c: 130: RA4 = 1;
  1512  00C7  0020               	movlb	0	; select bank0
  1513  00C8  160C               	bsf	12,4	;volatile
  1514                           
  1515                           ;spi.c: 131: return;
  1516  00C9  0008               	return
  1517  00CA                     i1l900:	
  1518                           
  1519                           ;spi.c: 132: }
  1520                           ;spi.c: 134: if(obj == 5){
  1521  00CA  3005               	movlw	5
  1522  00CB  0670               	xorwf	master_send@obj,w
  1523  00CC  0471               	iorwf	master_send@obj+1,w
  1524  00CD  1D03               	btfss	3,2
  1525  00CE  28D9               	goto	i1l906
  1526                           
  1527                           ;spi.c: 135: RA7 = 0;
  1528  00CF  0020               	movlb	0	; select bank0
  1529  00D0  138C               	bcf	12,7	;volatile
  1530                           
  1531                           ;spi.c: 136: SSP2BUF = s_data;
  1532  00D1  0872               	movf	master_send@s_data,w
  1533  00D2  0024               	movlb	4	; select bank4
  1534  00D3  0099               	movwf	25	;volatile
  1535  00D4                     i1l178:	
  1536                           ;spi.c: 137: while(SSP2STATbits.BF == 0);
  1537                           
  1538  00D4  1C1C               	btfss	28,0	;volatile
  1539  00D5  28D4               	goto	i1l178
  1540                           
  1541                           ;spi.c: 138: RA7 = 1;
  1542  00D6  0020               	movlb	0	; select bank0
  1543  00D7  178C               	bsf	12,7	;volatile
  1544                           
  1545                           ;spi.c: 139: return;
  1546  00D8  0008               	return
  1547  00D9                     i1l906:	
  1548                           
  1549                           ;spi.c: 140: }
  1550                           ;spi.c: 142: if(obj == 6){
  1551  00D9  3006               	movlw	6
  1552  00DA  0670               	xorwf	master_send@obj,w
  1553  00DB  0471               	iorwf	master_send@obj+1,w
  1554  00DC  1D03               	btfss	3,2
  1555  00DD  28E8               	goto	i1l912
  1556                           
  1557                           ;spi.c: 143: RB0 = 0;
  1558  00DE  0020               	movlb	0	; select bank0
  1559  00DF  100D               	bcf	13,0	;volatile
  1560                           
  1561                           ;spi.c: 144: SSP2BUF = s_data;
  1562  00E0  0872               	movf	master_send@s_data,w
  1563  00E1  0024               	movlb	4	; select bank4
  1564  00E2  0099               	movwf	25	;volatile
  1565  00E3                     i1l182:	
  1566                           ;spi.c: 145: while(SSP2STATbits.BF == 0);
  1567                           
  1568  00E3  1C1C               	btfss	28,0	;volatile
  1569  00E4  28E3               	goto	i1l182
  1570                           
  1571                           ;spi.c: 146: RB0 = 1;
  1572  00E5  0020               	movlb	0	; select bank0
  1573  00E6  140D               	bsf	13,0	;volatile
  1574                           
  1575                           ;spi.c: 147: return;
  1576  00E7  0008               	return
  1577  00E8                     i1l912:	
  1578                           
  1579                           ;spi.c: 148: }
  1580                           ;spi.c: 150: if(obj == 7){
  1581  00E8  3007               	movlw	7
  1582  00E9  0670               	xorwf	master_send@obj,w
  1583  00EA  0471               	iorwf	master_send@obj+1,w
  1584  00EB  1D03               	btfss	3,2
  1585  00EC  28F7               	goto	i1l918
  1586                           
  1587                           ;spi.c: 151: RB3 = 0;
  1588  00ED  0020               	movlb	0	; select bank0
  1589  00EE  118D               	bcf	13,3	;volatile
  1590                           
  1591                           ;spi.c: 152: SSP2BUF = s_data;
  1592  00EF  0872               	movf	master_send@s_data,w
  1593  00F0  0024               	movlb	4	; select bank4
  1594  00F1  0099               	movwf	25	;volatile
  1595  00F2                     i1l186:	
  1596                           ;spi.c: 153: while(SSP2STATbits.BF == 0);
  1597                           
  1598  00F2  1C1C               	btfss	28,0	;volatile
  1599  00F3  28F2               	goto	i1l186
  1600                           
  1601                           ;spi.c: 154: RB3 = 1;
  1602  00F4  0020               	movlb	0	; select bank0
  1603  00F5  158D               	bsf	13,3	;volatile
  1604                           
  1605                           ;spi.c: 155: return;
  1606  00F6  0008               	return
  1607  00F7                     i1l918:	
  1608                           
  1609                           ;spi.c: 156: }
  1610                           ;spi.c: 158: if(obj == 8){
  1611  00F7  3008               	movlw	8
  1612  00F8  0670               	xorwf	master_send@obj,w
  1613  00F9  0471               	iorwf	master_send@obj+1,w
  1614  00FA  1D03               	btfss	3,2
  1615  00FB  2906               	goto	i1l924
  1616                           
  1617                           ;spi.c: 159: RB6 = 0;
  1618  00FC  0020               	movlb	0	; select bank0
  1619  00FD  130D               	bcf	13,6	;volatile
  1620                           
  1621                           ;spi.c: 160: SSP2BUF = s_data;
  1622  00FE  0872               	movf	master_send@s_data,w
  1623  00FF  0024               	movlb	4	; select bank4
  1624  0100  0099               	movwf	25	;volatile
  1625  0101                     i1l190:	
  1626                           ;spi.c: 161: while(SSP2STATbits.BF == 0);
  1627                           
  1628  0101  1C1C               	btfss	28,0	;volatile
  1629  0102  2901               	goto	i1l190
  1630                           
  1631                           ;spi.c: 162: RB6 = 1;
  1632  0103  0020               	movlb	0	; select bank0
  1633  0104  170D               	bsf	13,6	;volatile
  1634                           
  1635                           ;spi.c: 163: return;
  1636  0105  0008               	return
  1637  0106                     i1l924:	
  1638                           
  1639                           ;spi.c: 164: }
  1640                           ;spi.c: 166: if(obj == 9){
  1641  0106  3009               	movlw	9
  1642  0107  0670               	xorwf	master_send@obj,w
  1643  0108  0471               	iorwf	master_send@obj+1,w
  1644  0109  1D03               	btfss	3,2
  1645  010A  0008               	return
  1646                           
  1647                           ;spi.c: 167: RB7 = 0;
  1648  010B  0020               	movlb	0	; select bank0
  1649  010C  138D               	bcf	13,7	;volatile
  1650                           
  1651                           ;spi.c: 168: SSP2BUF = s_data;
  1652  010D  0872               	movf	master_send@s_data,w
  1653  010E  0024               	movlb	4	; select bank4
  1654  010F  0099               	movwf	25	;volatile
  1655  0110                     i1l194:	
  1656                           ;spi.c: 169: while(SSP2STATbits.BF == 0);
  1657                           
  1658  0110  1C1C               	btfss	28,0	;volatile
  1659  0111  2910               	goto	i1l194
  1660                           
  1661                           ;spi.c: 170: RB7 = 1;
  1662  0112  0020               	movlb	0	; select bank0
  1663  0113  178D               	bsf	13,7	;volatile
  1664                           
  1665                           ;spi.c: 171: return;
  1666  0114  0008               	return
  1667  0115                     __end_of_master_send:	
  1668  007E                     btemp	set	126	;btemp
  1669  007E                     wtemp	set	126
  1670  007E                     wtemp0	set	126
  1671  0080                     wtemp1	set	128
  1672  0082                     wtemp2	set	130
  1673  0084                     wtemp3	set	132
  1674  0086                     wtemp4	set	134
  1675  0088                     wtemp5	set	136
  1676  007F                     wtemp6	set	127
  1677  007E                     ttemp	set	126
  1678  007E                     ttemp0	set	126
  1679  0081                     ttemp1	set	129
  1680  0084                     ttemp2	set	132
  1681  0087                     ttemp3	set	135
  1682  007F                     ttemp4	set	127
  1683  007E                     ltemp	set	126
  1684  007E                     ltemp0	set	126
  1685  0082                     ltemp1	set	130
  1686  0086                     ltemp2	set	134
  1687  0080                     ltemp3	set	128


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         3
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      7      10
    BANK0            80      0       0
    BANK1            80      0       0
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            48      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _inter in COMMON

    _inter->_master_send
    _inter->_slave_read

Critical Paths under _main in BANK0

    None.

Critical Paths under _inter in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _inter in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _inter in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _inter in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _inter in BANK4

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0       0
                         _master_reg
                            _pic_reg
                               _shot
                          _slave_reg
 ---------------------------------------------------------------------------------
 (1) _slave_reg                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _shot                                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _pic_reg                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _master_reg                                           0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _inter                                                4     4      0     758
                                              3 COMMON     4     4      0
                        _master_send
                         _slave_read
                             i1_shot
 ---------------------------------------------------------------------------------
 (3) i1_shot                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _slave_read                                           3     1      2       0
                                              0 COMMON     3     1      2
 ---------------------------------------------------------------------------------
 (3) _master_send                                          3     0      3     758
                                              0 COMMON     3     0      3
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _master_reg
   _pic_reg
   _shot
   _slave_reg

 _inter (ROOT)
   _master_send
   _slave_read
   i1_shot

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             170      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      7       A       2       71.4%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0       A       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITBANK3            50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BANK3               50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITBANK4            30      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BANK4               30      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
DATA                 0      0       A      15        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.34 build -361300703 
Symbol Table                                                                                   Mon Oct 12 16:16:53 2015

            __CFG_CP$OFF 0000                      _GIE 005F                      _RA0 0060  
                    _RA1 0061                      _RB0 0068                      _RA2 0062  
                    _RA3 0063                      _RA4 0064                      _RB3 006B  
                    _RA7 0067                      _RB6 006E                      _RB7 006F  
           __CFG_CPD$OFF 0000             __CFG_BORV$LO 0000             __CFG_LVP$OFF 0000  
                   l1036 014D                     _PEIE 005E                     i1l47 0028  
                   i1l56 0074                     i1l48 0027                     _WPUB 020D  
           __CFG_WRT$OFF 0000                     _main 0142                     _shot 0162  
                   btemp 007E                     ltemp 007E                     start 0078  
                   ttemp 007E                     wtemp 007E            __CFG_IESO$OFF 0000  
                  ?_main 0070            __CFG_WDTE$OFF 0000                    ?_shot 0070  
                  _IOCBF 0396                    _IOCBN 0395                    _IOCBP 0394  
                  _IOCIE 005B                    _IOCIF 0058                    i1l170 00B6  
                  i1l162 0097                    i1l157 0089                    i1l190 0101  
                  i1l182 00E3                    i1l174 00C5                    i1l166 00A7  
                  i1l194 0110                    i1l186 00F2                    i1l178 00D4  
                  i1l900 00CA                    i1l912 00E8                    i1l906 00D9  
                  i1l924 0106                    i1l918 00F7                    i1l960 0038  
                  i1l882 009D                    i1l866 013D                    i1l876 008E  
                  i1l894 00BB                    i1l974 0067                    i1l888 00AC  
                  _PORTA 000C                    _PORTB 000D                    u61_27 0051  
                  _TRISA 008C                    _TRISB 008D           __CFG_FCMEN$OFF 0000  
           ?_master_send 0070                    _inter 0004          __end_of_pic_reg 012D  
         __CFG_BOREN$OFF 0000                    ltemp0 007E                    ltemp1 0082  
                  ltemp2 0086                    ltemp3 0080                    ttemp0 007E  
                  ttemp1 0081                    ttemp2 0084                    ttemp3 0087  
                  ttemp4 007F                    status 0003                    wtemp0 007E  
                  wtemp1 0080                    wtemp2 0082                    wtemp3 0084  
                  wtemp4 0086                    wtemp5 0088                    wtemp6 007F  
         __CFG_MCLRE$OFF 0000          __initialization 007A             __end_of_main 0156  
           __end_of_shot 016B                   ??_main 0000                   ??_shot 0000  
         __CFG_PLLEN$OFF 0000                   ?_inter 0070                   _ANSELA 018C  
                 _ANSELB 018D                   _OSCCON 0099                   _SS1SEL 08ED  
                 _SSP1IE 048B                   _SSP1IF 008B                   _SSP2IE 04A0  
                 _SSP2IF 00A0                   i1_shot 0174           __CFG_PWRTE$OFF 0000  
                 _r_data 0079                ??_pic_reg 0000        master_send@s_data 0072  
__end_of__initialization 007D           __pcstackCOMMON 0070            __end_of_inter 0078  
                ??_inter 0073     __size_of_master_send 0095                  ?i1_shot 0070  
             __pmaintext 0142               __pintentry 0004       __size_of_slave_reg 000C  
                _SDO1SEL 08EE                  _SSP1BUF 0211                  _SSP2BUF 0219  
        __size_ofi1_shot 0009          __CFG_STVREN$OFF 0000               _master_reg 016B  
                __ptext0 0000                  __ptext1 0156                  __ptext2 0162  
                __ptext3 0115                  __ptext4 016B                  __ptext6 0174  
                __ptext7 012D                  __ptext8 0080                  _pic_reg 0115  
              _IOCBFbits 0396     end_of_initialization 007D        __end_of_slave_reg 0162  
             _slave_read 012D         __CFG_FOSC$INTOSC 0000           __end_ofi1_shot 017D  
            ?_master_reg 0070      start_initialization 007A                 ??i1_shot 0070  
            ?_slave_read 0070              __pbssCOMMON 0077                ___latbits 0001  
          __pcstackBANK0 0000            ??_master_send 0073      __size_of_master_reg 0009  
               ?_pic_reg 0070           __size_of_inter 0074      __size_of_slave_read 0015  
    __end_of_master_send 0115                _slave_reg 0156                 _SSP1CON1 0215  
               _SSP2CON1 021D                 _SSP1STAT 0214                 _SSP2STAT 021C  
              _turn_flag 0077               ?_slave_reg 0070             ??_master_reg 0000  
       __size_of_pic_reg 0018              _master_send 0080            __size_of_main 0014  
          __size_of_shot 0009       __end_of_master_reg 0174             ??_slave_read 0072  
           _SSP1STATbits 0214             _SSP2STATbits 021C           master_send@obj 0070  
               intlevel1 0000       __end_of_slave_read 0142        __CFG_CLKOUTEN$OFF 0000  
            ??_slave_reg 0000               _OPTION_REG 0095  
